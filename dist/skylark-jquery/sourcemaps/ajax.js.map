{"version":3,"sources":["ajax.js"],"names":["define","$","triggerAndReturn","context","eventName","data","event","Event","trigger","isDefaultPrevented","triggerGlobal","settings","global","document","ajaxStart","active","ajaxStop","ajaxBeforeSend","xhr","beforeSend","call","ajaxSuccess","deferred","status","success","resolveWith","ajaxComplete","ajaxError","error","type","rejectWith","complete","empty","mimeToDataType","mime","split","htmlType","jsonType","scriptTypeRE","test","xmlTypeRE","appendQuery","url","query","replace","serializeData","options","processData","param","traditional","toUpperCase","undefined","parseArguments","dataType","isFunction","serialize","params","obj","scope","array","isArray","hash","isPlainObject","each","key","value","add","name","addToPrefiltersOrTransports","structure","dataTypeExpression","func","i","dataTypes","toLowerCase","match","rnotwhite","jQuery","slice","unshift","push","ajaxExtend","target","src","deep","flatOptions","ajaxSettings","extend","jsonpID","window","rscript","blankRE","originAnchor","createElement","href","location","ajaxJSONP","ajax","responseData","abortTimeout","_callbackName","jsonpCallback","callbackName","script","originalCallback","abort","errorType","triggerHandler","promise","on","e","clearTimeout","off","remove","arguments","head","appendChild","timeout","setTimeout","XMLHttpRequest","accepts","json","xml","html","text","crossDomain","cache","urlAnchor","Deferred","protocol","host","toString","hasPlaceholder","Date","now","jsonp","headers","setHeader","RegExp","$1","nativeSetHeader","setRequestHeader","mimeType","indexOf","overrideMimeType","contentType","onreadystatechange","readyState","result","getResponseHeader","responseText","eval","responseXML","parseJSON","statusText","xhrFields","async","open","username","password","apply","send","get","post","getJSON","fn","load","this","length","selector","self","parts","callback","response","find","escape","encodeURIComponent","join","prefilters","transports","ajaxPrefilter","ajaxTransport","ajaxSetup"],"mappings":";;;;;;;AAAAA,QACI,SACA,cACD,SAASC,GAoBR,QAASC,GAAiBC,EAASC,EAAWC,GAC1C,GAAIC,GAAQL,EAAEM,MAAMH,EAEpB,OADAH,GAAEE,GAASK,QAAQF,EAAOD,IAClBC,EAAMG,qBAIlB,QAASC,GAAcC,EAAUR,EAASC,EAAWC,GACjD,GAAIM,EAASC,OAAQ,MAAOV,GAAiBC,GAAWU,EAAUT,EAAWC,GAMjF,QAASS,GAAUH,GACXA,EAASC,QAAyB,IAAfX,EAAEc,UAAgBL,EAAcC,EAAU,KAAM,aAG3E,QAASK,GAASL,GACVA,EAASC,WAAcX,EAAEc,QAASL,EAAcC,EAAU,KAAM,YAIxE,QAASM,GAAeC,EAAKP,GACzB,GAAIR,GAAUQ,EAASR,OACvB,OAAIQ,GAASQ,WAAWC,KAAKjB,EAASe,EAAKP,MAAc,GACrDD,EAAcC,EAAUR,EAAS,kBAAmBe,EAAKP,OAAe,OAG5ED,GAAcC,EAAUR,EAAS,YAAae,EAAKP,IAGvD,QAASU,GAAYhB,EAAMa,EAAKP,EAAUW,GACtC,GAAInB,GAAUQ,EAASR,QACnBoB,EAAS,SACbZ,GAASa,QAAQJ,KAAKjB,EAASE,EAAMkB,EAAQL,GACzCI,GAAUA,EAASG,YAAYtB,GAAUE,EAAMkB,EAAQL,IAC3DR,EAAcC,EAAUR,EAAS,eAAgBe,EAAKP,EAAUN,IAChEqB,EAAaH,EAAQL,EAAKP,GAG9B,QAASgB,GAAUC,EAAOC,EAAMX,EAAKP,EAAUW,GAC3C,GAAInB,GAAUQ,EAASR,OACvBQ,GAASiB,MAAMR,KAAKjB,EAASe,EAAKW,EAAMD,GACpCN,GAAUA,EAASQ,WAAW3B,GAAUe,EAAKW,EAAMD,IACvDlB,EAAcC,EAAUR,EAAS,aAAce,EAAKP,EAAUiB,GAASC,IACvEH,EAAaG,EAAMX,EAAKP,GAG5B,QAASe,GAAaH,EAAQL,EAAKP,GAC/B,GAAIR,GAAUQ,EAASR,OACvBQ,GAASoB,SAASX,KAAKjB,EAASe,EAAKK,GACrCb,EAAcC,EAAUR,EAAS,gBAAiBe,EAAKP,IACvDK,EAASL,GAIb,QAASqB,MA6FT,QAASC,GAAeC,GAEpB,MADIA,KAAMA,EAAOA,EAAKC,MAAM,IAAK,GAAG,IAC7BD,IAASA,GAAQE,EAAW,OAC/BF,GAAQG,EAAW,OACnBC,EAAaC,KAAKL,GAAQ,SAC1BM,EAAUD,KAAKL,IAAS,QAAU,OAG1C,QAASO,GAAYC,EAAKC,GACtB,MAAa,IAATA,EAAoBD,GAChBA,EAAM,IAAMC,GAAOC,QAAQ,YAAa,KAIpD,QAASC,GAAcC,GACfA,EAAQC,aAAeD,EAAQzC,MAAgC,UAAxBJ,EAAE4B,KAAKiB,EAAQzC,QACtDyC,EAAQzC,KAAOJ,EAAE+C,MAAMF,EAAQzC,KAAMyC,EAAQG,eAC7CH,EAAQzC,MAAUyC,EAAQjB,MAAsC,OAA9BiB,EAAQjB,KAAKqB,gBAC/CJ,EAAQJ,IAAMD,EAAYK,EAAQJ,IAAKI,EAAQzC,MAAOyC,EAAQzC,KAAO8C,QAgH7E,QAASC,GAAeV,EAAKrC,EAAMmB,EAAS6B,GAGxC,MAFIpD,GAAEqD,WAAWjD,KAAOgD,EAAW7B,EAASA,EAAUnB,EAAMA,EAAO8C,QAC9DlD,EAAEqD,WAAW9B,KAAU6B,EAAW7B,EAASA,EAAU2B,SAEtDT,IAAKA,EACLrC,KAAMA,EACNmB,QAASA,EACT6B,SAAUA,GAuClB,QAASE,GAAUC,EAAQC,EAAKR,EAAaS,GACzC,GAAI7B,GAAM8B,EAAQ1D,EAAE2D,QAAQH,GACxBI,EAAO5D,EAAE6D,cAAcL,EAC3BxD,GAAE8D,KAAKN,EAAK,SAASO,EAAKC,GACtBpC,EAAO5B,EAAE4B,KAAKoC,GACVP,IAAOM,EAAMf,EAAcS,EAC3BA,EAAQ,KAAOG,GAAgB,UAARhC,GAA4B,SAARA,EAAkBmC,EAAM,IAAM,MAExEN,GAASC,EAAOH,EAAOU,IAAID,EAAME,KAAMF,EAAMA,OAEjC,SAARpC,IAAqBoB,GAAuB,UAARpB,EACzC0B,EAAUC,EAAQS,EAAOhB,EAAae,GACrCR,EAAOU,IAAIF,EAAKC,KAqC7B,QAASG,GAA4BC,GAGjC,MAAO,UAASC,EAAoBC,GAEE,gBAAvBD,KACPC,EAAOD,EACPA,EAAqB,IAGzB,IAAIjB,GACAmB,EAAI,EACJC,EAAYH,EAAmBI,cAAcC,MAAMC,MAEvD,IAAIC,OAAOvB,WAAWiB,GAGlB,KAAQlB,EAAWoB,EAAUD,MAGL,MAAhBnB,EAAS,IACTA,EAAWA,EAASyB,MAAM,IAAM,KAC/BT,EAAUhB,GAAYgB,EAAUhB,QAAiB0B,QAAQR,KAIzDF,EAAUhB,GAAYgB,EAAUhB,QAAiB2B,KAAKT,IAa3E,QAASU,GAAWC,EAAQC,GACxB,GAAInB,GAAKoB,EACLC,EAAcR,OAAOS,aAAaD,eAEtC,KAAKrB,IAAOmB,GACShC,SAAbgC,EAAInB,MACHqB,EAAYrB,GAAOkB,EAAUE,IAASA,OAAapB,GAAOmB,EAAInB,GAOvE,OAJIoB,IACAP,OAAOU,QAAO,EAAML,EAAQE,GAGzBF,EA1bX,GAEIlB,GACAG,EAHAqB,EAAU,EACV3E,EAAW4E,OAAO5E,SAGlB6E,EAAU,sDACVpD,EAAe,qCACfE,EAAY,8BACZH,EAAW,mBACXD,EAAW,YACXuD,EAAU,QACVC,EAAe/E,EAASgF,cAAc,IAE1CD,GAAaE,KAAOL,OAAOM,SAASD,KAepC7F,EAAEc,OAAS,EA+CXd,EAAE+F,UAAY,SAASlD,EAASxB,GAC5B,KAAM,QAAUwB,IAAU,MAAO7C,GAAEgG,KAAKnD,EAExC,IAKIoD,GAKAC,EAVAC,EAAgBtD,EAAQuD,cACxBC,GAAgBrG,EAAEqD,WAAW8C,GACzBA,IAAkBA,IAAmB,WAAaZ,EACtDe,EAAS1F,EAASgF,cAAc,UAChCW,EAAmBf,OAAOa,GAE1BG,EAAQ,SAASC,GACbzG,EAAEsG,GAAQI,eAAe,QAASD,GAAa,UAEnDxF,GAAQuF,MAAOA,EAsBnB,OAnBInF,IAAUA,EAASsF,QAAQ1F,GAE/BjB,EAAEsG,GAAQM,GAAG,aAAc,SAASC,EAAGJ,GACnCK,aAAaZ,GACblG,EAAEsG,GAAQS,MAAMC,SAEF,SAAVH,EAAEjF,MAAoBqE,EAGtB7E,EAAY6E,EAAa,GAAIhF,EAAK4B,EAASxB,GAF3CK,EAAU,KAAM+E,GAAa,QAASxF,EAAK4B,EAASxB,GAKxDmE,OAAOa,GAAgBE,EACnBN,GAAgBjG,EAAEqD,WAAWkD,IAC7BA,EAAiBN,EAAa,IAElCM,EAAmBN,EAAe/C,SAGlClC,EAAeC,EAAK4B,MAAa,GACjC2D,EAAM,SACCvF,IAGXuE,OAAOa,GAAgB,WACnBJ,EAAegB,WAGnBX,EAAOpB,IAAMrC,EAAQJ,IAAIE,QAAQ,YAAa,OAAS0D,GACvDzF,EAASsG,KAAKC,YAAYb,GAEtBzD,EAAQuE,QAAU,IAAGlB,EAAemB,WAAW,WAC/Cb,EAAM,YACP3D,EAAQuE,UAEJnG,IAGXjB,EAAEqF,cAEEzD,KAAM,MAENV,WAAYa,EAEZR,QAASQ,EAETJ,MAAOI,EAEPD,SAAUC,EAEV7B,QAAS,KAETS,QAAQ,EAERM,IAAK,WACD,MAAO,IAAIuE,QAAO8B,gBAItBC,SACIjB,OAAQ,oEACRkB,KAAMpF,EACNqF,IAAK,4BACLC,KAAMvF,EACNwF,KAAM,cAGVC,aAAa,EAEbR,QAAS,EAETtE,aAAa,EAEb+E,OAAO,GAwBX7H,EAAEgG,KAAO,SAASnD,GACd,GAEIiF,GAFApH,EAAWV,EAAEsF,UAAWzC,OACxBxB,EAAWrB,EAAE+H,UAAY/H,EAAE+H,UAE/B,KAAKhE,IAAO/D,GAAEqF,aACYnC,SAAlBxC,EAASqD,KAAoBrD,EAASqD,GAAO/D,EAAEqF,aAAatB,GAEpElD,GAAUH,GAELA,EAASkH,cACVE,EAAYlH,EAASgF,cAAc,KACnCkC,EAAUjC,KAAOnF,EAAS+B,IAC1BqF,EAAUjC,KAAOiC,EAAUjC,KAC3BnF,EAASkH,YAAejC,EAAaqC,SAAW,KAAOrC,EAAasC,MAAWH,EAAUE,SAAW,KAAOF,EAAUG,MAGpHvH,EAAS+B,MAAK/B,EAAS+B,IAAM+C,OAAOM,SAASoC,YAClDtF,EAAclC,EAEd,IAAI0C,GAAW1C,EAAS0C,SACpB+E,EAAiB,UAAU7F,KAAK5B,EAAS+B,IAS7C,IARI0F,IAAgB/E,EAAW,SAE3B1C,EAASmH,SAAU,IACbhF,GAAWA,EAAQgF,SAAU,GAC9B,UAAYzE,GAAY,SAAWA,KAExC1C,EAAS+B,IAAMD,EAAY9B,EAAS+B,IAAK,KAAO2F,KAAKC,QAErD,SAAWjF,EAIX,MAHK+E,KACDzH,EAAS+B,IAAMD,EAAY9B,EAAS+B,IAChC/B,EAAS4H,MAAS5H,EAAS4H,MAAQ,KAAQ5H,EAAS4H,SAAU,EAAQ,GAAK,eAC5EtI,EAAE+F,UAAUrF,EAAUW,EAGjC,IAMI6E,GANAjE,EAAOvB,EAAS6G,QAAQnE,GACxBmF,KACAC,EAAY,SAAStE,EAAMF,GAASuE,EAAQrE,EAAKO,gBAAkBP,EAAMF,IACzEgE,EAAW,iBAAiB1F,KAAK5B,EAAS+B,KAAOgG,OAAOC,GAAKlD,OAAOM,SAASkC,SAC7E/G,EAAMP,EAASO,MACf0H,EAAkB1H,EAAI2H,gBAc1B,IAXIvH,GAAUA,EAASsF,QAAQ1F,GAE1BP,EAASkH,aAAaY,EAAU,mBAAoB,kBACzDA,EAAU,SAAUvG,GAAQ,QACxBA,EAAOvB,EAASmI,UAAY5G,KACxBA,EAAK6G,QAAQ,UAAW7G,EAAOA,EAAKC,MAAM,IAAK,GAAG,IACtDjB,EAAI8H,kBAAoB9H,EAAI8H,iBAAiB9G,KAE7CvB,EAASsI,aAAgBtI,EAASsI,eAAgB,GAAStI,EAASN,MAAuC,OAA/BM,EAASkB,KAAKqB,gBAC1FuF,EAAU,eAAgB9H,EAASsI,aAAe,qCAElDtI,EAAS6H,QACT,IAAKrE,IAAQxD,GAAS6H,QAASC,EAAUtE,EAAMxD,EAAS6H,QAAQrE,GA2BpE,IA1BAjD,EAAI2H,iBAAmBJ,EAEvBvH,EAAIgI,mBAAqB,WACrB,GAAsB,GAAlBhI,EAAIiI,WAAiB,CACrBjI,EAAIgI,mBAAqBlH,EACzB+E,aAAaZ,EACb,IAAIiD,GAAQxH,GAAQ,CACpB,IAAKV,EAAIK,QAAU,KAAOL,EAAIK,OAAS,KAAsB,KAAdL,EAAIK,QAAgC,GAAdL,EAAIK,QAA2B,SAAZ0G,EAAsB,CAC1G5E,EAAWA,GAAYpB,EAAetB,EAASmI,UAAY5H,EAAImI,kBAAkB,iBACjFD,EAASlI,EAAIoI,YAEb,KAEoB,UAAZjG,GAAqB,EAAIkG,MAAMH,GACd,OAAZ/F,EAAmB+F,EAASlI,EAAIsI,YACpB,QAAZnG,IAAoB+F,EAASzD,EAAQpD,KAAK6G,GAAU,KAAOnJ,EAAEwJ,UAAUL,IAClF,MAAOtC,GAAKlF,EAAQkF,EAElBlF,EAAOD,EAAUC,EAAO,cAAeV,EAAKP,EAAUW,GACrDD,EAAY+H,EAAQlI,EAAKP,EAAUW,OAExCK,GAAUT,EAAIwI,YAAc,KAAMxI,EAAIK,OAAS,QAAU,QAASL,EAAKP,EAAUW,KAKzFL,EAAeC,EAAKP,MAAc,EAGlC,MAFAO,GAAIuF,QACJ9E,EAAU,KAAM,QAAST,EAAKP,EAAUW,GACjCJ,CAGX,IAAIP,EAASgJ,UACT,IAAKxF,IAAQxD,GAASgJ,UAAWzI,EAAIiD,GAAQxD,EAASgJ,UAAUxF,EAEpE,IAAIyF,KAAQ,SAAWjJ,KAAWA,EAASiJ,KAC3C1I,GAAI2I,KAAKlJ,EAASkB,KAAMlB,EAAS+B,IAAKkH,EAAOjJ,EAASmJ,SAAUnJ,EAASoJ,SAEzE,KAAK5F,IAAQqE,GAASI,EAAgBoB,MAAM9I,EAAKsH,EAAQrE,GAUzD,OARIxD,GAAS0G,QAAU,IAAGlB,EAAemB,WAAW,WAChDpG,EAAIgI,mBAAqBlH,EACzBd,EAAIuF,QACJ9E,EAAU,KAAM,UAAWT,EAAKP,EAAUW,IAC3CX,EAAS0G,UAGZnG,EAAI+I,KAAKtJ,EAASN,KAAOM,EAASN,KAAO,MAClCa,GAeXjB,EAAEiK,IAAM,WACJ,MAAOjK,GAAEgG,KAAK7C,EAAe4G,MAAM,KAAM9C,aAG7CjH,EAAEkK,KAAO,WACL,GAAIrH,GAAUM,EAAe4G,MAAM,KAAM9C,UAEzC,OADApE,GAAQjB,KAAO,OACR5B,EAAEgG,KAAKnD,IAGlB7C,EAAEmK,QAAU,WACR,GAAItH,GAAUM,EAAe4G,MAAM,KAAM9C,UAEzC,OADApE,GAAQO,SAAW,OACZpD,EAAEgG,KAAKnD,IAGlB7C,EAAEoK,GAAGC,KAAO,SAAS5H,EAAKrC,EAAMmB,GAC5B,IAAK+I,KAAKC,OAAQ,MAAOD,KACzB,IAEIE,GAFAC,EAAOH,KACPI,EAAQjI,EAAIP,MAAM,MAElBW,EAAUM,EAAeV,EAAKrC,EAAMmB,GACpCoJ,EAAW9H,EAAQtB,OAQvB,OAPImJ,GAAMH,OAAS,IAAG1H,EAAQJ,IAAMiI,EAAM,GAAIF,EAAWE,EAAM,IAC/D7H,EAAQtB,QAAU,SAASqJ,GACvBH,EAAK/C,KAAK8C,EACNxK,EAAE,SAAS0H,KAAKkD,EAASjI,QAAQ8C,EAAS,KAAKoF,KAAKL,GAAYI,GACpED,GAAYA,EAASZ,MAAMU,EAAMxD,YAErCjH,EAAEgG,KAAKnD,GACAyH,KAGX,IAAIQ,GAASC,kBAkBb/K,GAAE+C,MAAQ,SAASS,EAAKR,GACpB,GAAIO,KAOJ,OANAA,GAAOU,IAAM,SAASF,EAAKC,GACnBhE,EAAEqD,WAAWW,KAAQA,EAAQA,KACpB,MAATA,IAAeA,EAAQ,IAC3BsG,KAAKvF,KAAK+F,EAAO/G,GAAO,IAAM+G,EAAO9G,KAEzCV,EAAUC,EAAQC,EAAKR,GAChBO,EAAOyH,KAAK,KAAKrI,QAAQ,OAAQ,KAG5C,IAUIsI,MAOAC,KACAvG,EAAY,MAmGhB,OA9DA3E,GAAEmL,cAAgBhH,EAA4B8G,GAC9CjL,EAAEoL,cAAgBjH,EAA4B+G,GAwB9ClL,EAAEqL,UAAY,SAASpG,EAAQvE,GAC3B,MAAOA,GAGHsE,EAAWA,EAAWC,EAAQL,OAAOS,cAAe3E,GAGpDsE,EAAWJ,OAAOS,aAAcJ,IA8BjCjF","file":"../ajax.js","sourcesContent":["define([\r\n    \"./core\",\r\n    \"./deferred\"\r\n], function($) {\r\n    //     zepto.ajax.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    var jsonpID = 0,\r\n        document = window.document,\r\n        key,\r\n        name,\r\n        rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n        xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n        jsonType = 'application/json',\r\n        htmlType = 'text/html',\r\n        blankRE = /^\\s*$/,\r\n        originAnchor = document.createElement('a');\r\n\r\n    originAnchor.href = window.location.href;\r\n\r\n    // trigger a custom event and return false if it was cancelled\r\n    function triggerAndReturn(context, eventName, data) {\r\n        var event = $.Event(eventName)\r\n        $(context).trigger(event, data)\r\n        return !event.isDefaultPrevented()\r\n    }\r\n\r\n    // trigger an Ajax \"global\" event\r\n    function triggerGlobal(settings, context, eventName, data) {\r\n        if (settings.global) return triggerAndReturn(context || document, eventName, data)\r\n    }\r\n\r\n    // Number of active Ajax requests\r\n    $.active = 0;\r\n\r\n    function ajaxStart(settings) {\r\n        if (settings.global && $.active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\r\n    }\r\n\r\n    function ajaxStop(settings) {\r\n        if (settings.global && !(--$.active)) triggerGlobal(settings, null, 'ajaxStop')\r\n    }\r\n\r\n    // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\r\n    function ajaxBeforeSend(xhr, settings) {\r\n        var context = settings.context\r\n        if (settings.beforeSend.call(context, xhr, settings) === false ||\r\n            triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\r\n            return false\r\n\r\n        triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\r\n    }\r\n\r\n    function ajaxSuccess(data, xhr, settings, deferred) {\r\n        var context = settings.context,\r\n            status = 'success'\r\n        settings.success.call(context, data, status, xhr)\r\n        if (deferred) deferred.resolveWith(context, [data, status, xhr])\r\n        triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\r\n        ajaxComplete(status, xhr, settings)\r\n    }\r\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\r\n    function ajaxError(error, type, xhr, settings, deferred) {\r\n        var context = settings.context\r\n        settings.error.call(context, xhr, type, error)\r\n        if (deferred) deferred.rejectWith(context, [xhr, type, error])\r\n        triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\r\n        ajaxComplete(type, xhr, settings)\r\n    }\r\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\r\n    function ajaxComplete(status, xhr, settings) {\r\n        var context = settings.context\r\n        settings.complete.call(context, xhr, status)\r\n        triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\r\n        ajaxStop(settings)\r\n    }\r\n\r\n    // Empty function, used as default callback\r\n    function empty() {}\r\n\r\n    $.ajaxJSONP = function(options, deferred) {\r\n        if (!('type' in options)) return $.ajax(options)\r\n\r\n        var _callbackName = options.jsonpCallback,\r\n            callbackName = ($.isFunction(_callbackName) ?\r\n                _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\r\n            script = document.createElement('script'),\r\n            originalCallback = window[callbackName],\r\n            responseData,\r\n            abort = function(errorType) {\r\n                $(script).triggerHandler('error', errorType || 'abort')\r\n            },\r\n            xhr = { abort: abort },\r\n            abortTimeout\r\n\r\n        if (deferred) deferred.promise(xhr)\r\n\r\n        $(script).on('load error', function(e, errorType) {\r\n            clearTimeout(abortTimeout)\r\n            $(script).off().remove()\r\n\r\n            if (e.type == 'error' || !responseData) {\r\n                ajaxError(null, errorType || 'error', xhr, options, deferred)\r\n            } else {\r\n                ajaxSuccess(responseData[0], xhr, options, deferred)\r\n            }\r\n\r\n            window[callbackName] = originalCallback\r\n            if (responseData && $.isFunction(originalCallback))\r\n                originalCallback(responseData[0])\r\n\r\n            originalCallback = responseData = undefined\r\n        })\r\n\r\n        if (ajaxBeforeSend(xhr, options) === false) {\r\n            abort('abort')\r\n            return xhr\r\n        }\r\n\r\n        window[callbackName] = function() {\r\n            responseData = arguments\r\n        }\r\n\r\n        script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\r\n        document.head.appendChild(script)\r\n\r\n        if (options.timeout > 0) abortTimeout = setTimeout(function() {\r\n            abort('timeout')\r\n        }, options.timeout)\r\n\r\n        return xhr;\r\n    }\r\n\r\n    $.ajaxSettings = {\r\n        // Default type of request\r\n        type: 'GET',\r\n        // Callback that is executed before request\r\n        beforeSend: empty,\r\n        // Callback that is executed if the request succeeds\r\n        success: empty,\r\n        // Callback that is executed the the server drops error\r\n        error: empty,\r\n        // Callback that is executed on request complete (both: error and success)\r\n        complete: empty,\r\n        // The context for the callbacks\r\n        context: null,\r\n        // Whether to trigger \"global\" Ajax events\r\n        global: true,\r\n        // Transport\r\n        xhr: function() {\r\n            return new window.XMLHttpRequest()\r\n        },\r\n        // MIME types mapping\r\n        // IIS returns Javascript as \"application/x-javascript\"\r\n        accepts: {\r\n            script: 'text/javascript, application/javascript, application/x-javascript',\r\n            json: jsonType,\r\n            xml: 'application/xml, text/xml',\r\n            html: htmlType,\r\n            text: 'text/plain'\r\n        },\r\n        // Whether the request is to another domain\r\n        crossDomain: false,\r\n        // Default timeout\r\n        timeout: 0,\r\n        // Whether data should be serialized to string\r\n        processData: true,\r\n        // Whether the browser should be allowed to cache GET responses\r\n        cache: true\r\n    }\r\n\r\n    function mimeToDataType(mime) {\r\n        if (mime) mime = mime.split(';', 2)[0]\r\n        return mime && (mime == htmlType ? 'html' :\r\n            mime == jsonType ? 'json' :\r\n            scriptTypeRE.test(mime) ? 'script' :\r\n            xmlTypeRE.test(mime) && 'xml') || 'text'\r\n    }\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') return url\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n    }\r\n\r\n    // serialize payload and append it to the URL for GET requests\r\n    function serializeData(options) {\r\n        if (options.processData && options.data && $.type(options.data) != \"string\")\r\n            options.data = $.param(options.data, options.traditional)\r\n        if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))\r\n            options.url = appendQuery(options.url, options.data), options.data = undefined\r\n    }\r\n\r\n    $.ajax = function(options) {\r\n        var settings = $.extend({}, options || {}),\r\n            deferred = $.Deferred && $.Deferred(),\r\n            urlAnchor\r\n        for (key in $.ajaxSettings)\r\n            if (settings[key] === undefined) settings[key] = $.ajaxSettings[key]\r\n\r\n        ajaxStart(settings)\r\n\r\n        if (!settings.crossDomain) {\r\n            urlAnchor = document.createElement('a')\r\n            urlAnchor.href = settings.url\r\n            urlAnchor.href = urlAnchor.href\r\n            settings.crossDomain = (originAnchor.protocol + '//' + originAnchor.host) !== (urlAnchor.protocol + '//' + urlAnchor.host)\r\n        }\r\n\r\n        if (!settings.url) settings.url = window.location.toString()\r\n        serializeData(settings)\r\n\r\n        var dataType = settings.dataType,\r\n            hasPlaceholder = /\\?.+=\\?/.test(settings.url)\r\n        if (hasPlaceholder) dataType = 'jsonp'\r\n\r\n        if (settings.cache === false || (\r\n                (!options || options.cache !== true) &&\r\n                ('script' == dataType || 'jsonp' == dataType)\r\n            ))\r\n            settings.url = appendQuery(settings.url, '_=' + Date.now())\r\n\r\n        if ('jsonp' == dataType) {\r\n            if (!hasPlaceholder)\r\n                settings.url = appendQuery(settings.url,\r\n                    settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')\r\n            return $.ajaxJSONP(settings, deferred)\r\n        }\r\n\r\n        var mime = settings.accepts[dataType],\r\n            headers = {},\r\n            setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\r\n            protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\r\n            xhr = settings.xhr(),\r\n            nativeSetHeader = xhr.setRequestHeader,\r\n            abortTimeout\r\n\r\n        if (deferred) deferred.promise(xhr)\r\n\r\n        if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest')\r\n        setHeader('Accept', mime || '*/*')\r\n        if (mime = settings.mimeType || mime) {\r\n            if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\r\n            xhr.overrideMimeType && xhr.overrideMimeType(mime)\r\n        }\r\n        if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\r\n            setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\r\n\r\n        if (settings.headers)\r\n            for (name in settings.headers) setHeader(name, settings.headers[name])\r\n        xhr.setRequestHeader = setHeader\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState == 4) {\r\n                xhr.onreadystatechange = empty\r\n                clearTimeout(abortTimeout)\r\n                var result, error = false\r\n                if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\r\n                    dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\r\n                    result = xhr.responseText\r\n\r\n                    try {\r\n                        // http://perfectionkills.com/global-eval-what-are-the-options/\r\n                        if (dataType == 'script')(1, eval)(result)\r\n                        else if (dataType == 'xml') result = xhr.responseXML\r\n                        else if (dataType == 'json') result = blankRE.test(result) ? null : $.parseJSON(result)\r\n                    } catch (e) { error = e }\r\n\r\n                    if (error) ajaxError(error, 'parsererror', xhr, settings, deferred)\r\n                    else ajaxSuccess(result, xhr, settings, deferred)\r\n                } else {\r\n                    ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred)\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ajaxBeforeSend(xhr, settings) === false) {\r\n            xhr.abort()\r\n            ajaxError(null, 'abort', xhr, settings, deferred)\r\n            return xhr\r\n        }\r\n\r\n        if (settings.xhrFields)\r\n            for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\r\n\r\n        var async = 'async' in settings ? settings.async : true\r\n        xhr.open(settings.type, settings.url, async, settings.username, settings.password)\r\n\r\n        for (name in headers) nativeSetHeader.apply(xhr, headers[name])\r\n\r\n        if (settings.timeout > 0) abortTimeout = setTimeout(function() {\r\n            xhr.onreadystatechange = empty\r\n            xhr.abort()\r\n            ajaxError(null, 'timeout', xhr, settings, deferred)\r\n        }, settings.timeout)\r\n\r\n        // avoid sending empty string (#319)\r\n        xhr.send(settings.data ? settings.data : null)\r\n        return xhr\r\n    }\r\n\r\n    // handle optional data/success arguments\r\n    function parseArguments(url, data, success, dataType) {\r\n        if ($.isFunction(data)) dataType = success, success = data, data = undefined\r\n        if (!$.isFunction(success)) dataType = success, success = undefined\r\n        return {\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            dataType: dataType\r\n        }\r\n    }\r\n\r\n    $.get = function( /* url, data, success, dataType */ ) {\r\n        return $.ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    $.post = function( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.type = 'POST'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    $.getJSON = function( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.dataType = 'json'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    $.fn.load = function(url, data, success) {\r\n        if (!this.length) return this\r\n        var self = this,\r\n            parts = url.split(/\\s/),\r\n            selector,\r\n            options = parseArguments(url, data, success),\r\n            callback = options.success\r\n        if (parts.length > 1) options.url = parts[0], selector = parts[1]\r\n        options.success = function(response) {\r\n            self.html(selector ?\r\n                $('<div>').html(response.replace(rscript, \"\")).find(selector) : response)\r\n            callback && callback.apply(self, arguments)\r\n        }\r\n        $.ajax(options)\r\n        return this\r\n    }\r\n\r\n    var escape = encodeURIComponent\r\n\r\n    function serialize(params, obj, traditional, scope) {\r\n        var type, array = $.isArray(obj),\r\n            hash = $.isPlainObject(obj)\r\n        $.each(obj, function(key, value) {\r\n            type = $.type(value)\r\n            if (scope) key = traditional ? scope :\r\n                scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']'\r\n            // handle data in serializeArray() format\r\n            if (!scope && array) params.add(value.name, value.value)\r\n            // recurse into nested objects\r\n            else if (type == \"array\" || (!traditional && type == \"object\"))\r\n                serialize(params, value, traditional, key)\r\n            else params.add(key, value)\r\n        })\r\n    }\r\n\r\n    $.param = function(obj, traditional) {\r\n        var params = []\r\n        params.add = function(key, value) {\r\n            if ($.isFunction(value)) value = value()\r\n            if (value == null) value = \"\"\r\n            this.push(escape(key) + '=' + escape(value))\r\n        }\r\n        serialize(params, obj, traditional)\r\n        return params.join('&').replace(/%20/g, '+')\r\n    };\r\n\r\n    var\r\n        /* Prefilters\r\n         * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\r\n         * 2) These are called:\r\n         *    - BEFORE asking for a transport\r\n         *    - AFTER param serialization (s.data is a string if s.processData is true)\r\n         * 3) key is the dataType\r\n         * 4) the catchall symbol \"*\" can be used\r\n         * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\r\n         */\r\n        prefilters = {},\r\n\r\n        /* Transports bindings\r\n         * 1) key is the dataType\r\n         * 2) the catchall symbol \"*\" can be used\r\n         * 3) selection will start with transport dataType and THEN go to \"*\" if needed\r\n         */\r\n        transports = {},\r\n        rnotwhite = (/\\S+/g);\r\n\r\n\r\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n    function addToPrefiltersOrTransports(structure) {\r\n\r\n        // dataTypeExpression is optional and defaults to \"*\"\r\n        return function(dataTypeExpression, func) {\r\n\r\n            if (typeof dataTypeExpression !== \"string\") {\r\n                func = dataTypeExpression;\r\n                dataTypeExpression = \"*\";\r\n            }\r\n\r\n            var dataType,\r\n                i = 0,\r\n                dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\r\n\r\n            if (jQuery.isFunction(func)) {\r\n\r\n                // For each dataType in the dataTypeExpression\r\n                while ((dataType = dataTypes[i++])) {\r\n\r\n                    // Prepend if requested\r\n                    if (dataType[0] === \"+\") {\r\n                        dataType = dataType.slice(1) || \"*\";\r\n                        (structure[dataType] = structure[dataType] || []).unshift(func);\r\n\r\n                        // Otherwise append\r\n                    } else {\r\n                        (structure[dataType] = structure[dataType] || []).push(func);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    $.ajaxPrefilter = addToPrefiltersOrTransports(prefilters);\r\n    $.ajaxTransport = addToPrefiltersOrTransports(transports);\r\n\r\n    // A special extend for ajax options\r\n    // that takes \"flat\" options (not to be deep extended)\r\n    // Fixes #9887\r\n    function ajaxExtend(target, src) {\r\n        var key, deep,\r\n            flatOptions = jQuery.ajaxSettings.flatOptions || {};\r\n\r\n        for (key in src) {\r\n            if (src[key] !== undefined) {\r\n                (flatOptions[key] ? target : (deep || (deep = {})))[key] = src[key];\r\n            }\r\n        }\r\n        if (deep) {\r\n            jQuery.extend(true, target, deep);\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n    // Creates a full fledged settings object into target\r\n    // with both ajaxSettings and settings fields.\r\n    // If target is omitted, writes into ajaxSettings.\r\n    $.ajaxSetup = function(target, settings) {\r\n        return settings ?\r\n\r\n            // Building a settings object\r\n            ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) :\r\n\r\n            // Extending ajaxSettings\r\n            ajaxExtend(jQuery.ajaxSettings, target);\r\n    };\r\n\r\n    // Base inspection function for prefilters and transports\r\n    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\r\n\r\n        var inspected = {},\r\n            seekingTransport = (structure === transports);\r\n\r\n        function inspect(dataType) {\r\n            var selected;\r\n            inspected[dataType] = true;\r\n            jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {\r\n                var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\r\n                if (typeof dataTypeOrTransport === \"string\" &&\r\n                    !seekingTransport && !inspected[dataTypeOrTransport]) {\r\n\r\n                    options.dataTypes.unshift(dataTypeOrTransport);\r\n                    inspect(dataTypeOrTransport);\r\n                    return false;\r\n                } else if (seekingTransport) {\r\n                    return !(selected = dataTypeOrTransport);\r\n                }\r\n            });\r\n            return selected;\r\n        }\r\n\r\n        return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\r\n    }\r\n\r\n    return $;\r\n\r\n});\r\n"]}