{"version":3,"sources":["skylark-jquery.js"],"names":["define","skylark","langx","browser","noder","datax","eventer","finder","fx","styler","query","$","filter","Array","prototype","slice","fn","jquery","camelCase","cleanData","elems","elem","i","undefined","removeData","elm","name","each","extend","grep","elements","callback","call","attr","isArray","isEmptyObject","isFunction","isWindow","isPlainObject","isNumeric","isNumber","inArray","makeArray","map","noop","parseJSON","window","JSON","parse","proxy","trim","type","props","mixin","serializeArray","result","add","value","forEach","push","this","_","field","nodeName","toLowerCase","disabled","checked","val","serialize","encodeURIComponent","join","Event","src","isString","create","event","special","submit","arguments","bind","length","eq","trigger","isDefaultPrevented","get","triggerHandler","delegate","selector","on","undelegate","off","live","document","body","die","data","unbind","ready","stop","moveto","x","y","animate","left","top","uuid","support","expr","pseudos","filters","createPseudo","cssHooks","contains","css","step","easing","offset","setOffset","options","position","style","curTop","curLeft","curElem","curOffset","curCSSTop","curCSSLeft","calculatePosition","curPosition","parseFloat","using","_data","propName","hasAttribute","t","text","v","r","apply","parseHTML","html","createFragment","uniqueSort","unique","uniq","jQuery","jsonpID","appendQuery","url","replace","parseArguments","success","dataType","ajaxJSONP","responseData","abortTimeout","deferred","Deferred","_callbackName","jsonpCallback","callbackName","script","createElement","originalCallback","abort","errorType","xhr","key","e","clearTimeout","remove","resolve","reject","head","appendChild","timeout","setTimeout","ajaxSettings","Xhr","defaultOptions","XMLHttpRequest","ajax","hasPlaceholder","test","jsonp","p","request","then","error","done","fail","complete","always","post","getJSON","originalLoad","load","addToPrefiltersOrTransports","structure","dataTypeExpression","func","dataTypes","match","rnotwhite","unshift","self","parts","split","response","rscript","find","param","ajaxPrefilter","ajaxTransport","ajaxSetup","target","settings","Callbacks","memory","fired","firing","firingStart","firingLength","firingIndex","list","stack","once","fire","stopOnFalse","shift","disable","start","args","arg","has","index","splice","empty","lock","locked","fireWith","context","d","ret","promise","ret2","when","all","originThen","onResolved","onRejected","results","expando","Math","random","core_rnotwhite","core_push","Data","Object","defineProperty","cache","uid","accepts","owner","nodeType","descriptor","unlock","defineProperties","set","prop","access","stored","camel","concat","hasData","discard","data_priv","queue","dequeue","startLength","hooks","_queueHooks","arr","obj","isArraylike","merge","first","second","l","j","setter","delay","time","speeds","next","clearQueue","tmp","count","defer","resolveWith","types","objects","arrays","plugins","pluginUuid","JqPlugin","Plugin","inherit","klassName","pluginEventPrefix","destroy","overrided","element","eventNamespace","bindings","_construct","defaultElement","pluginName","classesElementLookup","hoverable","focusable","_on","ownerDocument","defaultView","parentWindow","_create","_trigger","_getCreateEventData","_init","_classes","full","that","processClassString","classes","checkOption","current","isTracked","some","is","not","keys","extra","_untrackClassesElement","_off","_removeClass","_toggleClass","_addClass","toggleClass","suppressDisabledCheck","handlers","delegateElement","instance","widget","handler","handlerProxy","hasClass","guid","eventName","orig","widgetEventPrefix","originalEvent","splugins","widgetHasOwnProperty","hasOwnProperty","widgetSlice","events","base","existingConstructor","constructor","namespace","fullName","Widget","basePrototype","newPrototype","_proto","widgetName","widgetFullName","version","_childConstructors","child","childPrototype","register","input","inputIndex","inputLength","_initOptions","_createOptions","_super","_superApply","_setOption","_setOptionClasses","_setOptionDisabled","classKey","currentElements","addClass","enable","_setOptions","_delay","_hoverable","mouseenter","currentTarget","mouseleave","_focusable","focusin","focusout","show","hide","method","defaultEffect","hasOptions","effect","effectName","duration","effects","main"],"mappings":"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","file":"../skylark-jquery.js","sourcesContent":["define('skylark-jquery/core',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-utils-dom/browser\",\r\n\t\"skylark-utils-dom/noder\",\r\n\t\"skylark-utils-dom/datax\",\r\n\t\"skylark-utils-dom/eventer\",\r\n\t\"skylark-utils-dom/finder\",\r\n\t\"skylark-utils-dom/fx\",\r\n\t\"skylark-utils-dom/styler\",\r\n\t\"skylark-utils-dom/query\"\r\n],function(skylark,langx,browser,noder,datax,eventer,finder,fx,styler,query){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n    (function($){\r\n\t    $.fn.jquery = '2.2.0';\r\n\r\n\t    $.browser = browser;\r\n\t    \r\n\t    $.camelCase = langx.camelCase;\r\n\r\n\t\t$.cleanData = function( elems ) {\r\n\t\t\tvar elem,\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\r\n\t\t\t\tdatax.cleanData(elem);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.removeData = function(elm,name) {\r\n\t\t\tdatax.removeData(elm,name);\r\n\t\t}\r\n\t\r\n\t    $.each = langx.each;\r\n\r\n\t    $.extend = langx.extend;\r\n\r\n\t    $.grep = function(elements, callback) {\r\n\t        return filter.call(elements, callback)\r\n\t    };\r\n\r\n\t    $.attr = function(elm,name) {\r\n\t    \treturn datax.attr(elm,name);\r\n\t    };\r\n\r\n\t    $.isArray = langx.isArray;\r\n\t    $.isEmptyObject = langx.isEmptyObject;\r\n\t    $.isFunction = langx.isFunction;\r\n\t    $.isWindow = langx.isWindow;\r\n\t    $.isPlainObject = langx.isPlainObject;\r\n        $.isNumeric = langx.isNumber;\r\n\r\n\t    $.inArray = langx.inArray;\r\n\r\n\t    $.makeArray = langx.makeArray;\r\n\t    $.map = langx.map;  // The behavior is somewhat different from the original jquery.\r\n\r\n\t    $.noop = function() {\r\n\t    };\r\n\r\n\t    $.parseJSON = window.JSON.parse;\r\n\r\n\t    $.proxy = langx.proxy;\r\n\r\n\t    $.trim = langx.trim;\r\n\t    $.type = langx.type;\r\n\r\n\t    $.fn.extend = function(props) {\r\n\t        langx.mixin($.fn, props);\r\n\t    };\r\n\r\n\t    $.fn.serializeArray = function() {\r\n\t        var name, type, result = [],\r\n\t            add = function(value) {\r\n\t                if (value.forEach) return value.forEach(add)\r\n\t                result.push({ name: name, value: value })\r\n\t            }\r\n\t        if (this[0]) langx.each(this[0].elements, function(_, field) {\r\n\t            type = field.type, name = field.name\r\n\t            if (name && field.nodeName.toLowerCase() != 'fieldset' &&\r\n\t                !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&\r\n\t                ((type != 'radio' && type != 'checkbox') || field.checked))\r\n\t                add($(field).val())\r\n\t        })\r\n\t        return result\r\n\t    };\r\n\r\n\t    $.fn.serialize = function() {\r\n\t        var result = []\r\n\t        this.serializeArray().forEach(function(elm) {\r\n\t            result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\r\n\t        })\r\n\t        return result.join('&')\r\n\t    };\r\n    })(query);\r\n\r\n    (function($){\r\n        $.Event = function Event(src, props) {\r\n            if (langx.isString(src)) {\r\n            \tvar type = src;\r\n            \treturn eventer.create(type, props);\r\n\t        }\r\n            return eventer.proxy(src, props);\r\n        };\r\n\r\n        $.event = {};\r\n\r\n\t    $.event.special = eventer.special;\r\n\r\n\t    $.fn.submit = function(callback) {\r\n\t        if (0 in arguments) this.bind('submit', callback)\r\n\t        else if (this.length) {\r\n\t            var event = $.Event('submit')\r\n\t            this.eq(0).trigger(event)\r\n\t            if (!event.isDefaultPrevented()) this.get(0).submit()\r\n\t        }\r\n\t        return this\r\n\t    };\r\n\r\n\t    // event\r\n\t    $.fn.triggerHandler = $.fn.trigger;\r\n\r\n\t    $.fn.delegate = function(selector, event, callback) {\r\n\t        return this.on(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.undelegate = function(selector, event, callback) {\r\n\t        return this.off(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.live = function(event, callback) {\r\n\t        $(document.body).delegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.die = function(event, callback) {\r\n\t        $(document.body).undelegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.bind = function(event, selector, data, callback) {\r\n\t        return this.on(event, selector, data, callback)\r\n\t    };\r\n\r\n\t    $.fn.unbind = function(event, callback) {\r\n\t        return this.off(event, callback)\r\n\t    };\r\n\r\n\t    $.fn.ready = function(callback) {\r\n\t        eventer.ready(callback);\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.stop = function() {\r\n\t        // todo\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.moveto = function(x, y) {\r\n\t        return this.animate({\r\n\t            left: x + \"px\",\r\n\t            top: y + \"px\"\r\n\t        }, 0.4);\r\n\r\n\t    };\r\n\r\n\t    $.ready = eventer.ready;\r\n\r\n\t    $.on = eventer.on;\r\n\r\n\t    $.off = eventer.off;\r\n    })(query);\r\n\r\n    (function($){\r\n\t    // plugin compatibility\r\n\t    $.uuid = 0;\r\n\t    $.support = browser.support;\r\n\t    $.expr = {};\r\n\r\n\t    $.expr[\":\"] = $.expr.pseudos = $.expr.filters = finder.pseudos;\r\n\r\n\t    $.expr.createPseudo = function(fn) {\r\n\t    \treturn fn;\r\n\t    };\r\n\r\n\t    $.cssHooks = styler.cssHooks;\r\n\r\n\t    $.contains = noder.contains;\r\n\r\n\t    $.css = styler.css;\r\n\r\n\t    $.data = datax.data;\r\n\r\n\t    $.fx = fx;\r\n\t    $.fx.step = {\r\n\r\n        };\r\n\r\n        $.easing = {};\r\n\r\n\t    $.offset = {};\r\n\t    $.offset.setOffset = function(elem, options, i) {\r\n\t        var position = $.css(elem, \"position\");\r\n\r\n\t        // set position first, in-case top/left are set even on static elem\r\n\t        if (position === \"static\") {\r\n\t            elem.style.position = \"relative\";\r\n\t        }\r\n\r\n\t        var curElem = $(elem),\r\n\t            curOffset = curElem.offset(),\r\n\t            curCSSTop = $.css(elem, \"top\"),\r\n\t            curCSSLeft = $.css(elem, \"left\"),\r\n\t            calculatePosition = (position === \"absolute\" || position === \"fixed\") && $.inArray(\"auto\", [curCSSTop, curCSSLeft]) > -1,\r\n\t            props = {},\r\n\t            curPosition = {},\r\n\t            curTop, curLeft;\r\n\r\n\t        // need to be able to calculate position if either top or left is auto and position is either absolute or fixed\r\n\t        if (calculatePosition) {\r\n\t            curPosition = curElem.position();\r\n\t            curTop = curPosition.top;\r\n\t            curLeft = curPosition.left;\r\n\t        } else {\r\n\t            curTop = parseFloat(curCSSTop) || 0;\r\n\t            curLeft = parseFloat(curCSSLeft) || 0;\r\n\t        }\r\n\r\n\t        if ($.isFunction(options)) {\r\n\t            options = options.call(elem, i, curOffset);\r\n\t        }\r\n\r\n\t        if (options.top != null) {\r\n\t            props.top = (options.top - curOffset.top) + curTop;\r\n\t        }\r\n\t        if (options.left != null) {\r\n\t            props.left = (options.left - curOffset.left) + curLeft;\r\n\t        }\r\n\r\n\t        if (\"using\" in options) {\r\n\t            options.using.call(elem, props);\r\n\t        } else {\r\n\t            curElem.css(props);\r\n\t        }\r\n\t    };\r\n\r\n        $._data = function(elm,propName) {\r\n            if (elm.hasAttribute) {\r\n                return datax.data(elm,propName);\r\n            } else {\r\n                return {};\r\n            }\r\n        };\r\n\r\n     \tvar t = $.fn.text;  \r\n\t    $.fn.text = function(v) {\r\n\t        var r = t.apply(this,arguments);\r\n\t        if (r === undefined) {\r\n\t            r = \"\";\r\n\t        }  \r\n\t        return r;\r\n\t    };       \r\n        \t    \r\n    })(query);\r\n\r\n    query.parseHTML = function(html) {\r\n        return  noder.createFragment(html);\r\n    };\r\n\r\n    query.uniqueSort = query.unique = langx.uniq;\r\n\r\n    query.skylark = skylark;\r\n\r\n    return window.jQuery = window.$ = query;\r\n});\r\n\ndefine('skylark-jquery/ajax',[\r\n    \"./core\",\r\n    \"skylark-langx/langx\"\r\n], function($,langx) {\r\n    var jsonpID = 0;\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') return url\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n    }\r\n    \r\n    $.ajaxJSONP = function(options) {\r\n        var deferred = new langx.Deferred();\r\n        var _callbackName = options.jsonpCallback,\r\n            callbackName = ($.isFunction(_callbackName) ?\r\n                _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\r\n            script = document.createElement('script'),\r\n            originalCallback = window[callbackName],\r\n            responseData,\r\n            abort = function(errorType) {\r\n                $(script).triggerHandler('error', errorType || 'abort')\r\n            },\r\n            xhr = { abort: abort },\r\n            abortTimeout;\r\n\r\n        for (var key in options.data) {\r\n            options.url = appendQuery(options.url, key + \"=\" + options.data[key]);\r\n        }\r\n         \r\n//        if (deferred) deferred.promise(xhr)\r\n\r\n        $(script).on('load error', function(e, errorType) {\r\n            clearTimeout(abortTimeout)\r\n            $(script).off().remove()\r\n\r\n            if (e.type == 'error' || !responseData) {\r\n                deferred.reject(e);\r\n            } else {\r\n                deferred.resolve(responseData[0],200,xhr);\r\n            }\r\n\r\n            window[callbackName] = originalCallback\r\n            if (responseData && $.isFunction(originalCallback))\r\n                originalCallback(responseData[0])\r\n\r\n            originalCallback = responseData = undefined\r\n        })\r\n\r\n        window[callbackName] = function() {\r\n            responseData = arguments\r\n        }\r\n\r\n        script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\r\n        document.head.appendChild(script)\r\n\r\n        if (options.timeout > 0) abortTimeout = setTimeout(function() {\r\n            abort('timeout')\r\n        }, options.timeout)\r\n\r\n        return deferred;\r\n    }\r\n\r\n    $.ajaxSettings = langx.Xhr.defaultOptions;\r\n\r\n    $.ajaxSettings.xhr = function() {\r\n        return new window.XMLHttpRequest()\r\n    };\r\n\r\n    $.ajax = function(options) {\r\n        if (!options) {\r\n            options = {\r\n                url :  \"./\"\r\n            };\r\n        } else if (langx.isString(options)) {\r\n            options = {\r\n                url :  options\r\n            };\r\n        }\r\n\r\n        if ('jsonp' == options.dataType) {\r\n            var hasPlaceholder = /\\?.+=\\?/.test(options.url);\r\n\r\n            if (!hasPlaceholder)\r\n                options.url = appendQuery(options.url,\r\n                    options.jsonp ? (options.jsonp + '=?') : options.jsonp === false ? '' : 'callback=?')\r\n            return $.ajaxJSONP(options);\r\n        }\r\n\r\n        var p = langx.Xhr.request(options.url,options);\r\n        if (options.success) {\r\n            p = p.then(options.success,options.error);\r\n        }\r\n        p.success = p.done;\r\n        p.error = p.fail;\r\n        p.complete = p.always;\r\n        \r\n        return p;\r\n    };\r\n\r\n    // handle optional data/success arguments\r\n    function parseArguments(url, data, success, dataType) {\r\n        if ($.isFunction(url)) {\r\n            dataType = data, success = url, data = undefined,url = undefined;\r\n        } else if ($.isFunction(data)) {\r\n            dataType = success, success = data, data = undefined;\r\n        } \r\n        if (!$.isFunction(success)) dataType = success, success = undefined\r\n        return {\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            dataType: dataType\r\n        }\r\n    }\r\n\r\n    $.get = function( /* url, data, success, dataType */ ) {\r\n        return $.ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    $.post = function( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.type = 'POST'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    $.getJSON = function( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.dataType = 'json'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    var originalLoad = $.fn.load;\r\n\r\n    $.fn.load = function(url, data, success) {\r\n        if (\"string\" != typeof url && originalLoad) {\r\n            return originalLoad.apply(this, arguments);\r\n        }\r\n        if (!this.length) return this\r\n        var self = this,\r\n            options = parseArguments(url, data, success),\r\n            parts = options.url && options.url.split(/\\s/),\r\n            selector,\r\n            callback = options.success\r\n        if (parts && parts.length > 1) options.url = parts[0], selector = parts[1]\r\n        options.success = function(response) {\r\n            self.html(selector ?\r\n                $('<div>').html(response.replace(rscript, \"\")).find(selector) : response)\r\n            callback && callback.apply(self, arguments)\r\n        }\r\n        $.ajax(options)\r\n        return this\r\n    }\r\n\r\n    $.param = langx.Xhr.param;\r\n\r\n\r\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n    function addToPrefiltersOrTransports(structure) {\r\n\r\n        // dataTypeExpression is optional and defaults to \"*\"\r\n        return function(dataTypeExpression, func) {\r\n\r\n            if (typeof dataTypeExpression !== \"string\") {\r\n                func = dataTypeExpression;\r\n                dataTypeExpression = \"*\";\r\n            }\r\n\r\n            var dataType,\r\n                i = 0,\r\n                dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\r\n\r\n            if (jQuery.isFunction(func)) {\r\n\r\n                // For each dataType in the dataTypeExpression\r\n                while ((dataType = dataTypes[i++])) {\r\n\r\n                    // Prepend if requested\r\n                    if (dataType[0] === \"+\") {\r\n                        dataType = dataType.slice(1) || \"*\";\r\n                        (structure[dataType] = structure[dataType] || []).unshift(func);\r\n\r\n                        // Otherwise append\r\n                    } else {\r\n                        (structure[dataType] = structure[dataType] || []).push(func);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    var\r\n        prefilters = {},\r\n        transports = {},\r\n        rnotwhite = (/\\S+/g);\r\n\r\n    $.ajaxPrefilter = addToPrefiltersOrTransports(prefilters);\r\n    $.ajaxTransport = addToPrefiltersOrTransports(transports);\r\n    $.ajaxSetup = function(target, settings) {\r\n        langx.mixin(langx.Xhr.defaultOptions,target,settings);\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/callbacks',[\r\n    \"./core\"\r\n], function($) {\r\n\r\n    //     This module is borrow from zepto.callback.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    // Create a collection of callbacks to be fired in a sequence, with configurable behaviour\r\n    // Option flags:\r\n    //   - once: Callbacks fired at most one time.\r\n    //   - memory: Remember the most recent context and arguments\r\n    //   - stopOnFalse: Cease iterating over callback list\r\n    //   - unique: Permit adding at most one instance of the same callback\r\n    $.Callbacks = function(options) {\r\n        options = $.extend({}, options)\r\n\r\n        var memory, // Last fire value (for non-forgettable lists)\r\n            fired, // Flag to know if list was already fired\r\n            firing, // Flag to know if list is currently firing\r\n            firingStart, // First callback to fire (used internally by add and fireWith)\r\n            firingLength, // End of the loop when firing\r\n            firingIndex, // Index of currently firing callback (modified by remove if needed)\r\n            list = [], // Actual callback list\r\n            stack = !options.once && [], // Stack of fire calls for repeatable lists\r\n            fire = function(data) {\r\n                memory = options.memory && data\r\n                fired = true\r\n                firingIndex = firingStart || 0\r\n                firingStart = 0\r\n                firingLength = list.length\r\n                firing = true\r\n                for (; list && firingIndex < firingLength; ++firingIndex) {\r\n                    if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\r\n                        memory = false\r\n                        break\r\n                    }\r\n                }\r\n                firing = false\r\n                if (list) {\r\n                    if (stack) stack.length && fire(stack.shift())\r\n                    else if (memory) list.length = 0\r\n                    else Callbacks.disable()\r\n                }\r\n            },\r\n\r\n            Callbacks = {\r\n                add: function() {\r\n                    if (list) {\r\n                        var start = list.length,\r\n                            add = function(args) {\r\n                                $.each(args, function(_, arg) {\r\n                                    if (typeof arg === \"function\") {\r\n                                        if (!options.unique || !Callbacks.has(arg)) list.push(arg)\r\n                                    } else if (arg && arg.length && typeof arg !== 'string') add(arg)\r\n                                })\r\n                            }\r\n                        add(arguments)\r\n                        if (firing) firingLength = list.length\r\n                        else if (memory) {\r\n                            firingStart = start\r\n                            fire(memory)\r\n                        }\r\n                    }\r\n                    return this\r\n                },\r\n                remove: function() {\r\n                    if (list) {\r\n                        $.each(arguments, function(_, arg) {\r\n                            var index\r\n                            while ((index = $.inArray(arg, list, index)) > -1) {\r\n                                list.splice(index, 1)\r\n                                // Handle firing indexes\r\n                                if (firing) {\r\n                                    if (index <= firingLength) --firingLength\r\n                                    if (index <= firingIndex) --firingIndex\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    return this\r\n                },\r\n                has: function(fn) {\r\n                    return !!(list && (fn ? $.inArray(fn, list) > -1 : list.length))\r\n                },\r\n                empty: function() {\r\n                    firingLength = list.length = 0\r\n                    return this\r\n                },\r\n                disable: function() {\r\n                    list = stack = memory = undefined\r\n                    return this\r\n                },\r\n                disabled: function() {\r\n                    return !list\r\n                },\r\n                lock: function() {\r\n                    stack = undefined;\r\n                    if (!memory) Callbacks.disable()\r\n                    return this\r\n                },\r\n                locked: function() {\r\n                    return !stack\r\n                },\r\n                fireWith: function(context, args) {\r\n                    if (list && (!fired || stack)) {\r\n                        args = args || []\r\n                        args = [context, args.slice ? args.slice() : args]\r\n                        if (firing) stack.push(args)\r\n                        else fire(args)\r\n                    }\r\n                    return this\r\n                },\r\n                fire: function() {\r\n                    return Callbacks.fireWith(this, arguments)\r\n                },\r\n                fired: function() {\r\n                    return !!fired\r\n                }\r\n            }\r\n\r\n        return Callbacks\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/deferred',[\r\n    \"./core\",\r\n    \"skylark-langx/langx\"\r\n], function($,langx) {\r\n\r\n    $.Deferred = function() {\r\n        var d = new langx.Deferred(),\r\n            ret = {\r\n                promise : function() {\r\n                    return d.promise;\r\n                }\r\n            };\r\n\r\n        [\"resolve\",\"resolveWith\",\"reject\",\"rejectWith\",\"notify\",\"then\",\"done\",\"fail\",\"progress\"].forEach(function(name){\r\n            ret[name] = function() {\r\n              var ret2 =   d[name].apply(d,arguments);\r\n              if (ret2 == d) {\r\n                ret2 = ret;\r\n              }\r\n              return ret2;\r\n            }\r\n        });\r\n\r\n        return ret;\r\n    };\r\n    \r\n    $.when = function(){\r\n        var p = langx.Deferred.all(langx.makeArray(arguments)),\r\n            originThen = p.then;\r\n        p.then = function(onResolved,onRejected) {\r\n            var handler = function(results) {\r\n                results = results.map(function(result){\r\n                    return [result];\r\n                });\r\n                return onResolved && onResolved.apply(null,results);\r\n            };\r\n            return originThen.call(p,handler,onRejected);\r\n        };\r\n        return p;\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/queue',[\r\n    \"skylark-langx/langx\",\r\n    \"./core\",\r\n    \"./callbacks\"\r\n], function(langx, $) {\r\n\r\n // jQuery Data object\r\n  var rbrace = /(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,\r\n      rmultiDash = /([A-Z])/g,\r\n      expando = \"Sky\" + ( '1.0' + Math.random() ).replace( /\\D/g, \"\"),\r\n      optionsCache = {},\r\n      core_rnotwhite = /\\S+/g,\r\n      core_deletedIds = [],\r\n      core_push = core_deletedIds.push;\r\n\r\n// Convert String-formatted options into Object-formatted ones and store in cache\r\n  function createOptions( options ) {\r\n    var object = optionsCache[ options ] = {};\r\n    $.each( options.match( core_rnotwhite ) || [], function( _, flag ) {\r\n      object[ flag ] = true;\r\n    });\r\n    return object;\r\n  }\r\n\r\n  function isArraylike( obj ) {\r\n    var length = obj.length,\r\n        type = $.type( obj );\r\n\r\n    if ( $.isWindow( obj ) ) {\r\n      return false;\r\n    }\r\n\r\n    if ( obj.nodeType === 1 && length ) {\r\n      return true;\r\n    }\r\n\r\n    return type === \"array\" || type !== \"function\" &&\r\n        ( length === 0 ||\r\n            typeof length === \"number\" && length > 0 && ( length - 1 ) in obj );\r\n  }\r\n\r\n  \r\n\r\n  function Data() {\r\n    // Support: Android < 4,\r\n    // Old WebKit does not have Object.preventExtensions/freeze method,\r\n    // return new empty object instead with no [[set]] accessor\r\n    Object.defineProperty( this.cache = {}, 0, {\r\n      get: function() {\r\n        return {};\r\n      }\r\n    });\r\n\r\n    this.expando = expando + Math.random();\r\n  }\r\n\r\n  Data.uid = 1;\r\n\r\n  Data.accepts = function( owner ) {\r\n    // Accepts only:\r\n    //  - Node\r\n    //    - Node.ELEMENT_NODE\r\n    //    - Node.DOCUMENT_NODE\r\n    //  - Object\r\n    //    - Any\r\n    return owner.nodeType ?\r\n        owner.nodeType === 1 || owner.nodeType === 9 : true;\r\n  };\r\n\r\n  Data.prototype = {\r\n    key: function( owner ) {\r\n      // We can accept data for non-element nodes in modern browsers,\r\n      // but we should not, see #8335.\r\n      // Always return the key for a frozen object.\r\n      if ( !Data.accepts( owner ) ) {\r\n        return 0;\r\n      }\r\n\r\n      var descriptor = {},\r\n      // Check if the owner object already has a cache key\r\n          unlock = owner[ this.expando ];\r\n\r\n      // If not, create one\r\n      if ( !unlock ) {\r\n        unlock = Data.uid++;\r\n\r\n        // Secure it in a non-enumerable, non-writable property\r\n        try {\r\n          descriptor[ this.expando ] = { value: unlock };\r\n          Object.defineProperties( owner, descriptor );\r\n\r\n          // Support: Android < 4\r\n          // Fallback to a less secure definition\r\n        } catch ( e ) {\r\n          descriptor[ this.expando ] = unlock;\r\n          $.extend( owner, descriptor );\r\n        }\r\n      }\r\n\r\n      // Ensure the cache object\r\n      if ( !this.cache[ unlock ] ) {\r\n        this.cache[ unlock ] = {};\r\n      }\r\n\r\n      return unlock;\r\n    },\r\n    set: function( owner, data, value ) {\r\n      var prop,\r\n      // There may be an unlock assigned to this node,\r\n      // if there is no entry for this \"owner\", create one inline\r\n      // and set the unlock as though an owner entry had always existed\r\n          unlock = this.key( owner ),\r\n          cache = this.cache[ unlock ];\r\n\r\n      // Handle: [ owner, key, value ] args\r\n      if ( typeof data === \"string\" ) {\r\n        cache[ data ] = value;\r\n\r\n        // Handle: [ owner, { properties } ] args\r\n      } else {\r\n        // Fresh assignments by object are shallow copied\r\n        if ( $.isEmptyObject( cache ) ) {\r\n          $.extend( this.cache[ unlock ], data );\r\n          // Otherwise, copy the properties one-by-one to the cache object\r\n        } else {\r\n          for ( prop in data ) {\r\n            cache[ prop ] = data[ prop ];\r\n          }\r\n        }\r\n      }\r\n      return cache;\r\n    },\r\n    get: function( owner, key ) {\r\n      // Either a valid cache is found, or will be created.\r\n      // New caches will be created and the unlock returned,\r\n      // allowing direct access to the newly created\r\n      // empty data object. A valid owner object must be provided.\r\n      var cache = this.cache[ this.key( owner ) ];\r\n\r\n      return key === undefined ?\r\n          cache : cache[ key ];\r\n    },\r\n    access: function( owner, key, value ) {\r\n      var stored;\r\n      // In cases where either:\r\n      //\r\n      //   1. No key was specified\r\n      //   2. A string key was specified, but no value provided\r\n      //\r\n      // Take the \"read\" path and allow the get method to determine\r\n      // which value to return, respectively either:\r\n      //\r\n      //   1. The entire cache object\r\n      //   2. The data stored at the key\r\n      //\r\n      if ( key === undefined ||\r\n          ((key && typeof key === \"string\") && value === undefined) ) {\r\n\r\n        stored = this.get( owner, key );\r\n\r\n        return stored !== undefined ?\r\n            stored : this.get( owner, $.camelCase(key) );\r\n      }\r\n\r\n      // [*]When the key is not a string, or both a key and value\r\n      // are specified, set or extend (existing objects) with either:\r\n      //\r\n      //   1. An object of properties\r\n      //   2. A key and value\r\n      //\r\n      this.set( owner, key, value );\r\n\r\n      // Since the \"set\" path can have two possible entry points\r\n      // return the expected data based on which path was taken[*]\r\n      return value !== undefined ? value : key;\r\n    },\r\n    remove: function( owner, key ) {\r\n      var i, name, camel,\r\n          unlock = this.key( owner ),\r\n          cache = this.cache[ unlock ];\r\n\r\n      if ( key === undefined ) {\r\n        this.cache[ unlock ] = {};\r\n\r\n      } else {\r\n        // Support array or space separated string of keys\r\n        if ( $.isArray( key ) ) {\r\n          // If \"name\" is an array of keys...\r\n          // When data is initially created, via (\"key\", \"val\") signature,\r\n          // keys will be converted to camelCase.\r\n          // Since there is no way to tell _how_ a key was added, remove\r\n          // both plain key and camelCase key. #12786\r\n          // This will only penalize the array argument path.\r\n          name = key.concat( key.map( $.camelCase ) );\r\n        } else {\r\n          camel = $.camelCase( key );\r\n          // Try the string as a key before any manipulation\r\n          if ( key in cache ) {\r\n            name = [ key, camel ];\r\n          } else {\r\n            // If a key with the spaces exists, use it.\r\n            // Otherwise, create an array by matching non-whitespace\r\n            name = camel;\r\n            name = name in cache ?\r\n                [ name ] : ( name.match( core_rnotwhite ) || [] );\r\n          }\r\n        }\r\n\r\n        i = name.length;\r\n        while ( i-- ) {\r\n          delete cache[ name[ i ] ];\r\n        }\r\n      }\r\n    },\r\n    hasData: function( owner ) {\r\n      return !$.isEmptyObject(\r\n          this.cache[ owner[ this.expando ] ] || {}\r\n      );\r\n    },\r\n    discard: function( owner ) {\r\n      if ( owner[ this.expando ] ) {\r\n        delete this.cache[ owner[ this.expando ] ];\r\n      }\r\n    }\r\n  };\r\n\r\n  var data_priv = new Data();\r\n\r\n  $.extend($, {\r\n    queue: function( elem, type, data ) {\r\n      var queue;\r\n\r\n      if ( elem ) {\r\n        type = ( type || \"fx\" ) + \"queue\";\r\n        queue = data_priv.get( elem, type );\r\n\r\n        // Speed up dequeue by getting out quickly if this is just a lookup\r\n        if ( data ) {\r\n          if ( !queue || $.isArray( data ) ) {\r\n            queue = data_priv.access( elem, type, $.makeArray(data) );\r\n          } else {\r\n            queue.push( data );\r\n          }\r\n        }\r\n        return queue || [];\r\n      }\r\n    },\r\n\r\n    dequeue: function( elem, type ) {\r\n      type = type || \"fx\";\r\n\r\n      var queue = $.queue( elem, type ),\r\n          startLength = queue.length,\r\n          fn = queue.shift(),\r\n          hooks = $._queueHooks( elem, type ),\r\n          next = function() {\r\n            $.dequeue( elem, type );\r\n          };\r\n\r\n      // If the fx queue is dequeued, always remove the progress sentinel\r\n      if ( fn === \"inprogress\" ) {\r\n        fn = queue.shift();\r\n        startLength--;\r\n      }\r\n\r\n      if ( fn ) {\r\n\r\n        // Add a progress sentinel to prevent the fx queue from being\r\n        // automatically dequeued\r\n        if ( type === \"fx\" ) {\r\n          queue.unshift( \"inprogress\" );\r\n        }\r\n\r\n        // clear up the last queue stop function\r\n        delete hooks.stop;\r\n        fn.call( elem, next, hooks );\r\n      }\r\n\r\n      if ( !startLength && hooks ) {\r\n        hooks.empty.fire();\r\n      }\r\n    },\r\n\r\n    // not intended for public consumption - generates a queueHooks object, or returns the current one\r\n    _queueHooks: function( elem, type ) {\r\n      var key = type + \"queueHooks\";\r\n      return data_priv.get( elem, key ) || data_priv.access( elem, key, {\r\n        empty: $.Callbacks(\"once memory\").add(function() {\r\n          data_priv.remove( elem, [ type + \"queue\", key ] );\r\n        })\r\n      });\r\n    },\r\n\r\n    // array operations\r\n    makeArray: function( arr, results ) {\r\n      var ret = results || [];\r\n\r\n      if ( arr != null ) {\r\n        if ( isArraylike( Object(arr) ) ) {\r\n          $.merge( ret,\r\n              typeof arr === \"string\" ?\r\n                  [ arr ] : arr\r\n          );\r\n        } else {\r\n          core_push.call( ret, arr );\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    },\r\n    merge: function( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n  });\r\n\r\n  $.extend($.fn, {\r\n    queue: function( type, data ) {\r\n      var setter = 2;\r\n\r\n      if ( typeof type !== \"string\" ) {\r\n        data = type;\r\n        type = \"fx\";\r\n        setter--;\r\n      }\r\n\r\n      if ( arguments.length < setter ) {\r\n        return $.queue( this[0], type );\r\n      }\r\n\r\n      return data === undefined ?\r\n          this :\r\n          this.each(function() {\r\n            var queue = $.queue( this, type, data );\r\n\r\n            // ensure a hooks for this queue\r\n            $._queueHooks( this, type );\r\n\r\n            if ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\r\n              $.dequeue( this, type );\r\n            }\r\n          });\r\n    },\r\n    dequeue: function( type ) {\r\n      return this.each(function() {\r\n        $.dequeue( this, type );\r\n      });\r\n    },\r\n    // Based off of the plugin by Clint Helfers, with permission.\r\n    // http://blindsignals.com/index.php/2009/07/jquery-delay/\r\n    delay: function( time, type ) {\r\n      time = $.fx ? $.fx.speeds[ time ] || time : time;\r\n      type = type || \"fx\";\r\n\r\n      return this.queue( type, function( next, hooks ) {\r\n        var timeout = setTimeout( next, time );\r\n        hooks.stop = function() {\r\n          clearTimeout( timeout );\r\n        };\r\n      });\r\n    },\r\n    clearQueue: function( type ) {\r\n      return this.queue( type || \"fx\", [] );\r\n    },\r\n    // Get a promise resolved when queues of a certain type\r\n    // are emptied (fx is the type by default)\r\n    promise: function( type, obj ) {\r\n      var tmp,\r\n          count = 1,\r\n          defer = $.Deferred(),\r\n          elements = this,\r\n          i = this.length,\r\n          resolve = function() {\r\n            if ( !( --count ) ) {\r\n              defer.resolveWith( elements, [ elements ] );\r\n            }\r\n          };\r\n\r\n      if ( typeof type !== \"string\" ) {\r\n        obj = type;\r\n        type = undefined;\r\n      }\r\n      type = type || \"fx\";\r\n\r\n      while( i-- ) {\r\n        tmp = data_priv.get( elements[ i ], type + \"queueHooks\" );\r\n        if ( tmp && tmp.empty ) {\r\n          count++;\r\n          tmp.empty.add( resolve );\r\n        }\r\n      }\r\n      resolve();\r\n      return defer.promise( obj );\r\n    }\r\n  });\r\n\r\n  return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/JqueryPlugin',[\r\n\t\"skylark-langx/types\",\r\n\t\"skylark-langx/objects\",\r\n\t\"skylark-langx/arrays\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-utils-dom/datax\",\r\n\t\"skylark-utils-dom/eventer\",\r\n\t\"skylark-utils-dom/plugins\",\r\n\t\"skylark-utils-dom/query\",\r\n],function(types, objects, arrays, langx, datax, eventer, plugins, $){\r\n\r\n    var pluginUuid = 0;\r\n\r\n\tvar JqPlugin = plugins.Plugin.inherit({\r\n\t\tklassName : \"JqPlugin\",\r\n\r\n        pluginEventPrefix: \"\",\r\n\r\n        options: {\r\n            // Callbacks\r\n            create: null\r\n        },\r\n\r\n        destroy: function() {\r\n            this.overrided();\r\n\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            this.element\r\n                .off( this.eventNamespace );\r\n\r\n            // Clean up events and states\r\n            this.bindings.off( this.eventNamespace );\r\n        },\r\n\r\n        _construct : function(element,options) {\r\n            //this.options = langx.mixin( {}, this.options );\r\n\r\n            element = $( element || this.defaultElement || this )[ 0 ];\r\n\r\n            this.overrided(element,options);\r\n            \r\n            this.element = $( element );\r\n            this.uuid = pluginUuid++;\r\n            this.eventNamespace = \".\" + this.pluginName + this.uuid;\r\n\r\n            this.bindings = $();\r\n            this.classesElementLookup = {};\r\n\r\n\t\t\tthis.hoverable = $();\r\n\t\t\tthis.focusable = $();\r\n\r\n            if ( element !== this ) {\r\n                datax.data( element, this.pluginName, this );\r\n                this._on( true, this.element, {\r\n                    remove: function( event ) {\r\n                        if ( event.target === element ) {\r\n                            this.destroy();\r\n                        }\r\n                    }\r\n                } );\r\n                this.document = $( element.style ?\r\n\r\n                    // Element within the document\r\n                    element.ownerDocument :\r\n\r\n                    // Element is window or document\r\n                    element.document || element );\r\n                this.window = $( this.document[ 0 ].defaultView || this.document[ 0 ].parentWindow );\r\n            }\r\n\r\n//            this.options = langx.mixin( {},\r\n//                this.options,\r\n//                this._getCreateOptions(),\r\n//                options );\r\n\r\n            this._create();\r\n\r\n            this._trigger( \"create\", null, this._getCreateEventData() );\r\n\r\n            this._init();\r\n        },\r\n\r\n//        _getCreateOptions: function() {\r\n//            return {};\r\n//        },\r\n\r\n        _getCreateEventData: langx.noop,\r\n\r\n        _create: langx.noop,\r\n\r\n        _init: langx.noop,\r\n\r\n\t\t_classes: function( options ) {\r\n\t\t\tvar full = [];\r\n\t\t\tvar that = this;\r\n\r\n\t\t\toptions = objects.mixin( {\r\n\t\t\t\telement: this.element,\r\n\t\t\t\tclasses: this.options.classes || {}\r\n\t\t\t}, options );\r\n\r\n\r\n\t\t\tfunction bindRemoveEvent() {\r\n\t\t\t\toptions.element.each( function( _, element ) {\r\n\t\t\t\t\tvar isTracked = langx.map( that.classesElementLookup, function( elements ) {\r\n\t\t\t\t\t\treturn elements;\r\n\t\t\t\t\t} )\r\n\t\t\t\t\t\t.some( function(elements ) {\r\n\t\t\t\t\t\t\treturn $(elements).is( element );\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tif ( !isTracked ) {\r\n\t\t\t\t\t\tthat._on( $( element ), {\r\n\t\t\t\t\t\t\tremove: \"_untrackClassesElement\"\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\tfunction processClassString( classes, checkOption ) {\r\n\t\t\t\tvar current, i;\r\n\t\t\t\tfor ( i = 0; i < classes.length; i++ ) {\r\n\t\t\t\t\tcurrent = that.classesElementLookup[ classes[ i ] ] || $();\r\n\t\t\t\t\tif ( options.add ) {\r\n\t\t\t\t\t\tbindRemoveEvent();\r\n\t\t\t\t\t\tcurrent = $( langx.uniq( current.get().concat( options.element.get() ) ) );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcurrent = $( current.not( options.element ).get() );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthat.classesElementLookup[ classes[ i ] ] = current;\r\n\t\t\t\t\tfull.push( classes[ i ] );\r\n\t\t\t\t\tif ( checkOption && options.classes[ classes[ i ] ] ) {\r\n\t\t\t\t\t\tfull.push( options.classes[ classes[ i ] ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( options.keys ) {\r\n\t\t\t\tprocessClassString( options.keys.match( /\\S+/g ) || [], true );\r\n\t\t\t}\r\n\t\t\tif ( options.extra ) {\r\n\t\t\t\tprocessClassString( options.extra.match( /\\S+/g ) || [] );\r\n\t\t\t}\r\n\r\n\t\t\treturn full.join( \" \" );\r\n\t\t},\r\n\r\n\t\t_untrackClassesElement: function( event ) {\r\n\t\t\tvar that = this;\r\n\t\t\tlangx.each( that.classesElementLookup, function( key, value ) {\r\n\t\t\t\tif ( arrays.inArray( event.target, value ) !== -1 ) {\r\n\t\t\t\t\tthat.classesElementLookup[ key ] = $( value.not( event.target ).get() );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tthis._off( $( event.target ) );\r\n\t\t},\r\n\r\n\t\t_removeClass: function( element, keys, extra ) {\r\n\t\t\treturn this._toggleClass( element, keys, extra, false );\r\n\t\t},\r\n\r\n\t\t_addClass: function( element, keys, extra ) {\r\n\t\t\treturn this._toggleClass( element, keys, extra, true );\r\n\t\t},\r\n\r\n\t\t_toggleClass: function( element, keys, extra, add ) {\r\n\t\t\tadd = ( typeof add === \"boolean\" ) ? add : extra;\r\n\t\t\tvar shift = ( typeof element === \"string\" || element === null ),\r\n\t\t\t\toptions = {\r\n\t\t\t\t\textra: shift ? keys : extra,\r\n\t\t\t\t\tkeys: shift ? element : keys,\r\n\t\t\t\t\telement: shift ? this.element : element,\r\n\t\t\t\t\tadd: add\r\n\t\t\t\t};\r\n\t\t\toptions.element.toggleClass( this._classes( options ), add );\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t_on: function( suppressDisabledCheck, element, handlers ) {\r\n\t\t\tvar delegateElement;\r\n\t\t\tvar instance = this;\r\n\r\n\t\t\t// No suppressDisabledCheck flag, shuffle arguments\r\n\t\t\tif ( typeof suppressDisabledCheck !== \"boolean\" ) {\r\n\t\t\t\thandlers = element;\r\n\t\t\t\telement = suppressDisabledCheck;\r\n\t\t\t\tsuppressDisabledCheck = false;\r\n\t\t\t}\r\n\r\n\t\t\t// No element argument, shuffle and use this.element\r\n\t\t\tif ( !handlers ) {\r\n\t\t\t\thandlers = element;\r\n\t\t\t\telement = this.element;\r\n\t\t\t\tdelegateElement = this.widget();\r\n\t\t\t} else {\r\n\t\t\t\telement = delegateElement = $( element );\r\n\t\t\t\tthis.bindings = this.bindings.add( element );\r\n\t\t\t}\r\n\r\n\t\t\tobjects.each( handlers, function( event, handler ) {\r\n\t\t\t\tfunction handlerProxy() {\r\n\r\n\t\t\t\t\t// Allow widgets to customize the disabled handling\r\n\t\t\t\t\t// - disabled as an array instead of boolean\r\n\t\t\t\t\t// - disabled class as method for disabling individual parts\r\n\t\t\t\t\tif ( !suppressDisabledCheck &&\r\n\t\t\t\t\t\t\t( instance.options.disabled === true ||\r\n\t\t\t\t\t\t\t$( this ).hasClass( \"ui-state-disabled\" ) ) ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n\t\t\t\t\t\t.apply( instance, arguments );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Copy the guid so direct unbinding works\r\n\t\t\t\tif ( typeof handler !== \"string\" ) {\r\n\t\t\t\t\thandlerProxy.guid = handler.guid =\r\n\t\t\t\t\t\thandler.guid || handlerProxy.guid || $.guid++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar match = event.match( /^([\\w:-]*)\\s*(.*)$/ );\r\n\t\t\t\tvar eventName = match[ 1 ] + instance.eventNamespace;\r\n\t\t\t\tvar selector = match[ 2 ];\r\n\r\n\t\t\t\tif ( selector ) {\r\n\t\t\t\t\tdelegateElement.on( eventName, selector, handlerProxy );\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.on( eventName, handlerProxy );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t},\r\n\r\n\t\t_off: function( element, eventName ) {\r\n\t\t\teventName = ( eventName || \"\" ).split( \" \" ).join( this.eventNamespace + \" \" ) +\r\n\t\t\t\tthis.eventNamespace;\r\n\t\t\telement.off( eventName );\r\n\r\n\t\t\t// Clear the stack to avoid memory leaks (#10056)\r\n\t\t\tthis.bindings = $( this.bindings.not( element ).get() );\r\n\t\t\tthis.focusable = $( this.focusable.not( element ).get() );\r\n\t\t\tthis.hoverable = $( this.hoverable.not( element ).get() );\r\n\t\t},\r\n\r\n\t\t_trigger: function( type, event, data ) {\r\n\t\t\tvar prop, orig;\r\n\t\t\tvar callback = this.options[ type ];\r\n\r\n\t\t\tdata = data || {};\r\n\t\t\tevent = eventer.proxy( event );\r\n\t\t\tevent.type = ( type === this.widgetEventPrefix ?\r\n\t\t\t\ttype :\r\n\t\t\t\tthis.widgetEventPrefix + type ).toLowerCase();\r\n\r\n\t\t\t// The original event may come from any element\r\n\t\t\t// so we need to reset the target on the new event\r\n\t\t\tevent.target = this.element[ 0 ];\r\n\r\n\t\t\t// Copy original event properties over to the new event\r\n\t\t\torig = event.originalEvent;\r\n\t\t\tif ( orig ) {\r\n\t\t\t\tfor ( prop in orig ) {\r\n\t\t\t\t\tif ( !( prop in event ) ) {\r\n\t\t\t\t\t\tevent[ prop ] = orig[ prop ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.element.trigger( event, data );\r\n\t\t\treturn !( types.isFunction( callback ) &&\r\n\t\t\t\tcallback.apply( this.element[ 0 ], [ event ].concat( data ) ) === false ||\r\n\t\t\t\tevent.isDefaultPrevented() );\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn JqPlugin;\r\n});\n/*!\r\n * jQuery UI Widget @VERSION\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Widget\r\n//>>group: Core\r\n//>>description: Provides a factory for creating stateful widgets with a common API.\r\n//>>docs: http://api.jqueryui.com/jQuery.widget/\r\n//>>demos: http://jqueryui.com/widget/\r\n\r\ndefine( 'skylark-jquery/widget',[ \r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-utils-dom/plugins\",\r\n\t\"./core\",\r\n\t\"./JqueryPlugin\"\r\n],  function(langx,splugins, $,JqPlugin ) {\r\n\r\n\tvar widgetUuid = 0;\r\n\tvar widgetHasOwnProperty = Array.prototype.hasOwnProperty;\r\n\tvar widgetSlice = Array.prototype.slice;\r\n\r\n\t$.cleanData = ( function( orig ) {\r\n\t\treturn function( elems ) {\r\n\t\t\tvar events, elem, i;\r\n\t\t\tfor ( i = 0; ( elem = elems[ i ] ) != null; i++ ) {\r\n\r\n\t\t\t\t// Only trigger remove when necessary to save time\r\n\t\t\t\tevents = $._data( elem, \"events\" );\r\n\t\t\t\tif ( events && events.remove ) {\r\n\t\t\t\t\t$( elem ).triggerHandler( \"remove\" );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\torig( elems );\r\n\t\t};\r\n\t} )( $.cleanData );\r\n\t\r\n\t$.widget = function( name, base, prototype ) {\r\n\t\tvar existingConstructor, constructor, basePrototype;\r\n\r\n\t\t// ProxiedPrototype allows the provided prototype to remain unmodified\r\n\t\t// so that it can be used as a mixin for multiple widgets (#8876)\r\n\t\tvar proxiedPrototype = {};\r\n\r\n\t\tvar namespace = name.split( \".\" )[ 0 ];\r\n\t\tname = name.split( \".\" )[ 1 ];\r\n\t\tvar fullName = namespace + \"-\" + name;\r\n\r\n\t\tif ( !prototype ) {\r\n\t\t\tprototype = base;\r\n\t\t\tbase = $.Widget;\r\n\t\t}\r\n\r\n\t\tif ( $.isArray( prototype ) ) {\r\n\t\t\tprototype = $.extend.apply( null, [ {} ].concat( prototype ) );\r\n\t\t}\r\n\r\n\t\t// Create selector for plugin\r\n\t\t$.expr.pseudos[ fullName.toLowerCase() ] = function( elem ) {\r\n\t\t\treturn !!$.data( elem, fullName );\r\n\t\t};\r\n\r\n\t\t$[ namespace ] = $[ namespace ] || {};\r\n\r\n\t\texistingConstructor = $[ namespace ][ name ];\r\n\r\n\t\tvar basePrototype = base.prototype,\r\n\t\t\tnewPrototype = {};\r\n\r\n\t\tfor (var key in prototype) {\r\n\t\t\tvar value = prototype[key];\r\n\r\n\t\t\tif ( $.isPlainObject( value ) ) {\r\n\t\t\t\tnewPrototype[ key ] = $.isPlainObject( basePrototype[ key ] ) ?\r\n\t\t\t\t\t$.widget.extend( {}, basePrototype[ key ], value ) :\r\n\r\n\t\t\t\t\t// Don't extend strings, arrays, etc. with objects\r\n\t\t\t\t\t$.widget.extend( {}, value );\r\n\t\t\t} else {\r\n\t\t\t\tnewPrototype[key] = value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar _proto = $.widget.extend({\r\n\r\n\t\t\t// TODO: remove support for widgetEventPrefix\r\n\t\t\t// always use the name + a colon as the prefix, e.g., draggable:start\r\n\t\t\t// don't prefix for widgets that aren't DOM-based\r\n\t\t\twidgetEventPrefix: existingConstructor ? ( base.prototype.widgetEventPrefix || name ) : name\r\n\t\t}, {\r\n\t\t\toptions : base.prototype.options\r\n\t\t},newPrototype, {\r\n\t\t\tname : fullName,\r\n\t\t\tnamespace: namespace,\r\n\t\t\twidgetName: name,\r\n\t\t\tpluginName : \"jqueryui.\" + (namespace ? namespace + \".\" : \"\") + name,\r\n\t\t\twidgetFullName: fullName\r\n\t\t} );\r\n\r\n\t\tconstructor = $[ namespace ][ name ] = base.inherit(_proto);\r\n\t\t/*\r\n\r\n\t\tconstructor = $[ namespace ][ name ] = function( options, element ) {\r\n\r\n\t\t\t// Allow instantiation without \"new\" keyword\r\n\t\t\tif ( !this._createWidget ) {\r\n\t\t\t\treturn new constructor( options, element );\r\n\t\t\t}\r\n\r\n\t\t\t// Allow instantiation without initializing for simple inheritance\r\n\t\t\t// must use \"new\" keyword (the code above always passes args)\r\n\t\t\tif ( arguments.length ) {\r\n\t\t\t\tthis._createWidget( options, element );\r\n\t\t\t}\r\n\t\t};\r\n\t\t*/\r\n\t\t// Extend with the existing constructor to carry over any static properties\r\n\t\t$.extend( constructor, existingConstructor, {\r\n\t\t\tversion: prototype.version,\r\n\r\n\t\t\t// Copy the object used to create the prototype in case we need to\r\n\t\t\t// redefine the widget later\r\n\t\t\t_proto: _proto,\r\n\r\n\t\t\t// Track widgets that inherit from this widget in case this widget is\r\n\t\t\t// redefined after a widget inherits from it\r\n\t\t\t_childConstructors: []\r\n\t\t} );\r\n\r\n\t\t/*\r\n\t\tbasePrototype = new base();\r\n\r\n\t\t// We need to make the options hash a property directly on the new instance\r\n\t\t// otherwise we'll modify the options hash on the prototype that we're\r\n\t\t// inheriting from\r\n\t\tbasePrototype.options = $.widget.extend( {}, basePrototype.options );\r\n\t\t$.each( prototype, function( prop, value ) {\r\n\t\t\tif ( !$.isFunction( value ) ) {\r\n\t\t\t\tproxiedPrototype[ prop ] = value;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tproxiedPrototype[ prop ] = ( function() {\r\n\t\t\t\tfunction _super() {\r\n\t\t\t\t\treturn base.prototype[ prop ].apply( this, arguments );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction _superApply( args ) {\r\n\t\t\t\t\treturn base.prototype[ prop ].apply( this, args );\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tvar __super = this._super;\r\n\t\t\t\t\tvar __superApply = this._superApply;\r\n\t\t\t\t\tvar returnValue;\r\n\r\n\t\t\t\t\tthis._super = _super;\r\n\t\t\t\t\tthis._superApply = _superApply;\r\n\r\n\t\t\t\t\treturnValue = value.apply( this, arguments );\r\n\r\n\t\t\t\t\tthis._super = __super;\r\n\t\t\t\t\tthis._superApply = __superApply;\r\n\r\n\t\t\t\t\treturn returnValue;\r\n\t\t\t\t};\r\n\t\t\t} )();\r\n\t\t} );\r\n\t\tconstructor.prototype = $.widget.extend( basePrototype, {\r\n\r\n\t\t\t// TODO: remove support for widgetEventPrefix\r\n\t\t\t// always use the name + a colon as the prefix, e.g., draggable:start\r\n\t\t\t// don't prefix for widgets that aren't DOM-based\r\n\t\t\twidgetEventPrefix: existingConstructor ? ( basePrototype.widgetEventPrefix || name ) : name\r\n\t\t}, proxiedPrototype, {\r\n\t\t\tconstructor: constructor,\r\n\t\t\tnamespace: namespace,\r\n\t\t\twidgetName: name,\r\n\t\t\twidgetFullName: fullName\r\n\t\t} );\r\n\t\t*/\r\n\t\t// If this widget is being redefined then we need to find all widgets that\r\n\t\t// are inheriting from it and redefine all of them so that they inherit from\r\n\t\t// the new version of this widget. We're essentially trying to replace one\r\n\t\t// level in the prototype chain.\r\n\t\tif ( existingConstructor ) {\r\n\t\t\t$.each( existingConstructor._childConstructors, function( i, child ) {\r\n\t\t\t\tvar childPrototype = child.prototype;\r\n\r\n\t\t\t\t// Redefine the child widget using the same prototype that was\r\n\t\t\t\t// originally used, but inherit from the new version of the base\r\n\t\t\t\t$.widget( childPrototype.namespace + \".\" + childPrototype.widgetName, constructor,\r\n\t\t\t\t\tchild._proto );\r\n\t\t\t} );\r\n\r\n\t\t\t// Remove the list of existing child constructors from the old constructor\r\n\t\t\t// so the old child constructors can be garbage collected\r\n\t\t\tdelete existingConstructor._childConstructors;\r\n\t\t} else {\r\n\t\t\tif (base._childConstructors) {\r\n\t\t\t\tbase._childConstructors.push( constructor );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//$.widget.bridge( name, constructor );\r\n\r\n\t\tsplugins.register(constructor,name,fullName);\r\n\r\n\t\treturn constructor;\r\n\t};\r\n\r\n\t$.widget.extend = function( target ) {\r\n\t\tvar input = widgetSlice.call( arguments, 1 );\r\n\t\tvar inputIndex = 0;\r\n\t\tvar inputLength = input.length;\r\n\t\tvar key;\r\n\t\tvar value;\r\n\r\n\t\tfor ( ; inputIndex < inputLength; inputIndex++ ) {\r\n\t\t\tfor ( key in input[ inputIndex ] ) {\r\n\t\t\t\tvalue = input[ inputIndex ][ key ];\r\n\t\t\t\tif ( widgetHasOwnProperty.call( input[ inputIndex ], key ) && value !== undefined ) {\r\n\r\n\t\t\t\t\t// Clone objects\r\n\t\t\t\t\tif ( $.isPlainObject( value ) ) {\r\n\t\t\t\t\t\ttarget[ key ] = $.isPlainObject( target[ key ] ) ?\r\n\t\t\t\t\t\t\t$.widget.extend( {}, target[ key ], value ) :\r\n\r\n\t\t\t\t\t\t\t// Don't extend strings, arrays, etc. with objects\r\n\t\t\t\t\t\t\t$.widget.extend( {}, value );\r\n\r\n\t\t\t\t\t// Copy everything else by reference\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttarget[ key ] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\r\n\t$.Widget = \t JqPlugin.inherit({\r\n\t\twidgetName: \"widget\",\r\n\t\twidgetEventPrefix: \"\",\r\n\t\tdefaultElement: \"<div>\",\r\n\r\n\t\toptions: {\r\n\t\t\tclasses: {},\r\n\t\t\tdisabled: false,\r\n\r\n\t\t\t// Callbacks\r\n\t\t\tcreate: null\r\n\t\t},\r\n\r\n\t     _initOptions : function(options) {\r\n\t     \toptions = langx.mixin(this._createOptions(),options);\r\n\r\n\t\t\tthis.overrided(options);\r\n\t\t},\r\n\r\n\t\t_createOptions : function() {\r\n\t\t\treturn {};\r\n\t\t},\r\n\r\n\t\t_super : function() {\r\n\t\t\tif (this.overrided) {\r\n\t\t\t\treturn this.overrided.apply(this,arguments);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_superApply : function ( args ) {\r\n\t\t\tif (this.overrided) {\r\n\t\t\t\treturn this.overrided.apply(this,args);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\twidget: function() {\r\n\t\t\treturn this.element;\r\n\t\t},\r\n\r\n\r\n\t\t_setOption: function( key, value ) {\r\n\t\t\tif ( key === \"classes\" ) {\r\n\t\t\t\tthis._setOptionClasses( value );\r\n\t\t\t}\r\n\r\n\t\t\tthis.options[ key ] = value;\r\n\r\n\t\t\tif ( key === \"disabled\" ) {\r\n\t\t\t\tthis._setOptionDisabled( value );\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t_setOptionClasses: function( value ) {\r\n\t\t\tvar classKey, elements, currentElements;\r\n\r\n\t\t\tfor ( classKey in value ) {\r\n\t\t\t\tcurrentElements = this.classesElementLookup[ classKey ];\r\n\t\t\t\tif ( value[ classKey ] === this.options.classes[ classKey ] ||\r\n\t\t\t\t\t\t!currentElements ||\r\n\t\t\t\t\t\t!currentElements.length ) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// We are doing this to create a new jQuery object because the _removeClass() call\r\n\t\t\t\t// on the next line is going to destroy the reference to the current elements being\r\n\t\t\t\t// tracked. We need to save a copy of this collection so that we can add the new classes\r\n\t\t\t\t// below.\r\n\t\t\t\telements = $( currentElements.get() );\r\n\t\t\t\tthis._removeClass( currentElements, classKey );\r\n\r\n\t\t\t\t// We don't use _addClass() here, because that uses this.options.classes\r\n\t\t\t\t// for generating the string of classes. We want to use the value passed in from\r\n\t\t\t\t// _setOption(), this is the new value of the classes option which was passed to\r\n\t\t\t\t// _setOption(). We pass this value directly to _classes().\r\n\t\t\t\telements.addClass( this._classes( {\r\n\t\t\t\t\telement: elements,\r\n\t\t\t\t\tkeys: classKey,\r\n\t\t\t\t\tclasses: value,\r\n\t\t\t\t\tadd: true\r\n\t\t\t\t} ));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setOptionDisabled: function( value ) {\r\n\t\t\tthis._toggleClass( this.widget(), this.widgetFullName + \"-disabled\", null, !!value );\r\n\r\n\t\t\t// If the widget is becoming disabled, then nothing is interactive\r\n\t\t\tif ( value ) {\r\n\t\t\t\tthis._removeClass( this.hoverable, null, \"ui-state-hover\" );\r\n\t\t\t\tthis._removeClass( this.focusable, null, \"ui-state-focus\" );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tenable: function() {\r\n\t\t\treturn this._setOptions( { disabled: false } );\r\n\t\t},\r\n\r\n\t\tdisable: function() {\r\n\t\t\treturn this._setOptions( { disabled: true } );\r\n\t\t},\r\n\r\n\r\n\t\t_delay: function( handler, delay ) {\r\n\t\t\tfunction handlerProxy() {\r\n\t\t\t\treturn ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n\t\t\t\t\t.apply( instance, arguments );\r\n\t\t\t}\r\n\t\t\tvar instance = this;\r\n\t\t\treturn setTimeout( handlerProxy, delay || 0 );\r\n\t\t},\r\n\r\n\t\t_hoverable: function( element ) {\r\n\t\t\tthis.hoverable = this.hoverable.add( element );\r\n\t\t\tthis._on( element, {\r\n\t\t\t\tmouseenter: function( event ) {\r\n\t\t\t\t\tthis._addClass( $( event.currentTarget ), null, \"ui-state-hover\" );\r\n\t\t\t\t},\r\n\t\t\t\tmouseleave: function( event ) {\r\n\t\t\t\t\tthis._removeClass( $( event.currentTarget ), null, \"ui-state-hover\" );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t},\r\n\r\n\t\t_focusable: function( element ) {\r\n\t\t\tthis.focusable = this.focusable.add( element );\r\n\t\t\tthis._on( element, {\r\n\t\t\t\tfocusin: function( event ) {\r\n\t\t\t\t\tthis._addClass( $( event.currentTarget ), null, \"ui-state-focus\" );\r\n\t\t\t\t},\r\n\t\t\t\tfocusout: function( event ) {\r\n\t\t\t\t\tthis._removeClass( $( event.currentTarget ), null, \"ui-state-focus\" );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t});\r\n\r\n\t$.Widget._childConstructors = [];\r\n\r\n\t$.each( { show: \"fadeIn\", hide: \"fadeOut\" }, function( method, defaultEffect ) {\r\n\t\t$.Widget.prototype[ \"_\" + method ] = function( element, options, callback ) {\r\n\t\t\tif ( typeof options === \"string\" ) {\r\n\t\t\t\toptions = { effect: options };\r\n\t\t\t}\r\n\r\n\t\t\tvar hasOptions;\r\n\t\t\tvar effectName = !options ?\r\n\t\t\t\tmethod :\r\n\t\t\t\toptions === true || typeof options === \"number\" ?\r\n\t\t\t\t\tdefaultEffect :\r\n\t\t\t\t\toptions.effect || defaultEffect;\r\n\r\n\t\t\toptions = options || {};\r\n\t\t\tif ( typeof options === \"number\" ) {\r\n\t\t\t\toptions = { duration: options };\r\n\t\t\t}\r\n\r\n\t\t\thasOptions = !$.isEmptyObject( options );\r\n\t\t\toptions.complete = callback;\r\n\r\n\t\t\tif ( options.delay ) {\r\n\t\t\t\telement.delay( options.delay );\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasOptions && $.effects && $.effects.effect[ effectName ] ) {\r\n\t\t\t\telement[ method ]( options );\r\n\t\t\t} else if ( effectName !== method && element[ effectName ] ) {\r\n\t\t\t\telement[ effectName ]( options.duration, options.easing, callback );\r\n\t\t\t} else {\r\n\t\t\t\telement.queue( function( next ) {\r\n\t\t\t\t\t$( this )[ method ]();\r\n\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\tcallback.call( element[ 0 ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnext();\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t};\r\n\t} );\r\n\r\n\treturn $.widget;\r\n\r\n});\r\n\ndefine('skylark-jquery/main',[\r\n    \"./core\",\r\n    \"./ajax\",\r\n    \"./callbacks\",\r\n    \"./deferred\",\r\n    \"./queue\",\r\n    \"./JqueryPlugin\",\r\n    \"./widget\"\r\n], function($) {\r\n    return $;\r\n});\r\n\ndefine('skylark-jquery', ['skylark-jquery/main'], function (main) { return main; });\n\n"]}