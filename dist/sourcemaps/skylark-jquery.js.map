{"version":3,"sources":["skylark-jquery.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","get","context","relMap","localRequire","intakeDefines","defined","jQuery","$","skylark","browser","langx","noder","datax","eventer","finder","fx","styler","query","filter","Array","prototype","slice","fn","jquery","camelCase","cleanData","elems","elem","undefined","each","extend","target","deep","call","arguments","shift","this","arg","mixin","grep","elements","callback","isArray","isEmptyObject","isFunction","isWindow","isPlainObject","inArray","makeArray","noop","parseJSON","JSON","parse","proxy","trim","type","props","serializeArray","name","result","add","value","_","field","nodeName","toLowerCase","disabled","checked","val","serialize","elm","encodeURIComponent","Event","src","isString","create","event","special","submit","bind","eq","trigger","isDefaultPrevented","triggerHandler","delegate","selector","on","undelegate","off","live","document","body","die","data","unbind","ready","stop","moveto","x","y","animate","left","top","uuid","support","expr","pseudos","filters","createPseudo","cssHooks","contains","css","step","easing","offset","setOffset","options","position","style","curTop","curLeft","curElem","curOffset","curCSSTop","curCSSLeft","calculatePosition","curPosition","parseFloat","using","parseHTML","html","createFragment","unique","uniq","parseArguments","url","success","dataType","addToPrefiltersOrTransports","structure","dataTypeExpression","func","dataTypes","match","rnotwhite","unshift","ajaxJSONP","ajax","responseData","abortTimeout","_callbackName","jsonpCallback","callbackName","jsonpID","script","createElement","originalCallback","abort","errorType","xhr","deferred","promise","e","clearTimeout","remove","ajaxSuccess","ajaxError","ajaxBeforeSend","replace","head","appendChild","timeout","setTimeout","ajaxSettings","Xhr","defaultOptions","XMLHttpRequest","request","post","getJSON","load","self","response","rscript","find","param","prefilters","transports","ajaxPrefilter","ajaxTransport","ajaxSetup","settings","Callbacks","memory","fired","firing","firingStart","firingLength","firingIndex","list","once","fire","stopOnFalse","disable","start","has","index","splice","empty","lock","locked","fireWith","Deferred","d","_p","when","main"],"mappings":"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","file":"../skylark-jquery.js","sourcesContent":["define('skylark-jquery/core',[\r\n\t\"skylark-utils/skylark\",\r\n\t\"skylark-utils/browser\",\r\n\t\"skylark-utils/langx\",\r\n\t\"skylark-utils/noder\",\r\n\t\"skylark-utils/datax\",\r\n\t\"skylark-utils/eventer\",\r\n\t\"skylark-utils/finder\",\r\n\t\"skylark-utils/fx\",\r\n\t\"skylark-utils/styler\",\r\n\t\"skylark-utils/query\"\r\n],function(skylark,browser,langx,noder,datax,eventer,finder,fx,styler,query){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n    (function($){\r\n\t    $.fn.jquery = '2.2.0';\r\n\r\n\t    $.camelCase = langx.camelCase;\r\n\r\n\t\t$.cleanData = function( elems ) {\r\n\t\t\tvar elem,\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\r\n\t\t\t\tdatax.cleanData(elem);\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t    $.each = langx.each;\r\n\r\n\t    $.extend = function(target) {\r\n\t        var deep, args = slice.call(arguments, 1);\r\n\t        if (typeof target == 'boolean') {\r\n\t            deep = target\r\n\t            target = args.shift()\r\n\t        }\r\n\t        if (args.length == 0) {\r\n\t            args = [target];\r\n\t            target = this;\r\n\t        }\r\n\t        args.forEach(function(arg) {\r\n\t        \tlangx.mixin(target, arg, deep);\r\n\t        });\r\n\t        return target;\r\n\t    };\r\n\r\n\t    $.grep = function(elements, callback) {\r\n\t        return filter.call(elements, callback)\r\n\t    };\r\n\r\n\t    $.isArray = langx.isArray;\r\n\t    $.isEmptyObject = langx.isEmptyObject;\r\n\t    $.isFunction = langx.isFunction;\r\n\t    $.isWindow = langx.isWindow;\r\n\t    $.isPlainObject = langx.isPlainObject;\r\n\r\n\t    $.inArray = langx.inArray;\r\n\r\n\t    $.makeArray = langx.makeArray;\r\n\t    $.map = langx.map;\r\n\r\n\t    $.noop = function() {\r\n\t    };\r\n\r\n\t    $.parseJSON = window.JSON.parse;\r\n\r\n\t    $.proxy = langx.proxy;\r\n\r\n\t    $.trim = langx.trim;\r\n\t    $.type = langx.type;\r\n\r\n\t    $.fn.extend = function(props) {\r\n\t        langx.mixin($.fn, props);\r\n\t    };\r\n\r\n\t    $.fn.serializeArray = function() {\r\n\t        var name, type, result = [],\r\n\t            add = function(value) {\r\n\t                if (value.forEach) return value.forEach(add)\r\n\t                result.push({ name: name, value: value })\r\n\t            }\r\n\t        if (this[0]) langx.each(this[0].elements, function(_, field) {\r\n\t            type = field.type, name = field.name\r\n\t            if (name && field.nodeName.toLowerCase() != 'fieldset' &&\r\n\t                !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&\r\n\t                ((type != 'radio' && type != 'checkbox') || field.checked))\r\n\t                add($(field).val())\r\n\t        })\r\n\t        return result\r\n\t    };\r\n\r\n\t    $.fn.serialize = function() {\r\n\t        var result = []\r\n\t        this.serializeArray().forEach(function(elm) {\r\n\t            result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\r\n\t        })\r\n\t        return result.join('&')\r\n\t    };\r\n    })(query);\r\n\r\n    (function($){\r\n        $.Event = function Event(src, props) {\r\n            if (langx.isString(src)) {\r\n            \tvar type = src;\r\n            \treturn eventer.create(type, props);\r\n\t        }\r\n            return eventer.proxy(src, props);\r\n        };\r\n\r\n        $.event = {};\r\n\r\n\t    $.event.special = eventer.special;\r\n\r\n\t    $.fn.submit = function(callback) {\r\n\t        if (0 in arguments) this.bind('submit', callback)\r\n\t        else if (this.length) {\r\n\t            var event = $.Event('submit')\r\n\t            this.eq(0).trigger(event)\r\n\t            if (!event.isDefaultPrevented()) this.get(0).submit()\r\n\t        }\r\n\t        return this\r\n\t    };\r\n\r\n\t    // event\r\n\t    $.fn.triggerHandler = $.fn.trigger;\r\n\r\n\t    $.fn.delegate = function(selector, event, callback) {\r\n\t        return this.on(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.undelegate = function(selector, event, callback) {\r\n\t        return this.off(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.live = function(event, callback) {\r\n\t        $(document.body).delegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.die = function(event, callback) {\r\n\t        $(document.body).undelegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.bind = function(event, selector, data, callback) {\r\n\t        return this.on(event, selector, data, callback)\r\n\t    };\r\n\r\n\t    $.fn.unbind = function(event, callback) {\r\n\t        return this.off(event, callback)\r\n\t    };\r\n\r\n\t    $.fn.ready = function(callback) {\r\n\t        eventer.ready(callback);\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.stop = function() {\r\n\t        // todo\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.moveto = function(x, y) {\r\n\t        return this.animate({\r\n\t            left: x + \"px\",\r\n\t            top: y + \"px\"\r\n\t        }, 0.4);\r\n\r\n\t    };\r\n\r\n\t    $.ready = eventer.ready;\r\n\r\n\t    $.on = eventer.on;\r\n\r\n\t    $.off = eventer.off;\r\n    })(query);\r\n\r\n    (function($){\r\n\t    // plugin compatibility\r\n\t    $.uuid = 0;\r\n\t    $.support = browser.support;\r\n\t    $.expr = {};\r\n\r\n\t    $.expr[\":\"] = $.expr.pseudos = $.expr.filters = finder.pseudos;\r\n\r\n\t    $.expr.createPseudo = function(fn) {\r\n\t    \treturn fn;\r\n\t    };\r\n\r\n\t    $.cssHooks = styler.cssHooks;\r\n\r\n\t    $.contains = noder.contains;\r\n\r\n\t    $.css = styler.css;\r\n\r\n\t    $.data = datax.data;\r\n\r\n\t    $.fx = fx;\r\n\t    $.fx.step = {\r\n\r\n        };\r\n\r\n        $.easing = {};\r\n\r\n\t    $.offset = {};\r\n\t    $.offset.setOffset = function(elem, options, i) {\r\n\t        var position = $.css(elem, \"position\");\r\n\r\n\t        // set position first, in-case top/left are set even on static elem\r\n\t        if (position === \"static\") {\r\n\t            elem.style.position = \"relative\";\r\n\t        }\r\n\r\n\t        var curElem = $(elem),\r\n\t            curOffset = curElem.offset(),\r\n\t            curCSSTop = $.css(elem, \"top\"),\r\n\t            curCSSLeft = $.css(elem, \"left\"),\r\n\t            calculatePosition = (position === \"absolute\" || position === \"fixed\") && $.inArray(\"auto\", [curCSSTop, curCSSLeft]) > -1,\r\n\t            props = {},\r\n\t            curPosition = {},\r\n\t            curTop, curLeft;\r\n\r\n\t        // need to be able to calculate position if either top or left is auto and position is either absolute or fixed\r\n\t        if (calculatePosition) {\r\n\t            curPosition = curElem.position();\r\n\t            curTop = curPosition.top;\r\n\t            curLeft = curPosition.left;\r\n\t        } else {\r\n\t            curTop = parseFloat(curCSSTop) || 0;\r\n\t            curLeft = parseFloat(curCSSLeft) || 0;\r\n\t        }\r\n\r\n\t        if ($.isFunction(options)) {\r\n\t            options = options.call(elem, i, curOffset);\r\n\t        }\r\n\r\n\t        if (options.top != null) {\r\n\t            props.top = (options.top - curOffset.top) + curTop;\r\n\t        }\r\n\t        if (options.left != null) {\r\n\t            props.left = (options.left - curOffset.left) + curLeft;\r\n\t        }\r\n\r\n\t        if (\"using\" in options) {\r\n\t            options.using.call(elem, props);\r\n\t        } else {\r\n\t            curElem.css(props);\r\n\t        }\r\n\t    };\r\n    })(query);\r\n\r\n    query.parseHTML = function(html) {\r\n        return  noder.createFragment(html);\r\n    };\r\n\r\n    query.unique = langx.uniq;\r\n\r\n    query.skylark = skylark;\r\n\r\n    return window.jQuery = window.$ = query;\r\n});\r\n\ndefine('skylark-jquery/ajax',[\r\n    \"./core\",\r\n    \"skylark-langx/langx\"\r\n], function($,langx) {\r\n    $.ajaxJSONP = function(options, langx) {\r\n        if (!('type' in options)) return $.ajax(options)\r\n\r\n        var _callbackName = options.jsonpCallback,\r\n            callbackName = ($.isFunction(_callbackName) ?\r\n                _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\r\n            script = document.createElement('script'),\r\n            originalCallback = window[callbackName],\r\n            responseData,\r\n            abort = function(errorType) {\r\n                $(script).triggerHandler('error', errorType || 'abort')\r\n            },\r\n            xhr = { abort: abort },\r\n            abortTimeout\r\n\r\n        if (deferred) deferred.promise(xhr)\r\n\r\n        $(script).on('load error', function(e, errorType) {\r\n            clearTimeout(abortTimeout)\r\n            $(script).off().remove()\r\n\r\n            if (e.type == 'error' || !responseData) {\r\n                ajaxError(null, errorType || 'error', xhr, options, deferred)\r\n            } else {\r\n                ajaxSuccess(responseData[0], xhr, options, deferred)\r\n            }\r\n\r\n            window[callbackName] = originalCallback\r\n            if (responseData && $.isFunction(originalCallback))\r\n                originalCallback(responseData[0])\r\n\r\n            originalCallback = responseData = undefined\r\n        })\r\n\r\n        if (ajaxBeforeSend(xhr, options) === false) {\r\n            abort('abort')\r\n            return xhr\r\n        }\r\n\r\n        window[callbackName] = function() {\r\n            responseData = arguments\r\n        }\r\n\r\n        script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\r\n        document.head.appendChild(script)\r\n\r\n        if (options.timeout > 0) abortTimeout = setTimeout(function() {\r\n            abort('timeout')\r\n        }, options.timeout)\r\n\r\n        return xhr;\r\n    }\r\n\r\n    $.ajaxSettings = langx.Xhr.defaultOptions;\r\n\r\n    $.ajaxSettings.xhr = function() {\r\n        return new window.XMLHttpRequest()\r\n    };\r\n\r\n    $.ajax = function(options) {\r\n        return langx.Xhr.request(options.url,options);\r\n    };\r\n\r\n    // handle optional data/success arguments\r\n    function parseArguments(url, data, success, dataType) {\r\n        if ($.isFunction(data)) dataType = success, success = data, data = undefined\r\n        if (!$.isFunction(success)) dataType = success, success = undefined\r\n        return {\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            dataType: dataType\r\n        }\r\n    }\r\n\r\n    $.get = function( /* url, data, success, dataType */ ) {\r\n        return $.ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    $.post = function( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.type = 'POST'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    $.getJSON = function( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.dataType = 'json'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    $.fn.load = function(url, data, success) {\r\n        if (!this.length) return this\r\n        var self = this,\r\n            parts = url.split(/\\s/),\r\n            selector,\r\n            options = parseArguments(url, data, success),\r\n            callback = options.success\r\n        if (parts.length > 1) options.url = parts[0], selector = parts[1]\r\n        options.success = function(response) {\r\n            self.html(selector ?\r\n                $('<div>').html(response.replace(rscript, \"\")).find(selector) : response)\r\n            callback && callback.apply(self, arguments)\r\n        }\r\n        $.ajax(options)\r\n        return this\r\n    }\r\n\r\n    $.param = langx.Xhr.param;\r\n\r\n\r\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n    function addToPrefiltersOrTransports(structure) {\r\n\r\n        // dataTypeExpression is optional and defaults to \"*\"\r\n        return function(dataTypeExpression, func) {\r\n\r\n            if (typeof dataTypeExpression !== \"string\") {\r\n                func = dataTypeExpression;\r\n                dataTypeExpression = \"*\";\r\n            }\r\n\r\n            var dataType,\r\n                i = 0,\r\n                dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\r\n\r\n            if (jQuery.isFunction(func)) {\r\n\r\n                // For each dataType in the dataTypeExpression\r\n                while ((dataType = dataTypes[i++])) {\r\n\r\n                    // Prepend if requested\r\n                    if (dataType[0] === \"+\") {\r\n                        dataType = dataType.slice(1) || \"*\";\r\n                        (structure[dataType] = structure[dataType] || []).unshift(func);\r\n\r\n                        // Otherwise append\r\n                    } else {\r\n                        (structure[dataType] = structure[dataType] || []).push(func);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    var\r\n        prefilters = {},\r\n        transports = {},\r\n        rnotwhite = (/\\S+/g);\r\n\r\n    $.ajaxPrefilter = addToPrefiltersOrTransports(prefilters);\r\n    $.ajaxTransport = addToPrefiltersOrTransports(transports);\r\n    $.ajaxSetup = function(target, settings) {\r\n        langx.mixin(langx.Xhr.defaultOptions,target,settings);\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/callbacks',[\r\n    \"./core\"\r\n], function($) {\r\n\r\n    //     This module is borrow from zepto.callback.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    // Create a collection of callbacks to be fired in a sequence, with configurable behaviour\r\n    // Option flags:\r\n    //   - once: Callbacks fired at most one time.\r\n    //   - memory: Remember the most recent context and arguments\r\n    //   - stopOnFalse: Cease iterating over callback list\r\n    //   - unique: Permit adding at most one instance of the same callback\r\n    $.Callbacks = function(options) {\r\n        options = $.extend({}, options)\r\n\r\n        var memory, // Last fire value (for non-forgettable lists)\r\n            fired, // Flag to know if list was already fired\r\n            firing, // Flag to know if list is currently firing\r\n            firingStart, // First callback to fire (used internally by add and fireWith)\r\n            firingLength, // End of the loop when firing\r\n            firingIndex, // Index of currently firing callback (modified by remove if needed)\r\n            list = [], // Actual callback list\r\n            stack = !options.once && [], // Stack of fire calls for repeatable lists\r\n            fire = function(data) {\r\n                memory = options.memory && data\r\n                fired = true\r\n                firingIndex = firingStart || 0\r\n                firingStart = 0\r\n                firingLength = list.length\r\n                firing = true\r\n                for (; list && firingIndex < firingLength; ++firingIndex) {\r\n                    if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\r\n                        memory = false\r\n                        break\r\n                    }\r\n                }\r\n                firing = false\r\n                if (list) {\r\n                    if (stack) stack.length && fire(stack.shift())\r\n                    else if (memory) list.length = 0\r\n                    else Callbacks.disable()\r\n                }\r\n            },\r\n\r\n            Callbacks = {\r\n                add: function() {\r\n                    if (list) {\r\n                        var start = list.length,\r\n                            add = function(args) {\r\n                                $.each(args, function(_, arg) {\r\n                                    if (typeof arg === \"function\") {\r\n                                        if (!options.unique || !Callbacks.has(arg)) list.push(arg)\r\n                                    } else if (arg && arg.length && typeof arg !== 'string') add(arg)\r\n                                })\r\n                            }\r\n                        add(arguments)\r\n                        if (firing) firingLength = list.length\r\n                        else if (memory) {\r\n                            firingStart = start\r\n                            fire(memory)\r\n                        }\r\n                    }\r\n                    return this\r\n                },\r\n                remove: function() {\r\n                    if (list) {\r\n                        $.each(arguments, function(_, arg) {\r\n                            var index\r\n                            while ((index = $.inArray(arg, list, index)) > -1) {\r\n                                list.splice(index, 1)\r\n                                // Handle firing indexes\r\n                                if (firing) {\r\n                                    if (index <= firingLength) --firingLength\r\n                                    if (index <= firingIndex) --firingIndex\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    return this\r\n                },\r\n                has: function(fn) {\r\n                    return !!(list && (fn ? $.inArray(fn, list) > -1 : list.length))\r\n                },\r\n                empty: function() {\r\n                    firingLength = list.length = 0\r\n                    return this\r\n                },\r\n                disable: function() {\r\n                    list = stack = memory = undefined\r\n                    return this\r\n                },\r\n                disabled: function() {\r\n                    return !list\r\n                },\r\n                lock: function() {\r\n                    stack = undefined;\r\n                    if (!memory) Callbacks.disable()\r\n                    return this\r\n                },\r\n                locked: function() {\r\n                    return !stack\r\n                },\r\n                fireWith: function(context, args) {\r\n                    if (list && (!fired || stack)) {\r\n                        args = args || []\r\n                        args = [context, args.slice ? args.slice() : args]\r\n                        if (firing) stack.push(args)\r\n                        else fire(args)\r\n                    }\r\n                    return this\r\n                },\r\n                fire: function() {\r\n                    return Callbacks.fireWith(this, arguments)\r\n                },\r\n                fired: function() {\r\n                    return !!fired\r\n                }\r\n            }\r\n\r\n        return Callbacks\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/deferred',[\r\n    \"./core\",\r\n    \"skylark-langx/langx\"\r\n], function($,langx) {\r\n\r\n    $.Deferred = function() {\r\n        var d = new langx.Deferred(),\r\n            _p = d.promise;\r\n        d.promise = function() {\r\n            return _p;\r\n        }\r\n        return d;\r\n    };\r\n\r\n    $.when = langx.Deferred.when;\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/main',[\r\n    \"./core\",\r\n    \"./ajax\",\r\n    \"./callbacks\",\r\n    \"./deferred\"\r\n], function($) {\r\n    return $;\r\n});\r\n\ndefine('skylark-jquery', ['skylark-jquery/main'], function (main) { return main; });\n\n"]}