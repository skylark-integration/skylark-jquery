{"version":3,"sources":["skylark-jquery.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","window","jQuery","$","skylark","browser","langx","noder","datax","eventer","finder","fx","styler","query","filter","Array","prototype","slice","fn","jquery","camelCase","each","extend","target","deep","call","arguments","shift","this","arg","mixin","grep","elements","callback","isArray","isEmptyObject","isFunction","isWindow","isPlainObject","inArray","makeArray","noop","parseJSON","JSON","parse","proxy","trim","type","props","serializeArray","name","result","add","value","_","field","nodeName","toLowerCase","disabled","checked","val","serialize","elm","encodeURIComponent","Event","isString","create","event","special","submit","bind","eq","trigger","isDefaultPrevented","get","triggerHandler","delegate","selector","on","undelegate","off","live","document","body","die","data","unbind","ready","hover","fnOver","fnOut","mouseenter","mouseleave","stop","moveto","x","y","animate","left","top","uuid","support","expr","pseudos","filters","createPseudo","cssHooks","contains","css","step","easing","offset","setOffset","elem","options","position","style","curTop","curLeft","curElem","curOffset","curCSSTop","curCSSLeft","calculatePosition","curPosition","parseFloat","using","parseHTML","html","createFragment","Deferred","func","tuples","Callbacks","once","memory","state","promise","always","deferred","done","fail","then","fns","defer","tuple","returned","resolve","reject","progress","notify","context","values","obj","list","stateString","disable","lock","fireWith","when","sub","progressValues","progressContexts","resolveContexts","resolveValues","len","remain","updateFn","ctx","notifyWith","resolveWith","triggerAndReturn","eventName","triggerGlobal","settings","global","ajaxStart","active","ajaxStop","ajaxBeforeSend","xhr","beforeSend","ajaxSuccess","status","success","ajaxComplete","ajaxError","error","rejectWith","complete","empty","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","test","xmlTypeRE","appendQuery","url","replace","serializeData","processData","param","traditional","toUpperCase","undefined","parseArguments","dataType","params","scope","array","hash","key","addToPrefiltersOrTransports","structure","dataTypeExpression","dataTypes","match","rnotwhite","unshift","ajaxExtend","src","flatOptions","ajaxSettings","jsonpID","rscript","blankRE","originAnchor","createElement","href","location","ajaxJSONP","ajax","responseData","abortTimeout","_callbackName","jsonpCallback","callbackName","script","originalCallback","abort","errorType","e","clearTimeout","remove","head","appendChild","timeout","setTimeout","XMLHttpRequest","accepts","json","xml","text","crossDomain","cache","urlAnchor","protocol","host","toString","hasPlaceholder","Date","now","jsonp","headers","setHeader","RegExp","$1","nativeSetHeader","setRequestHeader","mimeType","indexOf","overrideMimeType","contentType","onreadystatechange","readyState","getResponseHeader","responseText","eval","responseXML","statusText","xhrFields","async","open","username","password","send","post","getJSON","load","self","response","find","escape","prefilters","transports","ajaxPrefilter","ajaxTransport","ajaxSetup","fired","firing","firingStart","firingLength","firingIndex","fire","stopOnFalse","start","unique","has","index","splice","locked","main"],"mappings":";;;;;;;CAAA,SAAUA,EAAQC,GAQd,QAASC,GAASC,EAAUC,GACxB,GAAkB,MAAdD,EAAS,GACX,MAAOA,EAET,IAAIE,GAAQD,EAAKE,MAAM,KACnBC,EAAQJ,EAASG,MAAM,IAC3BD,GAAMG,KACN,KAAK,GAAIC,GAAE,EAAGA,EAAEF,EAAMG,OAAQD,IACV,KAAZF,EAAME,KAEM,MAAZF,EAAME,GACNJ,EAAMG,MAENH,EAAMM,KAAKJ,EAAME,IAEzB,OAAOJ,GAAMO,KAAK,KAtBxB,GAAIC,GAASZ,EAAQY,OAClBC,EAAUb,EAAQa,QAClBC,EAA2B,kBAAXF,IAAyBA,EAAOG,IAChDC,GAAUF,GAA4B,mBAAZG,QAE7B,KAAKH,IAAUF,EAAQ,CACrB,GAAIM,KAkBJN,GAASZ,EAAQY,OAAS,SAASO,EAAIC,EAAMrB,GACnB,kBAAXA,IACPmB,EAAIC,IACApB,QAASA,EACTqB,KAAMA,EAAKF,IAAI,SAASG,GACtB,MAAOpB,GAASoB,EAAIF,KAEtBF,QAAS,MAEbJ,EAAQM,IAERG,SAASH,GAAMpB,GAGvBc,EAAUb,EAAQa,QAAU,SAASM,GACjC,IAAKD,EAAIK,eAAeJ,GACpB,KAAM,IAAIK,OAAM,UAAYL,EAAK,wBAErC,IAAIM,GAASP,EAAIC,EACjB,KAAKM,EAAOR,QAAS,CACjB,GAAIS,KAEJD,GAAOL,KAAKO,QAAQ,SAASN,GACzBK,EAAKhB,KAAKG,EAAQQ,MAGtBI,EAAOR,QAAUQ,EAAO1B,QAAQ6B,MAAMC,OAAQH,GAElD,MAAOD,GAAOR,SAMpB,GAFAlB,EAAQa,EAAOC,IAEVC,EAAO,CACV,GAAIgB,GAAUjB,EAAQ,sBAElBG,GACFC,QAAUa,EAEV9B,EAAQ8B,OAAS9B,EAAQ+B,EAAID,IAIhC,SAASlB,EAAOC,GArEnBD,EAAA,uBACA,wBACA,wBACA,sBACA,sBACA,sBACA,wBACA,uBACA,mBACA,uBACA,uBACA,SAAAoB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAC,MAAAC,UAAAF,OACAG,EAAAF,MAAAC,UAAAC,KAiPA,OA/OA,UAAAd,GACAA,EAAAe,GAAAC,OAAA,QAEAhB,EAAAiB,UAAAd,EAAAc,UAEAjB,EAAAkB,KAAAf,EAAAe,KAEAlB,EAAAmB,OAAA,SAAAC,GACA,GAAAC,GAAA1B,EAAAmB,EAAAQ,KAAAC,UAAA,EAYA,OAXA,iBAAAH,KACAC,EAAAD,EACAA,EAAAzB,EAAA6B,SAEA,GAAA7B,EAAAjB,SACAiB,GAAAyB,GACAA,EAAAK,MAEA9B,EAAAC,QAAA,SAAA8B,GACAvB,EAAAwB,MAAAP,EAAAM,EAAAL,KAEAD,GAGApB,EAAA4B,KAAA,SAAAC,EAAAC,GACA,MAAAnB,GAAAW,KAAAO,EAAAC,IAGA9B,EAAA+B,QAAA5B,EAAA4B,QACA/B,EAAAgC,cAAA7B,EAAA6B,cACAhC,EAAAiC,WAAA9B,EAAA8B,WACAjC,EAAAkC,SAAA/B,EAAA+B,SACAlC,EAAAmC,cAAAhC,EAAAgC,cAEAnC,EAAAoC,QAAAjC,EAAAiC,QAEApC,EAAAqC,UAAAlC,EAAAkC,UACArC,EAAAb,IAAAgB,EAAAhB,IAEAa,EAAAsC,KAAA,aAGAtC,EAAAuC,UAAAzC,OAAA0C,KAAAC,MAEAzC,EAAA0C,MAAAvC,EAAAuC,MAEA1C,EAAA2C,KAAAxC,EAAAwC,KACA3C,EAAA4C,KAAAzC,EAAAyC,KAEA5C,EAAAe,GAAAI,OAAA,SAAA0B,GACA1C,EAAAwB,MAAA3B,EAAAe,GAAA8B,IAGA7C,EAAAe,GAAA+B,eAAA,WACA,GAAAC,GAAAH,EAAAI,KACAC,EAAA,SAAAC,GACA,MAAAA,GAAAtD,QAAAsD,EAAAtD,QAAAqD,OACAD,GAAArE,MAAAoE,KAAAA,EAAAG,MAAAA,IASA,OAPAzB,MAAA,IAAAtB,EAAAe,KAAAO,KAAA,GAAAI,SAAA,SAAAsB,EAAAC,GACAR,EAAAQ,EAAAR,KAAAG,EAAAK,EAAAL,KACAA,GAAA,YAAAK,EAAAC,SAAAC,gBACAF,EAAAG,UAAA,UAAAX,GAAA,SAAAA,GAAA,UAAAA,GAAA,QAAAA,IACA,SAAAA,GAAA,YAAAA,GAAAQ,EAAAI,UACAP,EAAAjD,EAAAoD,GAAAK,SAEAT,GAGAhD,EAAAe,GAAA2C,UAAA,WACA,GAAAV,KAIA,OAHAvB,MAAAqB,iBAAAlD,QAAA,SAAA+D,GACAX,EAAArE,KAAAiF,mBAAAD,EAAAZ,MAAA,IAAAa,mBAAAD,EAAAT,UAEAF,EAAApE,KAAA,OAEA8B,GAEA,SAAAV,GACAA,EAAA6D,MAAA,SAAAjB,EAAAC,GAKA,MAJAD,KAAAzC,EAAA2D,SAAAlB,KACAC,EAAAD,EACAA,EAAAC,EAAAD,MAEAtC,EAAAyD,OAAAnB,EAAAC,IAGA7C,EAAAgE,SAEAhE,EAAAgE,MAAAC,QAAA3D,EAAA2D,QAEAjE,EAAAe,GAAAmD,OAAA,SAAApC,GACA,GAAA,IAAAP,WAAAE,KAAA0C,KAAA,SAAArC,OACA,IAAAL,KAAA/C,OAAA,CACA,GAAAsF,GAAAhE,EAAA6D,MAAA,SACApC,MAAA2C,GAAA,GAAAC,QAAAL,GACAA,EAAAM,sBAAA7C,KAAA8C,IAAA,GAAAL,SAEA,MAAAzC,OAIAzB,EAAAe,GAAAyD,eAAAxE,EAAAe,GAAAsD,QAEArE,EAAAe,GAAA0D,SAAA,SAAAC,EAAAV,EAAAlC,GACA,MAAAL,MAAAkD,GAAAX,EAAAU,EAAA5C,IAGA9B,EAAAe,GAAA6D,WAAA,SAAAF,EAAAV,EAAAlC,GACA,MAAAL,MAAAoD,IAAAb,EAAAU,EAAA5C,IAGA9B,EAAAe,GAAA+D,KAAA,SAAAd,EAAAlC,GAEA,MADA9B,GAAA+E,SAAAC,MAAAP,SAAAhD,KAAAiD,SAAAV,EAAAlC,GACAL,MAGAzB,EAAAe,GAAAkE,IAAA,SAAAjB,EAAAlC,GAEA,MADA9B,GAAA+E,SAAAC,MAAAJ,WAAAnD,KAAAiD,SAAAV,EAAAlC,GACAL,MAGAzB,EAAAe,GAAAoD,KAAA,SAAAH,EAAAU,EAAAQ,EAAApD,GACA,MAAAL,MAAAkD,GAAAX,EAAAU,EAAAQ,EAAApD,IAGA9B,EAAAe,GAAAoE,OAAA,SAAAnB,EAAAlC,GACA,MAAAL,MAAAoD,IAAAb,EAAAlC,IAGA9B,EAAAe,GAAAqE,MAAA,SAAAtD,GAEA,MADAxB,GAAA8E,MAAAtD,GACAL,MAGAzB,EAAAe,GAAAsE,MAAA,SAAAC,EAAAC,GACA,MAAA9D,MAAA+D,WAAAF,GAAAG,WAAAF,GAAAD,IAGAtF,EAAAe,GAAA2E,KAAA,WAEA,MAAAjE,OAGAzB,EAAAe,GAAA4E,OAAA,SAAAC,EAAAC,GACA,MAAApE,MAAAqE,SACAC,KAAAH,EAAA,KACAI,IAAAH,EAAA,MACA,KAIA7F,EAAAoF,MAAA9E,EAAA8E,MAEApF,EAAA2E,GAAArE,EAAAqE,GAEA3E,EAAA6E,IAAAvE,EAAAuE,KACAnE,GAEA,SAAAV,GAEAA,EAAAiG,KAAA,EACAjG,EAAAkG,QAAAhG,EAAAgG,QACAlG,EAAAmG,QAEAnG,EAAAmG,KAAA,KAAAnG,EAAAmG,KAAAC,QAAApG,EAAAmG,KAAAE,QAAA9F,EAAA6F,QAEApG,EAAAmG,KAAAG,aAAA,SAAAvF,GACA,MAAAA,IAGAf,EAAAuG,SAAA9F,EAAA8F,SAEAvG,EAAAwG,SAAApG,EAAAoG,SAEAxG,EAAAyG,IAAAhG,EAAAgG,IAEAzG,EAAAkF,KAAA7E,EAAA6E,KAEAlF,EAAAQ,GAAAA,EACAR,EAAAQ,GAAAkG,QAIA1G,EAAA2G,UAEA3G,EAAA4G,UACA5G,EAAA4G,OAAAC,UAAA,SAAAC,EAAAC,EAAAtI,GACA,GAAAuI,GAAAhH,EAAAyG,IAAAK,EAAA,WAGA,YAAAE,IACAF,EAAAG,MAAAD,SAAA,WAGA,IAOAE,GAAAC,EAPAC,EAAApH,EAAA8G,GACAO,EAAAD,EAAAR,SACAU,EAAAtH,EAAAyG,IAAAK,EAAA,OACAS,EAAAvH,EAAAyG,IAAAK,EAAA,QACAU,GAAA,aAAAR,GAAA,UAAAA,IAAAhH,EAAAoC,QAAA,QAAAkF,EAAAC,OACA1E,KACA4E,IAIAD,IACAC,EAAAL,EAAAJ,WACAE,EAAAO,EAAAzB,IACAmB,EAAAM,EAAA1B,OAEAmB,EAAAQ,WAAAJ,IAAA,EACAH,EAAAO,WAAAH,IAAA,GAGAvH,EAAAiC,WAAA8E,KACAA,EAAAA,EAAAzF,KAAAwF,EAAArI,EAAA4I,IAGA,MAAAN,EAAAf,MACAnD,EAAAmD,IAAAe,EAAAf,IAAAqB,EAAArB,IAAAkB,GAEA,MAAAH,EAAAhB,OACAlD,EAAAkD,KAAAgB,EAAAhB,KAAAsB,EAAAtB,KAAAoB,GAGA,SAAAJ,GACAA,EAAAY,MAAArG,KAAAwF,EAAAjE,GAEAuE,EAAAX,IAAA5D,KAGAnC,GAEAA,EAAAkH,UAAA,SAAAC,GACA,MAAAzH,GAAA0H,eAAAD,IAIAnH,EAAAT,QAAAA,EAEAH,OAAAC,OAAAD,OAAAE,EAAAU,IAGA7B,EAAA,2BACA,UACA,SAAAmB,GAiBA,QAAA+H,GAAAC,GACA,GAAAC,KAEA,UAAA,OAAAjI,EAAAkI,WAAAC,KAAA,EAAAC,OAAA,IAAA,aACA,SAAA,OAAApI,EAAAkI,WAAAC,KAAA,EAAAC,OAAA,IAAA,aACA,SAAA,WAAApI,EAAAkI,WAAAE,OAAA,MAEAC,EAAA,UACAC,GACAD,MAAA,WACA,MAAAA,IAEAE,OAAA,WAEA,MADAC,GAAAC,KAAAlH,WAAAmH,KAAAnH,WACAE,MAEAkH,KAAA,WACA,GAAAC,GAAArH,SACA,OAAAwG,GAAA,SAAAc,GACA7I,EAAAkB,KAAA+G,EAAA,SAAAxJ,EAAAqK,GACA,GAAA/H,GAAAf,EAAAiC,WAAA2G,EAAAnK,KAAAmK,EAAAnK,EACA+J,GAAAM,EAAA,IAAA,WACA,GAAAC,GAAAhI,GAAAA,EAAAlB,MAAA4B,KAAAF,UACA,IAAAwH,GAAA/I,EAAAiC,WAAA8G,EAAAT,SACAS,EAAAT,UACAG,KAAAI,EAAAG,SACAN,KAAAG,EAAAI,QACAC,SAAAL,EAAAM,YACA,CACA,GAAAC,GAAA3H,OAAA6G,EAAAO,EAAAP,UAAA7G,KACA4H,EAAAtI,GAAAgI,GAAAxH,SACAsH,GAAAC,EAAA,GAAA,QAAAM,EAAAC,QAIAT,EAAA,OACAN,WAGAA,QAAA,SAAAgB,GACA,MAAA,OAAAA,EAAAtJ,EAAAmB,OAAAmI,EAAAhB,GAAAA,IAGAE,IAuBA,OArBAxI,GAAAkB,KAAA+G,EAAA,SAAAxJ,EAAAqK,GACA,GAAAS,GAAAT,EAAA,GACAU,EAAAV,EAAA,EAEAR,GAAAQ,EAAA,IAAAS,EAAAtG,IAEAuG,GACAD,EAAAtG,IAAA,WACAoF,EAAAmB,GACAvB,EAAA,EAAAxJ,GAAA,GAAAgL,QAAAxB,EAAA,GAAA,GAAAyB,MAGAlB,EAAAM,EAAA,IAAA,WAEA,MADAN,GAAAM,EAAA,GAAA,QAAArH,OAAA+G,EAAAF,EAAA7G,KAAAF,WACAE,MAEA+G,EAAAM,EAAA,GAAA,QAAAS,EAAAI,WAGArB,EAAAA,QAAAE,GACAR,GAAAA,EAAA1G,KAAAkH,EAAAA,GACAA,EApEA,GAAA1H,GAAAF,MAAAC,UAAAC,KA+GA,OAxCAd,GAAA4J,KAAA,SAAAC,GACA,GAKAC,GAAAC,EAAAC,EALAC,EAAAnJ,EAAAQ,KAAAC,WACA2I,EAAAD,EAAAvL,OACAD,EAAA,EACA0L,EAAA,IAAAD,GAAAL,GAAA7J,EAAAiC,WAAA4H,EAAAvB,SAAA4B,EAAA,EACA1B,EAAA,IAAA2B,EAAAN,EAAA9B,IAEAqC,EAAA,SAAA3L,EAAA4L,EAAA5G,GACA,MAAA,UAAAP,GACAmH,EAAA5L,GAAAgD,KACAgC,EAAAhF,GAAA8C,UAAA7C,OAAA,EAAAoC,EAAAQ,KAAAC,WAAA2B,EACAO,IAAAqG,EACAtB,EAAA8B,WAAAD,EAAA5G,KACA0G,GACA3B,EAAA+B,YAAAF,EAAA5G,IAKA,IAAAyG,EAAA,EAIA,IAHAJ,EAAA,GAAAlJ,OAAAsJ,GACAH,EAAA,GAAAnJ,OAAAsJ,GACAF,EAAA,GAAApJ,OAAAsJ,GACAzL,EAAAyL,IAAAzL,EACAwL,EAAAxL,IAAAuB,EAAAiC,WAAAgI,EAAAxL,GAAA6J,SACA2B,EAAAxL,GAAA6J,UACAG,KAAA2B,EAAA3L,EAAAuL,EAAAC,IACAvB,KAAAF,EAAAS,QACAC,SAAAkB,EAAA3L,EAAAsL,EAAAD,MAEAK,CAKA,OADAA,IAAA3B,EAAA+B,YAAAP,EAAAC,GACAzB,EAAAF,WAGAtI,EAAA+H,SAAAA,EAEA/H,IAIAnB,EAAA,uBACA,SACA,cACA,SAAAmB,GAoBA,QAAAwK,GAAApB,EAAAqB,EAAAvF,GACA,GAAAlB,GAAAhE,EAAA6D,MAAA4G,EAEA,OADAzK,GAAAoJ,GAAA/E,QAAAL,EAAAkB,IACAlB,EAAAM,qBAIA,QAAAoG,GAAAC,EAAAvB,EAAAqB,EAAAvF,GACA,GAAAyF,EAAAC,OAAA,MAAAJ,GAAApB,GAAArE,EAAA0F,EAAAvF,GAMA,QAAA2F,GAAAF,GACAA,EAAAC,QAAA,IAAA5K,EAAA8K,UAAAJ,EAAAC,EAAA,KAAA,aAGA,QAAAI,GAAAJ,GACAA,EAAAC,WAAA5K,EAAA8K,QAAAJ,EAAAC,EAAA,KAAA,YAIA,QAAAK,GAAAC,EAAAN,GACA,GAAAvB,GAAAuB,EAAAvB,OACA,OAAAuB,GAAAO,WAAA5J,KAAA8H,EAAA6B,EAAAN,MAAA,GACAD,EAAAC,EAAAvB,EAAA,kBAAA6B,EAAAN,OAAA,OAGAD,GAAAC,EAAAvB,EAAA,YAAA6B,EAAAN,IAGA,QAAAQ,GAAAjG,EAAA+F,EAAAN,EAAAnC,GACA,GAAAY,GAAAuB,EAAAvB,QACAgC,EAAA,SACAT,GAAAU,QAAA/J,KAAA8H,EAAAlE,EAAAkG,EAAAH,GACAzC,GAAAA,EAAA+B,YAAAnB,GAAAlE,EAAAkG,EAAAH,IACAP,EAAAC,EAAAvB,EAAA,eAAA6B,EAAAN,EAAAzF,IACAoG,EAAAF,EAAAH,EAAAN,GAGA,QAAAY,GAAAC,EAAA5I,EAAAqI,EAAAN,EAAAnC,GACA,GAAAY,GAAAuB,EAAAvB,OACAuB,GAAAa,MAAAlK,KAAA8H,EAAA6B,EAAArI,EAAA4I,GACAhD,GAAAA,EAAAiD,WAAArC,GAAA6B,EAAArI,EAAA4I,IACAd,EAAAC,EAAAvB,EAAA,aAAA6B,EAAAN,EAAAa,GAAA5I,IACA0I,EAAA1I,EAAAqI,EAAAN,GAGA,QAAAW,GAAAF,EAAAH,EAAAN,GACA,GAAAvB,GAAAuB,EAAAvB,OACAuB,GAAAe,SAAApK,KAAA8H,EAAA6B,EAAAG,GACAV,EAAAC,EAAAvB,EAAA,gBAAA6B,EAAAN,IACAI,EAAAJ,GAIA,QAAAgB,MA6FA,QAAAC,GAAAC,GAEA,MADAA,KAAAA,EAAAA,EAAAvN,MAAA,IAAA,GAAA,IACAuN,IAAAA,GAAAC,EAAA,OACAD,GAAAE,EAAA,OACAC,EAAAC,KAAAJ,GAAA,SACAK,EAAAD,KAAAJ,IAAA,QAAA,OAGA,QAAAM,GAAAC,EAAA1L,GACA,MAAA,IAAAA,EAAA0L,GACAA,EAAA,IAAA1L,GAAA2L,QAAA,YAAA,KAIA,QAAAC,GAAAvF,GACAA,EAAAwF,aAAAxF,EAAA7B,MAAA,UAAAlF,EAAA4C,KAAAmE,EAAA7B,QACA6B,EAAA7B,KAAAlF,EAAAwM,MAAAzF,EAAA7B,KAAA6B,EAAA0F,eACA1F,EAAA7B,MAAA6B,EAAAnE,MAAA,OAAAmE,EAAAnE,KAAA8J,gBACA3F,EAAAqF,IAAAD,EAAApF,EAAAqF,IAAArF,EAAA7B,MAAA6B,EAAA7B,KAAAyH,QAgHA,QAAAC,GAAAR,EAAAlH,EAAAmG,EAAAwB,GAGA,MAFA7M,GAAAiC,WAAAiD,KAAA2H,EAAAxB,EAAAA,EAAAnG,EAAAA,EAAAyH,QACA3M,EAAAiC,WAAAoJ,KAAAwB,EAAAxB,EAAAA,EAAAsB,SAEAP,IAAAA,EACAlH,KAAAA,EACAmG,QAAAA,EACAwB,SAAAA,GAuCA,QAAAnJ,GAAAoJ,EAAAxD,EAAAmD,EAAAM,GACA,GAAAnK,GAAAoK,EAAAhN,EAAA+B,QAAAuH,GACA2D,EAAAjN,EAAAmC,cAAAmH,EACAtJ,GAAAkB,KAAAoI,EAAA,SAAA4D,EAAAhK,GACAN,EAAA5C,EAAA4C,KAAAM,GACA6J,IAAAG,EAAAT,EAAAM,EACAA,EAAA,KAAAE,GAAA,UAAArK,GAAA,SAAAA,EAAAsK,EAAA,IAAA,MAEAH,GAAAC,EAAAF,EAAA7J,IAAAC,EAAAH,KAAAG,EAAAA,OAEA,SAAAN,IAAA6J,GAAA,UAAA7J,EACAc,EAAAoJ,EAAA5J,EAAAuJ,EAAAS,GACAJ,EAAA7J,IAAAiK,EAAAhK,KAqCA,QAAAiK,GAAAC,GAGA,MAAA,UAAAC,EAAArF,GAEA,gBAAAqF,KACArF,EAAAqF,EACAA,EAAA,IAGA,IAAAR,GACApO,EAAA,EACA6O,EAAAD,EAAA/J,cAAAiK,MAAAC,MAEA,IAAAzN,OAAAkC,WAAA+F,GAGA,KAAA6E,EAAAS,EAAA7O,MAGA,MAAAoO,EAAA,IACAA,EAAAA,EAAA/L,MAAA,IAAA,KACAsM,EAAAP,GAAAO,EAAAP,QAAAY,QAAAzF,KAIAoF,EAAAP,GAAAO,EAAAP,QAAAlO,KAAAqJ,IAaA,QAAA0F,GAAAtM,EAAAuM,GACA,GAAAT,GAAA7L,EACAuM,EAAA7N,OAAA8N,aAAAD,eAEA,KAAAV,IAAAS,GACAhB,SAAAgB,EAAAT,MACAU,EAAAV,GAAA9L,EAAAC,IAAAA,OAAA6L,GAAAS,EAAAT,GAOA,OAJA7L,IACAtB,OAAAoB,QAAA,EAAAC,EAAAC,GAGAD,EA1bA,GAEA8L,GACAnK,EAHA+K,EAAA,EACA/I,EAAAjF,OAAAiF,SAGAgJ,EAAA,sDACA/B,EAAA,qCACAE,EAAA,8BACAH,EAAA,mBACAD,EAAA,YACAkC,EAAA,QACAC,EAAAlJ,EAAAmJ,cAAA,IAEAD,GAAAE,KAAArO,OAAAsO,SAAAD,KAeAnO,EAAA8K,OAAA,EA+CA9K,EAAAqO,UAAA,SAAAtH,EAAAyB,GACA,KAAA,QAAAzB,IAAA,MAAA/G,GAAAsO,KAAAvH,EAEA,IAKAwH,GAKAC,EAVAC,EAAA1H,EAAA2H,cACAC,GAAA3O,EAAAiC,WAAAwM,GACAA,IAAAA,IAAA,WAAAX,EACAc,EAAA7J,EAAAmJ,cAAA,UACAW,EAAA/O,OAAA6O,GAEAG,EAAA,SAAAC,GACA/O,EAAA4O,GAAApK,eAAA,QAAAuK,GAAA,UAEA9D,GAAA6D,MAAAA,EAsBA,OAnBAtG,IAAAA,EAAAF,QAAA2C,GAEAjL,EAAA4O,GAAAjK,GAAA,aAAA,SAAAqK,EAAAD,GACAE,aAAAT,GACAxO,EAAA4O,GAAA/J,MAAAqK,SAEA,SAAAF,EAAApM,MAAA2L,EAGApD,EAAAoD,EAAA,GAAAtD,EAAAlE,EAAAyB,GAFA+C,EAAA,KAAAwD,GAAA,QAAA9D,EAAAlE,EAAAyB,GAKA1I,OAAA6O,GAAAE,EACAN,GAAAvO,EAAAiC,WAAA4M,IACAA,EAAAN,EAAA,IAEAM,EAAAN,EAAA5B,SAGA3B,EAAAC,EAAAlE,MAAA,GACA+H,EAAA,SACA7D,IAGAnL,OAAA6O,GAAA,WACAJ,EAAAhN,WAGAqN,EAAAjB,IAAA5G,EAAAqF,IAAAC,QAAA,YAAA,OAAAsC,GACA5J,EAAAoK,KAAAC,YAAAR,GAEA7H,EAAAsI,QAAA,IAAAb,EAAAc,WAAA,WACAR,EAAA,YACA/H,EAAAsI,UAEApE,IAGAjL,EAAA6N,cAEAjL,KAAA,MAEAsI,WAAAS,EAEAN,QAAAM,EAEAH,MAAAG,EAEAD,SAAAC,EAEAvC,QAAA,KAEAwB,QAAA,EAEAK,IAAA,WACA,MAAA,IAAAnL,QAAAyP,gBAIAC,SACAZ,OAAA,oEACAa,KAAA1D,EACA2D,IAAA,4BACA7H,KAAAiE,EACA6D,KAAA,cAGAC,aAAA,EAEAP,QAAA,EAEA9C,aAAA,EAEAsD,OAAA,GAwBA7P,EAAAsO,KAAA,SAAAvH,GACA,GAEA+I,GAFAnF,EAAA3K,EAAAmB,UAAA4F,OACAyB,EAAAxI,EAAA+H,UAAA/H,EAAA+H,UAEA,KAAAmF,IAAAlN,GAAA6N,aACAlB,SAAAhC,EAAAuC,KAAAvC,EAAAuC,GAAAlN,EAAA6N,aAAAX,GAEArC,GAAAF,GAEAA,EAAAiF,cACAE,EAAA/K,EAAAmJ,cAAA,KACA4B,EAAA3B,KAAAxD,EAAAyB,IACA0D,EAAA3B,KAAA2B,EAAA3B,KACAxD,EAAAiF,YAAA3B,EAAA8B,SAAA,KAAA9B,EAAA+B,MAAAF,EAAAC,SAAA,KAAAD,EAAAE,MAGArF,EAAAyB,MAAAzB,EAAAyB,IAAAtM,OAAAsO,SAAA6B,YACA3D,EAAA3B,EAEA,IAAAkC,GAAAlC,EAAAkC,SACAqD,EAAA,UAAAjE,KAAAtB,EAAAyB,IASA,IARA8D,IAAArD,EAAA,SAEAlC,EAAAkF,SAAA,IACA9I,GAAAA,EAAA8I,SAAA,GACA,UAAAhD,GAAA,SAAAA,KAEAlC,EAAAyB,IAAAD,EAAAxB,EAAAyB,IAAA,KAAA+D,KAAAC,QAEA,SAAAvD,EAIA,MAHAqD,KACAvF,EAAAyB,IAAAD,EAAAxB,EAAAyB,IACAzB,EAAA0F,MAAA1F,EAAA0F,MAAA,KAAA1F,EAAA0F,SAAA,EAAA,GAAA,eACArQ,EAAAqO,UAAA1D,EAAAnC,EAGA,IAMAgG,GANA3C,EAAAlB,EAAA6E,QAAA3C,GACAyD,KACAC,EAAA,SAAAxN,EAAAG,GAAAoN,EAAAvN,EAAAO,gBAAAP,EAAAG,IACA6M,EAAA,iBAAA9D,KAAAtB,EAAAyB,KAAAoE,OAAAC,GAAA3Q,OAAAsO,SAAA2B,SACA9E,EAAAN,EAAAM,MACAyF,EAAAzF,EAAA0F,gBAcA,IAXAnI,GAAAA,EAAAF,QAAA2C,GAEAN,EAAAiF,aAAAW,EAAA,mBAAA,kBACAA,EAAA,SAAA1E,GAAA,QACAA,EAAAlB,EAAAiG,UAAA/E,KACAA,EAAAgF,QAAA,UAAAhF,EAAAA,EAAAvN,MAAA,IAAA,GAAA,IACA2M,EAAA6F,kBAAA7F,EAAA6F,iBAAAjF,KAEAlB,EAAAoG,aAAApG,EAAAoG,eAAA,GAAApG,EAAAzF,MAAA,OAAAyF,EAAA/H,KAAA8J,gBACA6D,EAAA,eAAA5F,EAAAoG,aAAA,qCAEApG,EAAA2F,QACA,IAAAvN,IAAA4H,GAAA2F,QAAAC,EAAAxN,EAAA4H,EAAA2F,QAAAvN,GA2BA,IA1BAkI,EAAA0F,iBAAAJ,EAEAtF,EAAA+F,mBAAA,WACA,GAAA,GAAA/F,EAAAgG,WAAA,CACAhG,EAAA+F,mBAAArF,EACAsD,aAAAT,EACA,IAAAxL,GAAAwI,GAAA,CACA,IAAAP,EAAAG,QAAA,KAAAH,EAAAG,OAAA,KAAA,KAAAH,EAAAG,QAAA,GAAAH,EAAAG,QAAA,SAAA2E,EAAA,CACAlD,EAAAA,GAAAjB,EAAAjB,EAAAiG,UAAA3F,EAAAiG,kBAAA,iBACAlO,EAAAiI,EAAAkG,YAEA,KAEA,UAAAtE,GAAA,EAAAuE,MAAApO,GACA,OAAA6J,EAAA7J,EAAAiI,EAAAoG,YACA,QAAAxE,IAAA7J,EAAAgL,EAAA/B,KAAAjJ,GAAA,KAAAhD,EAAAuC,UAAAS,IACA,MAAAgM,GAAAxD,EAAAwD,EAEAxD,EAAAD,EAAAC,EAAA,cAAAP,EAAAN,EAAAnC,GACA2C,EAAAnI,EAAAiI,EAAAN,EAAAnC,OAEA+C,GAAAN,EAAAqG,YAAA,KAAArG,EAAAG,OAAA,QAAA,QAAAH,EAAAN,EAAAnC,KAKAwC,EAAAC,EAAAN,MAAA,EAGA,MAFAM,GAAA6D,QACAvD,EAAA,KAAA,QAAAN,EAAAN,EAAAnC,GACAyC,CAGA,IAAAN,EAAA4G,UACA,IAAAxO,IAAA4H,GAAA4G,UAAAtG,EAAAlI,GAAA4H,EAAA4G,UAAAxO,EAEA,IAAAyO,KAAA,SAAA7G,KAAAA,EAAA6G,KACAvG,GAAAwG,KAAA9G,EAAA/H,KAAA+H,EAAAyB,IAAAoF,EAAA7G,EAAA+G,SAAA/G,EAAAgH,SAEA,KAAA5O,IAAAuN,GAAAI,EAAA7Q,MAAAoL,EAAAqF,EAAAvN,GAUA,OARA4H,GAAA0E,QAAA,IAAAb,EAAAc,WAAA,WACArE,EAAA+F,mBAAArF,EACAV,EAAA6D,QACAvD,EAAA,KAAA,UAAAN,EAAAN,EAAAnC,IACAmC,EAAA0E,UAGApE,EAAA2G,KAAAjH,EAAAzF,KAAAyF,EAAAzF,KAAA,MACA+F,GAeAjL,EAAAuE,IAAA,WACA,MAAAvE,GAAAsO,KAAA1B,EAAA/M,MAAA,KAAA0B,aAGAvB,EAAA6R,KAAA,WACA,GAAA9K,GAAA6F,EAAA/M,MAAA,KAAA0B,UAEA,OADAwF,GAAAnE,KAAA,OACA5C,EAAAsO,KAAAvH,IAGA/G,EAAA8R,QAAA,WACA,GAAA/K,GAAA6F,EAAA/M,MAAA,KAAA0B,UAEA,OADAwF,GAAA8F,SAAA,OACA7M,EAAAsO,KAAAvH,IAGA/G,EAAAe,GAAAgR,KAAA,SAAA3F,EAAAlH,EAAAmG,GACA,IAAA5J,KAAA/C,OAAA,MAAA+C,KACA,IAEAiD,GAFAsN,EAAAvQ,KACAlD,EAAA6N,EAAA9N,MAAA,MAEAyI,EAAA6F,EAAAR,EAAAlH,EAAAmG,GACAvJ,EAAAiF,EAAAsE,OAQA,OAPA9M,GAAAG,OAAA,IAAAqI,EAAAqF,IAAA7N,EAAA,GAAAmG,EAAAnG,EAAA,IACAwI,EAAAsE,QAAA,SAAA4G,GACAD,EAAAnK,KAAAnD,EACA1E,EAAA,SAAA6H,KAAAoK,EAAA5F,QAAA0B,EAAA,KAAAmE,KAAAxN,GAAAuN,GACAnQ,GAAAA,EAAAjC,MAAAmS,EAAAzQ,YAEAvB,EAAAsO,KAAAvH,GACAtF,KAGA,IAAA0Q,GAAAvO,kBAkBA5D,GAAAwM,MAAA,SAAAlD,EAAAmD,GACA,GAAAK,KAOA,OANAA,GAAA7J,IAAA,SAAAiK,EAAAhK,GACAlD,EAAAiC,WAAAiB,KAAAA,EAAAA,KACA,MAAAA,IAAAA,EAAA,IACAzB,KAAA9C,KAAAwT,EAAAjF,GAAA,IAAAiF,EAAAjP,KAEAQ,EAAAoJ,EAAAxD,EAAAmD,GACAK,EAAAlO,KAAA,KAAAyN,QAAA,OAAA,KAGA,IAUA+F,MAOAC,KACA7E,EAAA,MAmGA,OA9DAxN,GAAAsS,cAAAnF,EAAAiF,GACApS,EAAAuS,cAAApF,EAAAkF,GAwBArS,EAAAwS,UAAA,SAAApR,EAAAuJ,GACA,MAAAA,GAGA+C,EAAAA,EAAAtM,EAAArB,OAAA8N,cAAAlD,GAGA+C,EAAA3N,OAAA8N,aAAAzM,IA8BApB,IAIAnB,EAAA,4BACA,UACA,SAAAmB,GA0HA,MA9GAA,GAAAkI,UAAA,SAAAnB,GACAA,EAAA/G,EAAAmB,UAAA4F,EAEA,IAAAqB,GACAqK,EACAC,EACAC,EACAC,EACAC,EACAtJ,KACAlL,GAAA0I,EAAAoB,SACA2K,EAAA,SAAA5N,GAOA,IANAkD,EAAArB,EAAAqB,QAAAlD,EACAuN,GAAA,EACAI,EAAAF,GAAA,EACAA,EAAA,EACAC,EAAArJ,EAAA7K,OACAgU,GAAA,EACAnJ,GAAAsJ,EAAAD,IAAAC,EACA,GAAAtJ,EAAAsJ,GAAAhT,MAAAqF,EAAA,GAAAA,EAAA,OAAA,GAAA6B,EAAAgM,YAAA,CACA3K,GAAA,CACA,OAGAsK,GAAA,EACAnJ,IACAlL,EAAAA,EAAAK,QAAAoU,EAAAzU,EAAAmD,SACA4G,EAAAmB,EAAA7K,OAAA,EACAwJ,EAAAuB,YAIAvB,GACAjF,IAAA,WACA,GAAAsG,EAAA,CACA,GAAAyJ,GAAAzJ,EAAA7K,OACAuE,EAAA,SAAAtD,GACAK,EAAAkB,KAAAvB,EAAA,SAAAwD,EAAAzB,GACA,kBAAAA,GACAqF,EAAAkM,QAAA/K,EAAAgL,IAAAxR,IAAA6H,EAAA5K,KAAA+C,GACAA,GAAAA,EAAAhD,QAAA,gBAAAgD,IAAAuB,EAAAvB,KAGAuB,GAAA1B,WACAmR,EAAAE,EAAArJ,EAAA7K,OACA0J,IACAuK,EAAAK,EACAF,EAAA1K,IAGA,MAAA3G,OAEAyN,OAAA,WAcA,MAbA3F,IACAvJ,EAAAkB,KAAAK,UAAA,SAAA4B,EAAAzB,GAEA,IADA,GAAAyR,IACAA,EAAAnT,EAAAoC,QAAAV,EAAA6H,EAAA4J,QACA5J,EAAA6J,OAAAD,EAAA,GAEAT,IACAS,GAAAP,KAAAA,EACAO,GAAAN,KAAAA,KAKApR,MAEAyR,IAAA,SAAAnS,GACA,SAAAwI,KAAAxI,EAAAf,EAAAoC,QAAArB,EAAAwI,MAAAA,EAAA7K,UAEAiN,MAAA,WAEA,MADAiH,GAAArJ,EAAA7K,OAAA,EACA+C,MAEAgI,QAAA,WAEA,MADAF,GAAAlL,EAAA+J,EAAAuE,OACAlL,MAEA8B,SAAA,WACA,OAAAgG,GAEAG,KAAA,WAGA,MAFArL,GAAAsO,OACAvE,GAAAF,EAAAuB,UACAhI,MAEA4R,OAAA,WACA,OAAAhV,GAEAsL,SAAA,SAAAP,EAAAzJ,GAOA,OANA4J,GAAAkJ,IAAApU,IACAsB,EAAAA,MACAA,GAAAyJ,EAAAzJ,EAAAmB,MAAAnB,EAAAmB,QAAAnB,GACA+S,EAAArU,EAAAM,KAAAgB,GACAmT,EAAAnT,IAEA8B,MAEAqR,KAAA,WACA,MAAA5K,GAAAyB,SAAAlI,KAAAF,YAEAkR,MAAA,WACA,QAAAA,GAIA,OAAAvK,IAGAlI,IAIAnB,EAAA,uBACA,SACA,SACA,cACA,cACA,SAAAmB,GACA,MAAAA,KAGAnB,EAAA,kBAAA,uBAAA,SAAAyU,GAAA,MAAAA,MA0EE7R","file":"../skylark-jquery.js","sourcesContent":["define('skylark-jquery/core',[\r\n\t\"skylark-utils/skylark\",\r\n\t\"skylark-utils/browser\",\r\n\t\"skylark-utils/langx\",\r\n\t\"skylark-utils/noder\",\r\n\t\"skylark-utils/datax\",\r\n\t\"skylark-utils/eventer\",\r\n\t\"skylark-utils/finder\",\r\n\t\"skylark-utils/fx\",\r\n\t\"skylark-utils/styler\",\r\n\t\"skylark-utils/query\"\r\n],function(skylark,browser,langx,noder,datax,eventer,finder,fx,styler,query){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n    (function($){\r\n\t    $.fn.jquery = '2.2.0';\r\n\r\n\t    $.camelCase = langx.camelCase;\r\n\r\n\t    $.each = langx.each;\r\n\r\n\t    $.extend = function(target) {\r\n\t        var deep, args = slice.call(arguments, 1);\r\n\t        if (typeof target == 'boolean') {\r\n\t            deep = target\r\n\t            target = args.shift()\r\n\t        }\r\n\t        if (args.length == 0) {\r\n\t            args = [target];\r\n\t            target = this;\r\n\t        }\r\n\t        args.forEach(function(arg) {\r\n\t        \tlangx.mixin(target, arg, deep);\r\n\t        });\r\n\t        return target;\r\n\t    };\r\n\r\n\t    $.grep = function(elements, callback) {\r\n\t        return filter.call(elements, callback)\r\n\t    };\r\n\r\n\t    $.isArray = langx.isArray;\r\n\t    $.isEmptyObject = langx.isEmptyObject;\r\n\t    $.isFunction = langx.isFunction;\r\n\t    $.isWindow = langx.isWindow;\r\n\t    $.isPlainObject = langx.isPlainObject;\r\n\r\n\t    $.inArray = langx.inArray;\r\n\r\n\t    $.makeArray = langx.makeArray;\r\n\t    $.map = langx.map;\r\n\r\n\t    $.noop = function() {\r\n\t    };\r\n\r\n\t    $.parseJSON = window.JSON.parse;\r\n\r\n\t    $.proxy = langx.proxy;\r\n\r\n\t    $.trim = langx.trim;\r\n\t    $.type = langx.type;\r\n\r\n\t    $.fn.extend = function(props) {\r\n\t        langx.mixin($.fn, props);\r\n\t    };\r\n\r\n\t    $.fn.serializeArray = function() {\r\n\t        var name, type, result = [],\r\n\t            add = function(value) {\r\n\t                if (value.forEach) return value.forEach(add)\r\n\t                result.push({ name: name, value: value })\r\n\t            }\r\n\t        if (this[0]) langx.each(this[0].elements, function(_, field) {\r\n\t            type = field.type, name = field.name\r\n\t            if (name && field.nodeName.toLowerCase() != 'fieldset' &&\r\n\t                !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&\r\n\t                ((type != 'radio' && type != 'checkbox') || field.checked))\r\n\t                add($(field).val())\r\n\t        })\r\n\t        return result\r\n\t    };\r\n\r\n\t    $.fn.serialize = function() {\r\n\t        var result = []\r\n\t        this.serializeArray().forEach(function(elm) {\r\n\t            result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\r\n\t        })\r\n\t        return result.join('&')\r\n\t    };\r\n    })(query);\r\n\r\n    (function($){\r\n        $.Event = function Event(type, props) {\r\n            if (type && !langx.isString(type)) {\r\n                props = type;\r\n                type = props.type;\r\n            }\r\n            return eventer.create(type, props);\r\n        };\r\n\r\n        $.event = {};\r\n\r\n\t    $.event.special = eventer.special;\r\n\r\n\t    $.fn.submit = function(callback) {\r\n\t        if (0 in arguments) this.bind('submit', callback)\r\n\t        else if (this.length) {\r\n\t            var event = $.Event('submit')\r\n\t            this.eq(0).trigger(event)\r\n\t            if (!event.isDefaultPrevented()) this.get(0).submit()\r\n\t        }\r\n\t        return this\r\n\t    };\r\n\r\n\t    // event\r\n\t    $.fn.triggerHandler = $.fn.trigger;\r\n\r\n\t    $.fn.delegate = function(selector, event, callback) {\r\n\t        return this.on(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.undelegate = function(selector, event, callback) {\r\n\t        return this.off(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.live = function(event, callback) {\r\n\t        $(document.body).delegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.die = function(event, callback) {\r\n\t        $(document.body).undelegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.bind = function(event, selector, data, callback) {\r\n\t        return this.on(event, selector, data, callback)\r\n\t    };\r\n\r\n\t    $.fn.unbind = function(event, callback) {\r\n\t        return this.off(event, callback)\r\n\t    };\r\n\r\n\t    $.fn.ready = function(callback) {\r\n\t        eventer.ready(callback);\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.hover = function(fnOver, fnOut) {\r\n\t        return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n\t    };\r\n\r\n\t    $.fn.stop = function() {\r\n\t        // todo\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.moveto = function(x, y) {\r\n\t        return this.animate({\r\n\t            left: x + \"px\",\r\n\t            top: y + \"px\"\r\n\t        }, 0.4);\r\n\r\n\t    };\r\n\r\n\t    $.ready = eventer.ready;\r\n\r\n\t    $.on = eventer.on;\r\n\r\n\t    $.off = eventer.off;\r\n    })(query);\r\n\r\n    (function($){\r\n\t    // plugin compatibility\r\n\t    $.uuid = 0;\r\n\t    $.support = browser.support;\r\n\t    $.expr = {};\r\n\r\n\t    $.expr[\":\"] = $.expr.pseudos = $.expr.filters = finder.pseudos;\r\n\r\n\t    $.expr.createPseudo = function(fn) {\r\n\t    \treturn fn;\r\n\t    };\r\n\r\n\t    $.cssHooks = styler.cssHooks;\r\n\r\n\t    $.contains = noder.contains;\r\n\r\n\t    $.css = styler.css;\r\n\r\n\t    $.data = datax.data;\r\n\r\n\t    $.fx = fx;\r\n\t    $.fx.step = {\r\n\r\n        };\r\n\r\n        $.easing = {};\r\n\r\n\t    $.offset = {};\r\n\t    $.offset.setOffset = function(elem, options, i) {\r\n\t        var position = $.css(elem, \"position\");\r\n\r\n\t        // set position first, in-case top/left are set even on static elem\r\n\t        if (position === \"static\") {\r\n\t            elem.style.position = \"relative\";\r\n\t        }\r\n\r\n\t        var curElem = $(elem),\r\n\t            curOffset = curElem.offset(),\r\n\t            curCSSTop = $.css(elem, \"top\"),\r\n\t            curCSSLeft = $.css(elem, \"left\"),\r\n\t            calculatePosition = (position === \"absolute\" || position === \"fixed\") && $.inArray(\"auto\", [curCSSTop, curCSSLeft]) > -1,\r\n\t            props = {},\r\n\t            curPosition = {},\r\n\t            curTop, curLeft;\r\n\r\n\t        // need to be able to calculate position if either top or left is auto and position is either absolute or fixed\r\n\t        if (calculatePosition) {\r\n\t            curPosition = curElem.position();\r\n\t            curTop = curPosition.top;\r\n\t            curLeft = curPosition.left;\r\n\t        } else {\r\n\t            curTop = parseFloat(curCSSTop) || 0;\r\n\t            curLeft = parseFloat(curCSSLeft) || 0;\r\n\t        }\r\n\r\n\t        if ($.isFunction(options)) {\r\n\t            options = options.call(elem, i, curOffset);\r\n\t        }\r\n\r\n\t        if (options.top != null) {\r\n\t            props.top = (options.top - curOffset.top) + curTop;\r\n\t        }\r\n\t        if (options.left != null) {\r\n\t            props.left = (options.left - curOffset.left) + curLeft;\r\n\t        }\r\n\r\n\t        if (\"using\" in options) {\r\n\t            options.using.call(elem, props);\r\n\t        } else {\r\n\t            curElem.css(props);\r\n\t        }\r\n\t    };\r\n    })(query);\r\n\r\n    query.parseHTML = function(html) {\r\n        return  noder.createFragment(html);\r\n    };\r\n\r\n\r\n    query.skylark = skylark;\r\n\r\n    return window.jQuery = window.$ = query;\r\n});\r\n\ndefine('skylark-jquery/deferred',[\r\n    \"./core\"\r\n], function($) {\r\n\r\n    /*\r\n        (function ($) {\r\n            $.Deferred = async.Deferred;\r\n            $.when = async.when;\r\n        })(Zepto);\r\n    */\r\n\r\n    //     This module is borrow from zepto.deferred.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n    //\r\n    //     Some code (c) 2005, 2013 jQuery Foundation, Inc. and other contributors\r\n\r\n    var slice = Array.prototype.slice\r\n\r\n    function Deferred(func) {\r\n        var tuples = [\r\n                // action, add listener, listener list, final state\r\n                [\"resolve\", \"done\", $.Callbacks({ once: 1, memory: 1 }), \"resolved\"],\r\n                [\"reject\", \"fail\", $.Callbacks({ once: 1, memory: 1 }), \"rejected\"],\r\n                [\"notify\", \"progress\", $.Callbacks({ memory: 1 })]\r\n            ],\r\n            state = \"pending\",\r\n            promise = {\r\n                state: function() {\r\n                    return state\r\n                },\r\n                always: function() {\r\n                    deferred.done(arguments).fail(arguments)\r\n                    return this\r\n                },\r\n                then: function( /* fnDone [, fnFailed [, fnProgress]] */ ) {\r\n                    var fns = arguments\r\n                    return Deferred(function(defer) {\r\n                        $.each(tuples, function(i, tuple) {\r\n                            var fn = $.isFunction(fns[i]) && fns[i]\r\n                            deferred[tuple[1]](function() {\r\n                                var returned = fn && fn.apply(this, arguments)\r\n                                if (returned && $.isFunction(returned.promise)) {\r\n                                    returned.promise()\r\n                                        .done(defer.resolve)\r\n                                        .fail(defer.reject)\r\n                                        .progress(defer.notify)\r\n                                } else {\r\n                                    var context = this === promise ? defer.promise() : this,\r\n                                        values = fn ? [returned] : arguments\r\n                                    defer[tuple[0] + \"With\"](context, values)\r\n                                }\r\n                            })\r\n                        })\r\n                        fns = null\r\n                    }).promise()\r\n                },\r\n\r\n                promise: function(obj) {\r\n                    return obj != null ? $.extend(obj, promise) : promise\r\n                }\r\n            },\r\n            deferred = {}\r\n\r\n        $.each(tuples, function(i, tuple) {\r\n            var list = tuple[2],\r\n                stateString = tuple[3]\r\n\r\n            promise[tuple[1]] = list.add\r\n\r\n            if (stateString) {\r\n                list.add(function() {\r\n                    state = stateString\r\n                }, tuples[i ^ 1][2].disable, tuples[2][2].lock)\r\n            }\r\n\r\n            deferred[tuple[0]] = function() {\r\n                deferred[tuple[0] + \"With\"](this === deferred ? promise : this, arguments)\r\n                return this\r\n            }\r\n            deferred[tuple[0] + \"With\"] = list.fireWith\r\n        })\r\n\r\n        promise.promise(deferred)\r\n        if (func) func.call(deferred, deferred)\r\n        return deferred\r\n    }\r\n\r\n    $.when = function(sub) {\r\n        var resolveValues = slice.call(arguments),\r\n            len = resolveValues.length,\r\n            i = 0,\r\n            remain = len !== 1 || (sub && $.isFunction(sub.promise)) ? len : 0,\r\n            deferred = remain === 1 ? sub : Deferred(),\r\n            progressValues, progressContexts, resolveContexts,\r\n            updateFn = function(i, ctx, val) {\r\n                return function(value) {\r\n                    ctx[i] = this\r\n                    val[i] = arguments.length > 1 ? slice.call(arguments) : value\r\n                    if (val === progressValues) {\r\n                        deferred.notifyWith(ctx, val)\r\n                    } else if (!(--remain)) {\r\n                        deferred.resolveWith(ctx, val)\r\n                    }\r\n                }\r\n            }\r\n\r\n        if (len > 1) {\r\n            progressValues = new Array(len)\r\n            progressContexts = new Array(len)\r\n            resolveContexts = new Array(len)\r\n            for (; i < len; ++i) {\r\n                if (resolveValues[i] && $.isFunction(resolveValues[i].promise)) {\r\n                    resolveValues[i].promise()\r\n                        .done(updateFn(i, resolveContexts, resolveValues))\r\n                        .fail(deferred.reject)\r\n                        .progress(updateFn(i, progressContexts, progressValues))\r\n                } else {\r\n                    --remain\r\n                }\r\n            }\r\n        }\r\n        if (!remain) deferred.resolveWith(resolveContexts, resolveValues)\r\n        return deferred.promise()\r\n    }\r\n\r\n    $.Deferred = Deferred\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/ajax',[\r\n    \"./core\",\r\n    \"./deferred\"\r\n], function($) {\r\n    //     zepto.ajax.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    var jsonpID = 0,\r\n        document = window.document,\r\n        key,\r\n        name,\r\n        rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n        xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n        jsonType = 'application/json',\r\n        htmlType = 'text/html',\r\n        blankRE = /^\\s*$/,\r\n        originAnchor = document.createElement('a');\r\n\r\n    originAnchor.href = window.location.href;\r\n\r\n    // trigger a custom event and return false if it was cancelled\r\n    function triggerAndReturn(context, eventName, data) {\r\n        var event = $.Event(eventName)\r\n        $(context).trigger(event, data)\r\n        return !event.isDefaultPrevented()\r\n    }\r\n\r\n    // trigger an Ajax \"global\" event\r\n    function triggerGlobal(settings, context, eventName, data) {\r\n        if (settings.global) return triggerAndReturn(context || document, eventName, data)\r\n    }\r\n\r\n    // Number of active Ajax requests\r\n    $.active = 0;\r\n\r\n    function ajaxStart(settings) {\r\n        if (settings.global && $.active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\r\n    }\r\n\r\n    function ajaxStop(settings) {\r\n        if (settings.global && !(--$.active)) triggerGlobal(settings, null, 'ajaxStop')\r\n    }\r\n\r\n    // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\r\n    function ajaxBeforeSend(xhr, settings) {\r\n        var context = settings.context\r\n        if (settings.beforeSend.call(context, xhr, settings) === false ||\r\n            triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\r\n            return false\r\n\r\n        triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\r\n    }\r\n\r\n    function ajaxSuccess(data, xhr, settings, deferred) {\r\n        var context = settings.context,\r\n            status = 'success'\r\n        settings.success.call(context, data, status, xhr)\r\n        if (deferred) deferred.resolveWith(context, [data, status, xhr])\r\n        triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\r\n        ajaxComplete(status, xhr, settings)\r\n    }\r\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\r\n    function ajaxError(error, type, xhr, settings, deferred) {\r\n        var context = settings.context\r\n        settings.error.call(context, xhr, type, error)\r\n        if (deferred) deferred.rejectWith(context, [xhr, type, error])\r\n        triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\r\n        ajaxComplete(type, xhr, settings)\r\n    }\r\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\r\n    function ajaxComplete(status, xhr, settings) {\r\n        var context = settings.context\r\n        settings.complete.call(context, xhr, status)\r\n        triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\r\n        ajaxStop(settings)\r\n    }\r\n\r\n    // Empty function, used as default callback\r\n    function empty() {}\r\n\r\n    $.ajaxJSONP = function(options, deferred) {\r\n        if (!('type' in options)) return $.ajax(options)\r\n\r\n        var _callbackName = options.jsonpCallback,\r\n            callbackName = ($.isFunction(_callbackName) ?\r\n                _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\r\n            script = document.createElement('script'),\r\n            originalCallback = window[callbackName],\r\n            responseData,\r\n            abort = function(errorType) {\r\n                $(script).triggerHandler('error', errorType || 'abort')\r\n            },\r\n            xhr = { abort: abort },\r\n            abortTimeout\r\n\r\n        if (deferred) deferred.promise(xhr)\r\n\r\n        $(script).on('load error', function(e, errorType) {\r\n            clearTimeout(abortTimeout)\r\n            $(script).off().remove()\r\n\r\n            if (e.type == 'error' || !responseData) {\r\n                ajaxError(null, errorType || 'error', xhr, options, deferred)\r\n            } else {\r\n                ajaxSuccess(responseData[0], xhr, options, deferred)\r\n            }\r\n\r\n            window[callbackName] = originalCallback\r\n            if (responseData && $.isFunction(originalCallback))\r\n                originalCallback(responseData[0])\r\n\r\n            originalCallback = responseData = undefined\r\n        })\r\n\r\n        if (ajaxBeforeSend(xhr, options) === false) {\r\n            abort('abort')\r\n            return xhr\r\n        }\r\n\r\n        window[callbackName] = function() {\r\n            responseData = arguments\r\n        }\r\n\r\n        script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\r\n        document.head.appendChild(script)\r\n\r\n        if (options.timeout > 0) abortTimeout = setTimeout(function() {\r\n            abort('timeout')\r\n        }, options.timeout)\r\n\r\n        return xhr;\r\n    }\r\n\r\n    $.ajaxSettings = {\r\n        // Default type of request\r\n        type: 'GET',\r\n        // Callback that is executed before request\r\n        beforeSend: empty,\r\n        // Callback that is executed if the request succeeds\r\n        success: empty,\r\n        // Callback that is executed the the server drops error\r\n        error: empty,\r\n        // Callback that is executed on request complete (both: error and success)\r\n        complete: empty,\r\n        // The context for the callbacks\r\n        context: null,\r\n        // Whether to trigger \"global\" Ajax events\r\n        global: true,\r\n        // Transport\r\n        xhr: function() {\r\n            return new window.XMLHttpRequest()\r\n        },\r\n        // MIME types mapping\r\n        // IIS returns Javascript as \"application/x-javascript\"\r\n        accepts: {\r\n            script: 'text/javascript, application/javascript, application/x-javascript',\r\n            json: jsonType,\r\n            xml: 'application/xml, text/xml',\r\n            html: htmlType,\r\n            text: 'text/plain'\r\n        },\r\n        // Whether the request is to another domain\r\n        crossDomain: false,\r\n        // Default timeout\r\n        timeout: 0,\r\n        // Whether data should be serialized to string\r\n        processData: true,\r\n        // Whether the browser should be allowed to cache GET responses\r\n        cache: true\r\n    }\r\n\r\n    function mimeToDataType(mime) {\r\n        if (mime) mime = mime.split(';', 2)[0]\r\n        return mime && (mime == htmlType ? 'html' :\r\n            mime == jsonType ? 'json' :\r\n            scriptTypeRE.test(mime) ? 'script' :\r\n            xmlTypeRE.test(mime) && 'xml') || 'text'\r\n    }\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') return url\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n    }\r\n\r\n    // serialize payload and append it to the URL for GET requests\r\n    function serializeData(options) {\r\n        if (options.processData && options.data && $.type(options.data) != \"string\")\r\n            options.data = $.param(options.data, options.traditional)\r\n        if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))\r\n            options.url = appendQuery(options.url, options.data), options.data = undefined\r\n    }\r\n\r\n    $.ajax = function(options) {\r\n        var settings = $.extend({}, options || {}),\r\n            deferred = $.Deferred && $.Deferred(),\r\n            urlAnchor\r\n        for (key in $.ajaxSettings)\r\n            if (settings[key] === undefined) settings[key] = $.ajaxSettings[key]\r\n\r\n        ajaxStart(settings)\r\n\r\n        if (!settings.crossDomain) {\r\n            urlAnchor = document.createElement('a')\r\n            urlAnchor.href = settings.url\r\n            urlAnchor.href = urlAnchor.href\r\n            settings.crossDomain = (originAnchor.protocol + '//' + originAnchor.host) !== (urlAnchor.protocol + '//' + urlAnchor.host)\r\n        }\r\n\r\n        if (!settings.url) settings.url = window.location.toString()\r\n        serializeData(settings)\r\n\r\n        var dataType = settings.dataType,\r\n            hasPlaceholder = /\\?.+=\\?/.test(settings.url)\r\n        if (hasPlaceholder) dataType = 'jsonp'\r\n\r\n        if (settings.cache === false || (\r\n                (!options || options.cache !== true) &&\r\n                ('script' == dataType || 'jsonp' == dataType)\r\n            ))\r\n            settings.url = appendQuery(settings.url, '_=' + Date.now())\r\n\r\n        if ('jsonp' == dataType) {\r\n            if (!hasPlaceholder)\r\n                settings.url = appendQuery(settings.url,\r\n                    settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')\r\n            return $.ajaxJSONP(settings, deferred)\r\n        }\r\n\r\n        var mime = settings.accepts[dataType],\r\n            headers = {},\r\n            setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\r\n            protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\r\n            xhr = settings.xhr(),\r\n            nativeSetHeader = xhr.setRequestHeader,\r\n            abortTimeout\r\n\r\n        if (deferred) deferred.promise(xhr)\r\n\r\n        if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest')\r\n        setHeader('Accept', mime || '*/*')\r\n        if (mime = settings.mimeType || mime) {\r\n            if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\r\n            xhr.overrideMimeType && xhr.overrideMimeType(mime)\r\n        }\r\n        if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\r\n            setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\r\n\r\n        if (settings.headers)\r\n            for (name in settings.headers) setHeader(name, settings.headers[name])\r\n        xhr.setRequestHeader = setHeader\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState == 4) {\r\n                xhr.onreadystatechange = empty\r\n                clearTimeout(abortTimeout)\r\n                var result, error = false\r\n                if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\r\n                    dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\r\n                    result = xhr.responseText\r\n\r\n                    try {\r\n                        // http://perfectionkills.com/global-eval-what-are-the-options/\r\n                        if (dataType == 'script')(1, eval)(result)\r\n                        else if (dataType == 'xml') result = xhr.responseXML\r\n                        else if (dataType == 'json') result = blankRE.test(result) ? null : $.parseJSON(result)\r\n                    } catch (e) { error = e }\r\n\r\n                    if (error) ajaxError(error, 'parsererror', xhr, settings, deferred)\r\n                    else ajaxSuccess(result, xhr, settings, deferred)\r\n                } else {\r\n                    ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred)\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ajaxBeforeSend(xhr, settings) === false) {\r\n            xhr.abort()\r\n            ajaxError(null, 'abort', xhr, settings, deferred)\r\n            return xhr\r\n        }\r\n\r\n        if (settings.xhrFields)\r\n            for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\r\n\r\n        var async = 'async' in settings ? settings.async : true\r\n        xhr.open(settings.type, settings.url, async, settings.username, settings.password)\r\n\r\n        for (name in headers) nativeSetHeader.apply(xhr, headers[name])\r\n\r\n        if (settings.timeout > 0) abortTimeout = setTimeout(function() {\r\n            xhr.onreadystatechange = empty\r\n            xhr.abort()\r\n            ajaxError(null, 'timeout', xhr, settings, deferred)\r\n        }, settings.timeout)\r\n\r\n        // avoid sending empty string (#319)\r\n        xhr.send(settings.data ? settings.data : null)\r\n        return xhr\r\n    }\r\n\r\n    // handle optional data/success arguments\r\n    function parseArguments(url, data, success, dataType) {\r\n        if ($.isFunction(data)) dataType = success, success = data, data = undefined\r\n        if (!$.isFunction(success)) dataType = success, success = undefined\r\n        return {\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            dataType: dataType\r\n        }\r\n    }\r\n\r\n    $.get = function( /* url, data, success, dataType */ ) {\r\n        return $.ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    $.post = function( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.type = 'POST'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    $.getJSON = function( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.dataType = 'json'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    $.fn.load = function(url, data, success) {\r\n        if (!this.length) return this\r\n        var self = this,\r\n            parts = url.split(/\\s/),\r\n            selector,\r\n            options = parseArguments(url, data, success),\r\n            callback = options.success\r\n        if (parts.length > 1) options.url = parts[0], selector = parts[1]\r\n        options.success = function(response) {\r\n            self.html(selector ?\r\n                $('<div>').html(response.replace(rscript, \"\")).find(selector) : response)\r\n            callback && callback.apply(self, arguments)\r\n        }\r\n        $.ajax(options)\r\n        return this\r\n    }\r\n\r\n    var escape = encodeURIComponent\r\n\r\n    function serialize(params, obj, traditional, scope) {\r\n        var type, array = $.isArray(obj),\r\n            hash = $.isPlainObject(obj)\r\n        $.each(obj, function(key, value) {\r\n            type = $.type(value)\r\n            if (scope) key = traditional ? scope :\r\n                scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']'\r\n            // handle data in serializeArray() format\r\n            if (!scope && array) params.add(value.name, value.value)\r\n            // recurse into nested objects\r\n            else if (type == \"array\" || (!traditional && type == \"object\"))\r\n                serialize(params, value, traditional, key)\r\n            else params.add(key, value)\r\n        })\r\n    }\r\n\r\n    $.param = function(obj, traditional) {\r\n        var params = []\r\n        params.add = function(key, value) {\r\n            if ($.isFunction(value)) value = value()\r\n            if (value == null) value = \"\"\r\n            this.push(escape(key) + '=' + escape(value))\r\n        }\r\n        serialize(params, obj, traditional)\r\n        return params.join('&').replace(/%20/g, '+')\r\n    };\r\n\r\n    var\r\n        /* Prefilters\r\n         * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\r\n         * 2) These are called:\r\n         *    - BEFORE asking for a transport\r\n         *    - AFTER param serialization (s.data is a string if s.processData is true)\r\n         * 3) key is the dataType\r\n         * 4) the catchall symbol \"*\" can be used\r\n         * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\r\n         */\r\n        prefilters = {},\r\n\r\n        /* Transports bindings\r\n         * 1) key is the dataType\r\n         * 2) the catchall symbol \"*\" can be used\r\n         * 3) selection will start with transport dataType and THEN go to \"*\" if needed\r\n         */\r\n        transports = {},\r\n        rnotwhite = (/\\S+/g);\r\n\r\n\r\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n    function addToPrefiltersOrTransports(structure) {\r\n\r\n        // dataTypeExpression is optional and defaults to \"*\"\r\n        return function(dataTypeExpression, func) {\r\n\r\n            if (typeof dataTypeExpression !== \"string\") {\r\n                func = dataTypeExpression;\r\n                dataTypeExpression = \"*\";\r\n            }\r\n\r\n            var dataType,\r\n                i = 0,\r\n                dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\r\n\r\n            if (jQuery.isFunction(func)) {\r\n\r\n                // For each dataType in the dataTypeExpression\r\n                while ((dataType = dataTypes[i++])) {\r\n\r\n                    // Prepend if requested\r\n                    if (dataType[0] === \"+\") {\r\n                        dataType = dataType.slice(1) || \"*\";\r\n                        (structure[dataType] = structure[dataType] || []).unshift(func);\r\n\r\n                        // Otherwise append\r\n                    } else {\r\n                        (structure[dataType] = structure[dataType] || []).push(func);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    $.ajaxPrefilter = addToPrefiltersOrTransports(prefilters);\r\n    $.ajaxTransport = addToPrefiltersOrTransports(transports);\r\n\r\n    // A special extend for ajax options\r\n    // that takes \"flat\" options (not to be deep extended)\r\n    // Fixes #9887\r\n    function ajaxExtend(target, src) {\r\n        var key, deep,\r\n            flatOptions = jQuery.ajaxSettings.flatOptions || {};\r\n\r\n        for (key in src) {\r\n            if (src[key] !== undefined) {\r\n                (flatOptions[key] ? target : (deep || (deep = {})))[key] = src[key];\r\n            }\r\n        }\r\n        if (deep) {\r\n            jQuery.extend(true, target, deep);\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n    // Creates a full fledged settings object into target\r\n    // with both ajaxSettings and settings fields.\r\n    // If target is omitted, writes into ajaxSettings.\r\n    $.ajaxSetup = function(target, settings) {\r\n        return settings ?\r\n\r\n            // Building a settings object\r\n            ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) :\r\n\r\n            // Extending ajaxSettings\r\n            ajaxExtend(jQuery.ajaxSettings, target);\r\n    };\r\n\r\n    // Base inspection function for prefilters and transports\r\n    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\r\n\r\n        var inspected = {},\r\n            seekingTransport = (structure === transports);\r\n\r\n        function inspect(dataType) {\r\n            var selected;\r\n            inspected[dataType] = true;\r\n            jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {\r\n                var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\r\n                if (typeof dataTypeOrTransport === \"string\" &&\r\n                    !seekingTransport && !inspected[dataTypeOrTransport]) {\r\n\r\n                    options.dataTypes.unshift(dataTypeOrTransport);\r\n                    inspect(dataTypeOrTransport);\r\n                    return false;\r\n                } else if (seekingTransport) {\r\n                    return !(selected = dataTypeOrTransport);\r\n                }\r\n            });\r\n            return selected;\r\n        }\r\n\r\n        return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\r\n    }\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/callbacks',[\r\n    \"./core\"\r\n], function($) {\r\n\r\n    //     This module is borrow from zepto.callback.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    // Create a collection of callbacks to be fired in a sequence, with configurable behaviour\r\n    // Option flags:\r\n    //   - once: Callbacks fired at most one time.\r\n    //   - memory: Remember the most recent context and arguments\r\n    //   - stopOnFalse: Cease iterating over callback list\r\n    //   - unique: Permit adding at most one instance of the same callback\r\n    $.Callbacks = function(options) {\r\n        options = $.extend({}, options)\r\n\r\n        var memory, // Last fire value (for non-forgettable lists)\r\n            fired, // Flag to know if list was already fired\r\n            firing, // Flag to know if list is currently firing\r\n            firingStart, // First callback to fire (used internally by add and fireWith)\r\n            firingLength, // End of the loop when firing\r\n            firingIndex, // Index of currently firing callback (modified by remove if needed)\r\n            list = [], // Actual callback list\r\n            stack = !options.once && [], // Stack of fire calls for repeatable lists\r\n            fire = function(data) {\r\n                memory = options.memory && data\r\n                fired = true\r\n                firingIndex = firingStart || 0\r\n                firingStart = 0\r\n                firingLength = list.length\r\n                firing = true\r\n                for (; list && firingIndex < firingLength; ++firingIndex) {\r\n                    if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\r\n                        memory = false\r\n                        break\r\n                    }\r\n                }\r\n                firing = false\r\n                if (list) {\r\n                    if (stack) stack.length && fire(stack.shift())\r\n                    else if (memory) list.length = 0\r\n                    else Callbacks.disable()\r\n                }\r\n            },\r\n\r\n            Callbacks = {\r\n                add: function() {\r\n                    if (list) {\r\n                        var start = list.length,\r\n                            add = function(args) {\r\n                                $.each(args, function(_, arg) {\r\n                                    if (typeof arg === \"function\") {\r\n                                        if (!options.unique || !Callbacks.has(arg)) list.push(arg)\r\n                                    } else if (arg && arg.length && typeof arg !== 'string') add(arg)\r\n                                })\r\n                            }\r\n                        add(arguments)\r\n                        if (firing) firingLength = list.length\r\n                        else if (memory) {\r\n                            firingStart = start\r\n                            fire(memory)\r\n                        }\r\n                    }\r\n                    return this\r\n                },\r\n                remove: function() {\r\n                    if (list) {\r\n                        $.each(arguments, function(_, arg) {\r\n                            var index\r\n                            while ((index = $.inArray(arg, list, index)) > -1) {\r\n                                list.splice(index, 1)\r\n                                // Handle firing indexes\r\n                                if (firing) {\r\n                                    if (index <= firingLength) --firingLength\r\n                                    if (index <= firingIndex) --firingIndex\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    return this\r\n                },\r\n                has: function(fn) {\r\n                    return !!(list && (fn ? $.inArray(fn, list) > -1 : list.length))\r\n                },\r\n                empty: function() {\r\n                    firingLength = list.length = 0\r\n                    return this\r\n                },\r\n                disable: function() {\r\n                    list = stack = memory = undefined\r\n                    return this\r\n                },\r\n                disabled: function() {\r\n                    return !list\r\n                },\r\n                lock: function() {\r\n                    stack = undefined;\r\n                    if (!memory) Callbacks.disable()\r\n                    return this\r\n                },\r\n                locked: function() {\r\n                    return !stack\r\n                },\r\n                fireWith: function(context, args) {\r\n                    if (list && (!fired || stack)) {\r\n                        args = args || []\r\n                        args = [context, args.slice ? args.slice() : args]\r\n                        if (firing) stack.push(args)\r\n                        else fire(args)\r\n                    }\r\n                    return this\r\n                },\r\n                fire: function() {\r\n                    return Callbacks.fireWith(this, arguments)\r\n                },\r\n                fired: function() {\r\n                    return !!fired\r\n                }\r\n            }\r\n\r\n        return Callbacks\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/main',[\r\n    \"./core\",\r\n    \"./ajax\",\r\n    \"./callbacks\",\r\n    \"./deferred\"\r\n], function($) {\r\n    return $;\r\n});\r\n\ndefine('skylark-jquery', ['skylark-jquery/main'], function (main) { return main; });\n\n"]}