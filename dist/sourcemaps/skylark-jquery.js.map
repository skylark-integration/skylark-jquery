{"version":3,"sources":["skylark-jquery.js"],"names":["define","skylark","langx","browser","noder","datax","eventer","finder","fx","styler","query","$","filter","Array","prototype","slice","fn","jquery","camelCase","cleanData","elems","elem","i","undefined","removeData","elm","name","each","extend","grep","elements","callback","call","attr","isArray","isEmptyObject","isFunction","isWindow","isPlainObject","isNumeric","isNumber","inArray","makeArray","map","noop","parseJSON","window","JSON","parse","proxy","trim","type","props","mixin","serializeArray","result","add","value","forEach","push","this","_","field","nodeName","toLowerCase","disabled","checked","val","serialize","encodeURIComponent","join","Event","src","isString","create","event","special","submit","arguments","bind","length","eq","trigger","isDefaultPrevented","get","triggerHandler","delegate","selector","on","undelegate","off","live","document","body","die","data","unbind","ready","stop","moveto","x","y","animate","left","top","uuid","support","expr","pseudos","filters","createPseudo","cssHooks","contains","css","step","easing","offset","setOffset","options","position","style","curTop","curLeft","curElem","curOffset","curCSSTop","curCSSLeft","calculatePosition","curPosition","parseFloat","using","_data","propName","hasAttribute","parseHTML","html","createFragment","uniqueSort","unique","uniq","jQuery","jsonpID","appendQuery","url","replace","parseArguments","success","dataType","ajaxJSONP","responseData","abortTimeout","deferred","Deferred","_callbackName","jsonpCallback","callbackName","script","createElement","originalCallback","abort","errorType","xhr","key","e","clearTimeout","remove","resolve","reject","head","appendChild","timeout","setTimeout","ajaxSettings","Xhr","defaultOptions","XMLHttpRequest","ajax","hasPlaceholder","test","jsonp","p","request","then","error","done","fail","complete","always","apply","post","getJSON","originalLoad","load","addToPrefiltersOrTransports","structure","dataTypeExpression","func","dataTypes","match","rnotwhite","unshift","self","parts","split","response","rscript","find","param","ajaxPrefilter","ajaxTransport","ajaxSetup","target","settings","Callbacks","memory","fired","firing","firingStart","firingLength","firingIndex","list","stack","once","fire","stopOnFalse","shift","disable","start","args","arg","has","index","splice","empty","lock","locked","fireWith","context","notify","progress","d","ret","promise","when","all","originThen","onResolved","onRejected","results","expando","Math","random","core_rnotwhite","core_push","Data","Object","defineProperty","cache","uid","accepts","owner","nodeType","descriptor","unlock","defineProperties","set","prop","access","stored","camel","concat","hasData","discard","data_priv","queue","dequeue","startLength","hooks","_queueHooks","arr","obj","isArraylike","merge","first","second","l","j","setter","delay","time","speeds","next","clearQueue","tmp","count","defer","resolveWith","main"],"mappings":"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","file":"../skylark-jquery.js","sourcesContent":["define('skylark-jquery/core',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-utils-dom/browser\",\r\n\t\"skylark-utils-dom/noder\",\r\n\t\"skylark-utils-dom/datax\",\r\n\t\"skylark-utils-dom/eventer\",\r\n\t\"skylark-utils-dom/finder\",\r\n\t\"skylark-utils-dom/fx\",\r\n\t\"skylark-utils-dom/styler\",\r\n\t\"skylark-utils-dom/query\"\r\n],function(skylark,langx,browser,noder,datax,eventer,finder,fx,styler,query){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n    (function($){\r\n\t    $.fn.jquery = '2.2.0';\r\n\r\n\t    $.camelCase = langx.camelCase;\r\n\r\n\t\t$.cleanData = function( elems ) {\r\n\t\t\tvar elem,\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\r\n\t\t\t\tdatax.cleanData(elem);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.removeData = function(elm,name) {\r\n\t\t\tdatax.removeData(elm,name);\r\n\t\t}\r\n\t\r\n\t    $.each = langx.each;\r\n\r\n\t    $.extend = langx.extend;\r\n\r\n\t    $.grep = function(elements, callback) {\r\n\t        return filter.call(elements, callback)\r\n\t    };\r\n\r\n\t    $.attr = function(elm,name) {\r\n\t    \treturn datax.attr(elm,name);\r\n\t    };\r\n\r\n\t    $.isArray = langx.isArray;\r\n\t    $.isEmptyObject = langx.isEmptyObject;\r\n\t    $.isFunction = langx.isFunction;\r\n\t    $.isWindow = langx.isWindow;\r\n\t    $.isPlainObject = langx.isPlainObject;\r\n        $.isNumeric = langx.isNumber;\r\n\r\n\t    $.inArray = langx.inArray;\r\n\r\n\t    $.makeArray = langx.makeArray;\r\n\t    $.map = langx.map;  // The behavior is somewhat different from the original jquery.\r\n\r\n\t    $.noop = function() {\r\n\t    };\r\n\r\n\t    $.parseJSON = window.JSON.parse;\r\n\r\n\t    $.proxy = langx.proxy;\r\n\r\n\t    $.trim = langx.trim;\r\n\t    $.type = langx.type;\r\n\r\n\t    $.fn.extend = function(props) {\r\n\t        langx.mixin($.fn, props);\r\n\t    };\r\n\r\n\t    $.fn.serializeArray = function() {\r\n\t        var name, type, result = [],\r\n\t            add = function(value) {\r\n\t                if (value.forEach) return value.forEach(add)\r\n\t                result.push({ name: name, value: value })\r\n\t            }\r\n\t        if (this[0]) langx.each(this[0].elements, function(_, field) {\r\n\t            type = field.type, name = field.name\r\n\t            if (name && field.nodeName.toLowerCase() != 'fieldset' &&\r\n\t                !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&\r\n\t                ((type != 'radio' && type != 'checkbox') || field.checked))\r\n\t                add($(field).val())\r\n\t        })\r\n\t        return result\r\n\t    };\r\n\r\n\t    $.fn.serialize = function() {\r\n\t        var result = []\r\n\t        this.serializeArray().forEach(function(elm) {\r\n\t            result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\r\n\t        })\r\n\t        return result.join('&')\r\n\t    };\r\n    })(query);\r\n\r\n    (function($){\r\n        $.Event = function Event(src, props) {\r\n            if (langx.isString(src)) {\r\n            \tvar type = src;\r\n            \treturn eventer.create(type, props);\r\n\t        }\r\n            return eventer.proxy(src, props);\r\n        };\r\n\r\n        $.event = {};\r\n\r\n\t    $.event.special = eventer.special;\r\n\r\n\t    $.fn.submit = function(callback) {\r\n\t        if (0 in arguments) this.bind('submit', callback)\r\n\t        else if (this.length) {\r\n\t            var event = $.Event('submit')\r\n\t            this.eq(0).trigger(event)\r\n\t            if (!event.isDefaultPrevented()) this.get(0).submit()\r\n\t        }\r\n\t        return this\r\n\t    };\r\n\r\n\t    // event\r\n\t    $.fn.triggerHandler = $.fn.trigger;\r\n\r\n\t    $.fn.delegate = function(selector, event, callback) {\r\n\t        return this.on(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.undelegate = function(selector, event, callback) {\r\n\t        return this.off(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.live = function(event, callback) {\r\n\t        $(document.body).delegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.die = function(event, callback) {\r\n\t        $(document.body).undelegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.bind = function(event, selector, data, callback) {\r\n\t        return this.on(event, selector, data, callback)\r\n\t    };\r\n\r\n\t    $.fn.unbind = function(event, callback) {\r\n\t        return this.off(event, callback)\r\n\t    };\r\n\r\n\t    $.fn.ready = function(callback) {\r\n\t        eventer.ready(callback);\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.stop = function() {\r\n\t        // todo\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.moveto = function(x, y) {\r\n\t        return this.animate({\r\n\t            left: x + \"px\",\r\n\t            top: y + \"px\"\r\n\t        }, 0.4);\r\n\r\n\t    };\r\n\r\n\t    $.ready = eventer.ready;\r\n\r\n\t    $.on = eventer.on;\r\n\r\n\t    $.off = eventer.off;\r\n    })(query);\r\n\r\n    (function($){\r\n\t    // plugin compatibility\r\n\t    $.uuid = 0;\r\n\t    $.support = browser.support;\r\n\t    $.expr = {};\r\n\r\n\t    $.expr[\":\"] = $.expr.pseudos = $.expr.filters = finder.pseudos;\r\n\r\n\t    $.expr.createPseudo = function(fn) {\r\n\t    \treturn fn;\r\n\t    };\r\n\r\n\t    $.cssHooks = styler.cssHooks;\r\n\r\n\t    $.contains = noder.contains;\r\n\r\n\t    $.css = styler.css;\r\n\r\n\t    $.data = datax.data;\r\n\r\n\t    $.fx = fx;\r\n\t    $.fx.step = {\r\n\r\n        };\r\n\r\n        $.easing = {};\r\n\r\n\t    $.offset = {};\r\n\t    $.offset.setOffset = function(elem, options, i) {\r\n\t        var position = $.css(elem, \"position\");\r\n\r\n\t        // set position first, in-case top/left are set even on static elem\r\n\t        if (position === \"static\") {\r\n\t            elem.style.position = \"relative\";\r\n\t        }\r\n\r\n\t        var curElem = $(elem),\r\n\t            curOffset = curElem.offset(),\r\n\t            curCSSTop = $.css(elem, \"top\"),\r\n\t            curCSSLeft = $.css(elem, \"left\"),\r\n\t            calculatePosition = (position === \"absolute\" || position === \"fixed\") && $.inArray(\"auto\", [curCSSTop, curCSSLeft]) > -1,\r\n\t            props = {},\r\n\t            curPosition = {},\r\n\t            curTop, curLeft;\r\n\r\n\t        // need to be able to calculate position if either top or left is auto and position is either absolute or fixed\r\n\t        if (calculatePosition) {\r\n\t            curPosition = curElem.position();\r\n\t            curTop = curPosition.top;\r\n\t            curLeft = curPosition.left;\r\n\t        } else {\r\n\t            curTop = parseFloat(curCSSTop) || 0;\r\n\t            curLeft = parseFloat(curCSSLeft) || 0;\r\n\t        }\r\n\r\n\t        if ($.isFunction(options)) {\r\n\t            options = options.call(elem, i, curOffset);\r\n\t        }\r\n\r\n\t        if (options.top != null) {\r\n\t            props.top = (options.top - curOffset.top) + curTop;\r\n\t        }\r\n\t        if (options.left != null) {\r\n\t            props.left = (options.left - curOffset.left) + curLeft;\r\n\t        }\r\n\r\n\t        if (\"using\" in options) {\r\n\t            options.using.call(elem, props);\r\n\t        } else {\r\n\t            curElem.css(props);\r\n\t        }\r\n\t    };\r\n\r\n        $._data = function(elm,propName) {\r\n            if (elm.hasAttribute) {\r\n                return datax.data(elm,propName);\r\n            } else {\r\n                return {};\r\n            }\r\n        };\r\n        \t    \r\n    })(query);\r\n\r\n    query.parseHTML = function(html) {\r\n        return  noder.createFragment(html);\r\n    };\r\n\r\n    query.uniqueSort = query.unique = langx.uniq;\r\n\r\n    query.skylark = skylark;\r\n\r\n    return window.jQuery = window.$ = query;\r\n});\r\n\ndefine('skylark-jquery/ajax',[\r\n    \"./core\",\r\n    \"skylark-langx/langx\"\r\n], function($,langx) {\r\n    var jsonpID = 0;\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') return url\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n    }\r\n    \r\n    $.ajaxJSONP = function(options) {\r\n        var deferred = new langx.Deferred();\r\n        var _callbackName = options.jsonpCallback,\r\n            callbackName = ($.isFunction(_callbackName) ?\r\n                _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\r\n            script = document.createElement('script'),\r\n            originalCallback = window[callbackName],\r\n            responseData,\r\n            abort = function(errorType) {\r\n                $(script).triggerHandler('error', errorType || 'abort')\r\n            },\r\n            xhr = { abort: abort },\r\n            abortTimeout;\r\n\r\n        for (var key in options.data) {\r\n            options.url = appendQuery(options.url, key + \"=\" + options.data[key]);\r\n        }\r\n         \r\n//        if (deferred) deferred.promise(xhr)\r\n\r\n        $(script).on('load error', function(e, errorType) {\r\n            clearTimeout(abortTimeout)\r\n            $(script).off().remove()\r\n\r\n            if (e.type == 'error' || !responseData) {\r\n                deferred.reject(e);\r\n            } else {\r\n                deferred.resolve(responseData[0],200,xhr);\r\n            }\r\n\r\n            window[callbackName] = originalCallback\r\n            if (responseData && $.isFunction(originalCallback))\r\n                originalCallback(responseData[0])\r\n\r\n            originalCallback = responseData = undefined\r\n        })\r\n\r\n        window[callbackName] = function() {\r\n            responseData = arguments\r\n        }\r\n\r\n        script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\r\n        document.head.appendChild(script)\r\n\r\n        if (options.timeout > 0) abortTimeout = setTimeout(function() {\r\n            abort('timeout')\r\n        }, options.timeout)\r\n\r\n        return deferred;\r\n    }\r\n\r\n    $.ajaxSettings = langx.Xhr.defaultOptions;\r\n\r\n    $.ajaxSettings.xhr = function() {\r\n        return new window.XMLHttpRequest()\r\n    };\r\n\r\n    $.ajax = function(options) {\r\n        if (!options) {\r\n            options = {\r\n                url :  \"./\"\r\n            };\r\n        } else if (langx.isString(options)) {\r\n            options = {\r\n                url :  options\r\n            };\r\n        }\r\n\r\n        if ('jsonp' == options.dataType) {\r\n            var hasPlaceholder = /\\?.+=\\?/.test(options.url);\r\n\r\n            if (!hasPlaceholder)\r\n                options.url = appendQuery(options.url,\r\n                    options.jsonp ? (options.jsonp + '=?') : options.jsonp === false ? '' : 'callback=?')\r\n            return $.ajaxJSONP(options);\r\n        }\r\n\r\n        var p = langx.Xhr.request(options.url,options);\r\n        if (options.success) {\r\n            p = p.then(options.success,options.error);\r\n        }\r\n        p.success = p.done;\r\n        p.error = p.fail;\r\n        p.complete = p.always;\r\n        \r\n        return p;\r\n    };\r\n\r\n    // handle optional data/success arguments\r\n    function parseArguments(url, data, success, dataType) {\r\n        if ($.isFunction(url)) {\r\n            dataType = data, success = url, data = undefined,url = undefined;\r\n        } else if ($.isFunction(data)) {\r\n            dataType = success, success = data, data = undefined;\r\n        } \r\n        if (!$.isFunction(success)) dataType = success, success = undefined\r\n        return {\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            dataType: dataType\r\n        }\r\n    }\r\n\r\n    $.get = function( /* url, data, success, dataType */ ) {\r\n        return $.ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    $.post = function( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.type = 'POST'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    $.getJSON = function( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.dataType = 'json'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    var originalLoad = $.fn.load;\r\n\r\n    $.fn.load = function(url, data, success) {\r\n        if (\"string\" != typeof url && originalLoad) {\r\n            return originalLoad.apply(this, arguments);\r\n        }\r\n        if (!this.length) return this\r\n        var self = this,\r\n            options = parseArguments(url, data, success),\r\n            parts = options.url && options.url.split(/\\s/),\r\n            selector,\r\n            callback = options.success\r\n        if (parts && parts.length > 1) options.url = parts[0], selector = parts[1]\r\n        options.success = function(response) {\r\n            self.html(selector ?\r\n                $('<div>').html(response.replace(rscript, \"\")).find(selector) : response)\r\n            callback && callback.apply(self, arguments)\r\n        }\r\n        $.ajax(options)\r\n        return this\r\n    }\r\n\r\n    $.param = langx.Xhr.param;\r\n\r\n\r\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n    function addToPrefiltersOrTransports(structure) {\r\n\r\n        // dataTypeExpression is optional and defaults to \"*\"\r\n        return function(dataTypeExpression, func) {\r\n\r\n            if (typeof dataTypeExpression !== \"string\") {\r\n                func = dataTypeExpression;\r\n                dataTypeExpression = \"*\";\r\n            }\r\n\r\n            var dataType,\r\n                i = 0,\r\n                dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\r\n\r\n            if (jQuery.isFunction(func)) {\r\n\r\n                // For each dataType in the dataTypeExpression\r\n                while ((dataType = dataTypes[i++])) {\r\n\r\n                    // Prepend if requested\r\n                    if (dataType[0] === \"+\") {\r\n                        dataType = dataType.slice(1) || \"*\";\r\n                        (structure[dataType] = structure[dataType] || []).unshift(func);\r\n\r\n                        // Otherwise append\r\n                    } else {\r\n                        (structure[dataType] = structure[dataType] || []).push(func);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    var\r\n        prefilters = {},\r\n        transports = {},\r\n        rnotwhite = (/\\S+/g);\r\n\r\n    $.ajaxPrefilter = addToPrefiltersOrTransports(prefilters);\r\n    $.ajaxTransport = addToPrefiltersOrTransports(transports);\r\n    $.ajaxSetup = function(target, settings) {\r\n        langx.mixin(langx.Xhr.defaultOptions,target,settings);\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/callbacks',[\r\n    \"./core\"\r\n], function($) {\r\n\r\n    //     This module is borrow from zepto.callback.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    // Create a collection of callbacks to be fired in a sequence, with configurable behaviour\r\n    // Option flags:\r\n    //   - once: Callbacks fired at most one time.\r\n    //   - memory: Remember the most recent context and arguments\r\n    //   - stopOnFalse: Cease iterating over callback list\r\n    //   - unique: Permit adding at most one instance of the same callback\r\n    $.Callbacks = function(options) {\r\n        options = $.extend({}, options)\r\n\r\n        var memory, // Last fire value (for non-forgettable lists)\r\n            fired, // Flag to know if list was already fired\r\n            firing, // Flag to know if list is currently firing\r\n            firingStart, // First callback to fire (used internally by add and fireWith)\r\n            firingLength, // End of the loop when firing\r\n            firingIndex, // Index of currently firing callback (modified by remove if needed)\r\n            list = [], // Actual callback list\r\n            stack = !options.once && [], // Stack of fire calls for repeatable lists\r\n            fire = function(data) {\r\n                memory = options.memory && data\r\n                fired = true\r\n                firingIndex = firingStart || 0\r\n                firingStart = 0\r\n                firingLength = list.length\r\n                firing = true\r\n                for (; list && firingIndex < firingLength; ++firingIndex) {\r\n                    if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\r\n                        memory = false\r\n                        break\r\n                    }\r\n                }\r\n                firing = false\r\n                if (list) {\r\n                    if (stack) stack.length && fire(stack.shift())\r\n                    else if (memory) list.length = 0\r\n                    else Callbacks.disable()\r\n                }\r\n            },\r\n\r\n            Callbacks = {\r\n                add: function() {\r\n                    if (list) {\r\n                        var start = list.length,\r\n                            add = function(args) {\r\n                                $.each(args, function(_, arg) {\r\n                                    if (typeof arg === \"function\") {\r\n                                        if (!options.unique || !Callbacks.has(arg)) list.push(arg)\r\n                                    } else if (arg && arg.length && typeof arg !== 'string') add(arg)\r\n                                })\r\n                            }\r\n                        add(arguments)\r\n                        if (firing) firingLength = list.length\r\n                        else if (memory) {\r\n                            firingStart = start\r\n                            fire(memory)\r\n                        }\r\n                    }\r\n                    return this\r\n                },\r\n                remove: function() {\r\n                    if (list) {\r\n                        $.each(arguments, function(_, arg) {\r\n                            var index\r\n                            while ((index = $.inArray(arg, list, index)) > -1) {\r\n                                list.splice(index, 1)\r\n                                // Handle firing indexes\r\n                                if (firing) {\r\n                                    if (index <= firingLength) --firingLength\r\n                                    if (index <= firingIndex) --firingIndex\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    return this\r\n                },\r\n                has: function(fn) {\r\n                    return !!(list && (fn ? $.inArray(fn, list) > -1 : list.length))\r\n                },\r\n                empty: function() {\r\n                    firingLength = list.length = 0\r\n                    return this\r\n                },\r\n                disable: function() {\r\n                    list = stack = memory = undefined\r\n                    return this\r\n                },\r\n                disabled: function() {\r\n                    return !list\r\n                },\r\n                lock: function() {\r\n                    stack = undefined;\r\n                    if (!memory) Callbacks.disable()\r\n                    return this\r\n                },\r\n                locked: function() {\r\n                    return !stack\r\n                },\r\n                fireWith: function(context, args) {\r\n                    if (list && (!fired || stack)) {\r\n                        args = args || []\r\n                        args = [context, args.slice ? args.slice() : args]\r\n                        if (firing) stack.push(args)\r\n                        else fire(args)\r\n                    }\r\n                    return this\r\n                },\r\n                fire: function() {\r\n                    return Callbacks.fireWith(this, arguments)\r\n                },\r\n                fired: function() {\r\n                    return !!fired\r\n                }\r\n            }\r\n\r\n        return Callbacks\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/deferred',[\r\n    \"./core\",\r\n    \"skylark-langx/langx\"\r\n], function($,langx) {\r\n\r\n    langx.Deferred.prototype.notify = langx.Deferred.prototype.progress;\r\n\r\n    $.Deferred = function() {\r\n        var d = new langx.Deferred(),\r\n            ret = {\r\n                promise : function() {\r\n                    return d.promise;\r\n                }\r\n            };\r\n\r\n        [\"resolve\",\"resolveWith\",\"reject\",\"rejectWith\",\"notify\",\"then\",\"done\",\"fail\",\"progress\"].forEach(function(name){\r\n            ret[name] = d[name].bind(d);\r\n        });\r\n\r\n        return ret;\r\n    };\r\n    \r\n    $.when = function(){\r\n        var p = langx.Deferred.all(langx.makeArray(arguments)),\r\n            originThen = p.then;\r\n        p.then = function(onResolved,onRejected) {\r\n            var handler = function(results) {\r\n                results = results.map(function(result){\r\n                    return [result];\r\n                });\r\n                return onResolved && onResolved.apply(null,results);\r\n            };\r\n            return originThen.call(p,handler,onRejected);\r\n        };\r\n        return p;\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/queue',[\r\n    \"skylark-langx/langx\",\r\n    \"./core\",\r\n    \"./callbacks\"\r\n], function(langx, $) {\r\n\r\n // jQuery Data object\r\n  var rbrace = /(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,\r\n      rmultiDash = /([A-Z])/g,\r\n      expando = \"Sky\" + ( '1.0' + Math.random() ).replace( /\\D/g, \"\"),\r\n      optionsCache = {},\r\n      core_rnotwhite = /\\S+/g,\r\n      core_deletedIds = [],\r\n      core_push = core_deletedIds.push;\r\n\r\n// Convert String-formatted options into Object-formatted ones and store in cache\r\n  function createOptions( options ) {\r\n    var object = optionsCache[ options ] = {};\r\n    $.each( options.match( core_rnotwhite ) || [], function( _, flag ) {\r\n      object[ flag ] = true;\r\n    });\r\n    return object;\r\n  }\r\n\r\n  function isArraylike( obj ) {\r\n    var length = obj.length,\r\n        type = $.type( obj );\r\n\r\n    if ( $.isWindow( obj ) ) {\r\n      return false;\r\n    }\r\n\r\n    if ( obj.nodeType === 1 && length ) {\r\n      return true;\r\n    }\r\n\r\n    return type === \"array\" || type !== \"function\" &&\r\n        ( length === 0 ||\r\n            typeof length === \"number\" && length > 0 && ( length - 1 ) in obj );\r\n  }\r\n\r\n  \r\n\r\n  function Data() {\r\n    // Support: Android < 4,\r\n    // Old WebKit does not have Object.preventExtensions/freeze method,\r\n    // return new empty object instead with no [[set]] accessor\r\n    Object.defineProperty( this.cache = {}, 0, {\r\n      get: function() {\r\n        return {};\r\n      }\r\n    });\r\n\r\n    this.expando = expando + Math.random();\r\n  }\r\n\r\n  Data.uid = 1;\r\n\r\n  Data.accepts = function( owner ) {\r\n    // Accepts only:\r\n    //  - Node\r\n    //    - Node.ELEMENT_NODE\r\n    //    - Node.DOCUMENT_NODE\r\n    //  - Object\r\n    //    - Any\r\n    return owner.nodeType ?\r\n        owner.nodeType === 1 || owner.nodeType === 9 : true;\r\n  };\r\n\r\n  Data.prototype = {\r\n    key: function( owner ) {\r\n      // We can accept data for non-element nodes in modern browsers,\r\n      // but we should not, see #8335.\r\n      // Always return the key for a frozen object.\r\n      if ( !Data.accepts( owner ) ) {\r\n        return 0;\r\n      }\r\n\r\n      var descriptor = {},\r\n      // Check if the owner object already has a cache key\r\n          unlock = owner[ this.expando ];\r\n\r\n      // If not, create one\r\n      if ( !unlock ) {\r\n        unlock = Data.uid++;\r\n\r\n        // Secure it in a non-enumerable, non-writable property\r\n        try {\r\n          descriptor[ this.expando ] = { value: unlock };\r\n          Object.defineProperties( owner, descriptor );\r\n\r\n          // Support: Android < 4\r\n          // Fallback to a less secure definition\r\n        } catch ( e ) {\r\n          descriptor[ this.expando ] = unlock;\r\n          $.extend( owner, descriptor );\r\n        }\r\n      }\r\n\r\n      // Ensure the cache object\r\n      if ( !this.cache[ unlock ] ) {\r\n        this.cache[ unlock ] = {};\r\n      }\r\n\r\n      return unlock;\r\n    },\r\n    set: function( owner, data, value ) {\r\n      var prop,\r\n      // There may be an unlock assigned to this node,\r\n      // if there is no entry for this \"owner\", create one inline\r\n      // and set the unlock as though an owner entry had always existed\r\n          unlock = this.key( owner ),\r\n          cache = this.cache[ unlock ];\r\n\r\n      // Handle: [ owner, key, value ] args\r\n      if ( typeof data === \"string\" ) {\r\n        cache[ data ] = value;\r\n\r\n        // Handle: [ owner, { properties } ] args\r\n      } else {\r\n        // Fresh assignments by object are shallow copied\r\n        if ( $.isEmptyObject( cache ) ) {\r\n          $.extend( this.cache[ unlock ], data );\r\n          // Otherwise, copy the properties one-by-one to the cache object\r\n        } else {\r\n          for ( prop in data ) {\r\n            cache[ prop ] = data[ prop ];\r\n          }\r\n        }\r\n      }\r\n      return cache;\r\n    },\r\n    get: function( owner, key ) {\r\n      // Either a valid cache is found, or will be created.\r\n      // New caches will be created and the unlock returned,\r\n      // allowing direct access to the newly created\r\n      // empty data object. A valid owner object must be provided.\r\n      var cache = this.cache[ this.key( owner ) ];\r\n\r\n      return key === undefined ?\r\n          cache : cache[ key ];\r\n    },\r\n    access: function( owner, key, value ) {\r\n      var stored;\r\n      // In cases where either:\r\n      //\r\n      //   1. No key was specified\r\n      //   2. A string key was specified, but no value provided\r\n      //\r\n      // Take the \"read\" path and allow the get method to determine\r\n      // which value to return, respectively either:\r\n      //\r\n      //   1. The entire cache object\r\n      //   2. The data stored at the key\r\n      //\r\n      if ( key === undefined ||\r\n          ((key && typeof key === \"string\") && value === undefined) ) {\r\n\r\n        stored = this.get( owner, key );\r\n\r\n        return stored !== undefined ?\r\n            stored : this.get( owner, $.camelCase(key) );\r\n      }\r\n\r\n      // [*]When the key is not a string, or both a key and value\r\n      // are specified, set or extend (existing objects) with either:\r\n      //\r\n      //   1. An object of properties\r\n      //   2. A key and value\r\n      //\r\n      this.set( owner, key, value );\r\n\r\n      // Since the \"set\" path can have two possible entry points\r\n      // return the expected data based on which path was taken[*]\r\n      return value !== undefined ? value : key;\r\n    },\r\n    remove: function( owner, key ) {\r\n      var i, name, camel,\r\n          unlock = this.key( owner ),\r\n          cache = this.cache[ unlock ];\r\n\r\n      if ( key === undefined ) {\r\n        this.cache[ unlock ] = {};\r\n\r\n      } else {\r\n        // Support array or space separated string of keys\r\n        if ( $.isArray( key ) ) {\r\n          // If \"name\" is an array of keys...\r\n          // When data is initially created, via (\"key\", \"val\") signature,\r\n          // keys will be converted to camelCase.\r\n          // Since there is no way to tell _how_ a key was added, remove\r\n          // both plain key and camelCase key. #12786\r\n          // This will only penalize the array argument path.\r\n          name = key.concat( key.map( $.camelCase ) );\r\n        } else {\r\n          camel = $.camelCase( key );\r\n          // Try the string as a key before any manipulation\r\n          if ( key in cache ) {\r\n            name = [ key, camel ];\r\n          } else {\r\n            // If a key with the spaces exists, use it.\r\n            // Otherwise, create an array by matching non-whitespace\r\n            name = camel;\r\n            name = name in cache ?\r\n                [ name ] : ( name.match( core_rnotwhite ) || [] );\r\n          }\r\n        }\r\n\r\n        i = name.length;\r\n        while ( i-- ) {\r\n          delete cache[ name[ i ] ];\r\n        }\r\n      }\r\n    },\r\n    hasData: function( owner ) {\r\n      return !$.isEmptyObject(\r\n          this.cache[ owner[ this.expando ] ] || {}\r\n      );\r\n    },\r\n    discard: function( owner ) {\r\n      if ( owner[ this.expando ] ) {\r\n        delete this.cache[ owner[ this.expando ] ];\r\n      }\r\n    }\r\n  };\r\n\r\n  var data_priv = new Data();\r\n\r\n  $.extend($, {\r\n    queue: function( elem, type, data ) {\r\n      var queue;\r\n\r\n      if ( elem ) {\r\n        type = ( type || \"fx\" ) + \"queue\";\r\n        queue = data_priv.get( elem, type );\r\n\r\n        // Speed up dequeue by getting out quickly if this is just a lookup\r\n        if ( data ) {\r\n          if ( !queue || $.isArray( data ) ) {\r\n            queue = data_priv.access( elem, type, $.makeArray(data) );\r\n          } else {\r\n            queue.push( data );\r\n          }\r\n        }\r\n        return queue || [];\r\n      }\r\n    },\r\n\r\n    dequeue: function( elem, type ) {\r\n      type = type || \"fx\";\r\n\r\n      var queue = $.queue( elem, type ),\r\n          startLength = queue.length,\r\n          fn = queue.shift(),\r\n          hooks = $._queueHooks( elem, type ),\r\n          next = function() {\r\n            $.dequeue( elem, type );\r\n          };\r\n\r\n      // If the fx queue is dequeued, always remove the progress sentinel\r\n      if ( fn === \"inprogress\" ) {\r\n        fn = queue.shift();\r\n        startLength--;\r\n      }\r\n\r\n      if ( fn ) {\r\n\r\n        // Add a progress sentinel to prevent the fx queue from being\r\n        // automatically dequeued\r\n        if ( type === \"fx\" ) {\r\n          queue.unshift( \"inprogress\" );\r\n        }\r\n\r\n        // clear up the last queue stop function\r\n        delete hooks.stop;\r\n        fn.call( elem, next, hooks );\r\n      }\r\n\r\n      if ( !startLength && hooks ) {\r\n        hooks.empty.fire();\r\n      }\r\n    },\r\n\r\n    // not intended for public consumption - generates a queueHooks object, or returns the current one\r\n    _queueHooks: function( elem, type ) {\r\n      var key = type + \"queueHooks\";\r\n      return data_priv.get( elem, key ) || data_priv.access( elem, key, {\r\n        empty: $.Callbacks(\"once memory\").add(function() {\r\n          data_priv.remove( elem, [ type + \"queue\", key ] );\r\n        })\r\n      });\r\n    },\r\n\r\n    // array operations\r\n    makeArray: function( arr, results ) {\r\n      var ret = results || [];\r\n\r\n      if ( arr != null ) {\r\n        if ( isArraylike( Object(arr) ) ) {\r\n          $.merge( ret,\r\n              typeof arr === \"string\" ?\r\n                  [ arr ] : arr\r\n          );\r\n        } else {\r\n          core_push.call( ret, arr );\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    },\r\n    merge: function( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n  });\r\n\r\n  $.extend($.fn, {\r\n    queue: function( type, data ) {\r\n      var setter = 2;\r\n\r\n      if ( typeof type !== \"string\" ) {\r\n        data = type;\r\n        type = \"fx\";\r\n        setter--;\r\n      }\r\n\r\n      if ( arguments.length < setter ) {\r\n        return $.queue( this[0], type );\r\n      }\r\n\r\n      return data === undefined ?\r\n          this :\r\n          this.each(function() {\r\n            var queue = $.queue( this, type, data );\r\n\r\n            // ensure a hooks for this queue\r\n            $._queueHooks( this, type );\r\n\r\n            if ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\r\n              $.dequeue( this, type );\r\n            }\r\n          });\r\n    },\r\n    dequeue: function( type ) {\r\n      return this.each(function() {\r\n        $.dequeue( this, type );\r\n      });\r\n    },\r\n    // Based off of the plugin by Clint Helfers, with permission.\r\n    // http://blindsignals.com/index.php/2009/07/jquery-delay/\r\n    delay: function( time, type ) {\r\n      time = $.fx ? $.fx.speeds[ time ] || time : time;\r\n      type = type || \"fx\";\r\n\r\n      return this.queue( type, function( next, hooks ) {\r\n        var timeout = setTimeout( next, time );\r\n        hooks.stop = function() {\r\n          clearTimeout( timeout );\r\n        };\r\n      });\r\n    },\r\n    clearQueue: function( type ) {\r\n      return this.queue( type || \"fx\", [] );\r\n    },\r\n    // Get a promise resolved when queues of a certain type\r\n    // are emptied (fx is the type by default)\r\n    promise: function( type, obj ) {\r\n      var tmp,\r\n          count = 1,\r\n          defer = $.Deferred(),\r\n          elements = this,\r\n          i = this.length,\r\n          resolve = function() {\r\n            if ( !( --count ) ) {\r\n              defer.resolveWith( elements, [ elements ] );\r\n            }\r\n          };\r\n\r\n      if ( typeof type !== \"string\" ) {\r\n        obj = type;\r\n        type = undefined;\r\n      }\r\n      type = type || \"fx\";\r\n\r\n      while( i-- ) {\r\n        tmp = data_priv.get( elements[ i ], type + \"queueHooks\" );\r\n        if ( tmp && tmp.empty ) {\r\n          count++;\r\n          tmp.empty.add( resolve );\r\n        }\r\n      }\r\n      resolve();\r\n      return defer.promise( obj );\r\n    }\r\n  });\r\n\r\n  return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/main',[\r\n    \"./core\",\r\n    \"./ajax\",\r\n    \"./callbacks\",\r\n    \"./deferred\",\r\n    \"./queue\"\r\n], function($) {\r\n    return $;\r\n});\r\n\ndefine('skylark-jquery', ['skylark-jquery/main'], function (main) { return main; });\n\n"]}