{"version":3,"sources":["skylark-jquery.js"],"names":["define","skylark","langx","browser","noder","datax","eventer","finder","fx","styler","query","$","filter","Array","prototype","slice","fn","jquery","camelCase","cleanData","elems","elem","i","undefined","removeData","elm","name","each","extend","grep","elements","callback","call","attr","isArray","isEmptyObject","isFunction","isWindow","isPlainObject","isNumeric","isNumber","inArray","makeArray","map","noop","parseJSON","window","JSON","parse","proxy","trim","type","props","mixin","serializeArray","result","add","value","forEach","push","this","_","field","nodeName","toLowerCase","disabled","checked","val","serialize","encodeURIComponent","join","Event","src","isString","create","event","special","submit","arguments","bind","length","eq","trigger","isDefaultPrevented","get","triggerHandler","delegate","selector","on","undelegate","off","live","document","body","die","data","unbind","ready","stop","moveto","x","y","animate","left","top","uuid","support","expr","pseudos","filters","createPseudo","cssHooks","contains","css","step","speed","easing","opt","complete","duration","speeds","_default","queue","old","dequeue","offset","setOffset","options","position","style","curTop","curLeft","curElem","curOffset","curCSSTop","curCSSLeft","calculatePosition","curPosition","parseFloat","using","_data","propName","hasAttribute","t","text","v","r","apply","parseHTML","html","createFragment","uniqueSort","unique","uniq","jQuery","jsonpID","appendQuery","url","replace","parseArguments","success","dataType","ajaxJSONP","responseData","abortTimeout","deferred","Deferred","_callbackName","jsonpCallback","callbackName","script","createElement","originalCallback","abort","errorType","xhr","key","e","clearTimeout","remove","resolve","reject","head","appendChild","timeout","setTimeout","ajaxSettings","Xhr","defaultOptions","XMLHttpRequest","ajax","hasPlaceholder","test","jsonp","p","request","then","error","done","fail","always","post","getJSON","originalLoad","load","addToPrefiltersOrTransports","structure","dataTypeExpression","func","dataTypes","match","rnotwhite","unshift","self","parts","split","response","rscript","find","param","ajaxPrefilter","ajaxTransport","ajaxSetup","target","settings","Callbacks","memory","fired","firing","firingStart","firingLength","firingIndex","list","stack","once","fire","stopOnFalse","shift","disable","start","args","arg","has","index","splice","empty","lock","locked","fireWith","context","d","ret","promise","ret2","when","all","originThen","onResolved","onRejected","results","expando","Math","random","core_rnotwhite","core_push","Data","Object","defineProperty","cache","uid","accepts","owner","nodeType","descriptor","unlock","defineProperties","set","prop","access","stored","camel","concat","hasData","discard","data_priv","startLength","hooks","_queueHooks","arr","obj","isArraylike","merge","first","second","l","j","setter","delay","time","next","clearQueue","tmp","count","defer","resolveWith","types","objects","arrays","plugins","pluginUuid","JqPlugin","Plugin","inherit","klassName","pluginEventPrefix","destroy","overrided","element","eventNamespace","bindings","_construct","defaultElement","pluginName","classesElementLookup","hoverable","focusable","_on","ownerDocument","defaultView","parentWindow","_create","_trigger","_getCreateEventData","_init","_classes","full","that","processClassString","classes","checkOption","current","isTracked","some","is","not","keys","extra","_untrackClassesElement","_off","_removeClass","_toggleClass","_addClass","toggleClass","suppressDisabledCheck","handlers","delegateElement","instance","widget","handler","handlerProxy","hasClass","guid","eventName","orig","widgetEventPrefix","originalEvent","splugins","widgetHasOwnProperty","hasOwnProperty","widgetSlice","events","base","existingConstructor","constructor","namespace","fullName","Widget","basePrototype","newPrototype","_proto","widgetName","widgetFullName","version","_childConstructors","child","childPrototype","register","input","inputIndex","inputLength","_initOptions","_createOptions","_super","_superApply","_setOption","_setOptionClasses","_setOptionDisabled","classKey","currentElements","addClass","enable","_setOptions","_delay","_hoverable","mouseenter","currentTarget","mouseleave","_focusable","focusin","focusout","show","hide","method","defaultEffect","hasOptions","effect","effectName","effects","main"],"mappings":"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","file":"../skylark-jquery.js","sourcesContent":["define('skylark-jquery/core',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-utils-dom/browser\",\r\n\t\"skylark-utils-dom/noder\",\r\n\t\"skylark-utils-dom/datax\",\r\n\t\"skylark-utils-dom/eventer\",\r\n\t\"skylark-utils-dom/finder\",\r\n\t\"skylark-utils-dom/fx\",\r\n\t\"skylark-utils-dom/styler\",\r\n\t\"skylark-utils-dom/query\"\r\n],function(skylark,langx,browser,noder,datax,eventer,finder,fx,styler,query){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n    (function($){\r\n\t    $.fn.jquery = '2.2.0';\r\n\r\n\t    $.browser = browser;\r\n\t    \r\n\t    $.camelCase = langx.camelCase;\r\n\r\n\t\t$.cleanData = function( elems ) {\r\n\t\t\tvar elem,\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\r\n\t\t\t\tdatax.cleanData(elem);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.removeData = function(elm,name) {\r\n\t\t\tdatax.removeData(elm,name);\r\n\t\t}\r\n\t\r\n\t    $.each = langx.each;\r\n\r\n\t    $.extend = langx.extend;\r\n\r\n\t    $.grep = function(elements, callback) {\r\n\t        return filter.call(elements, callback)\r\n\t    };\r\n\r\n\t    $.attr = function(elm,name) {\r\n\t    \treturn datax.attr(elm,name);\r\n\t    };\r\n\r\n\t    $.isArray = langx.isArray;\r\n\t    $.isEmptyObject = langx.isEmptyObject;\r\n\t    $.isFunction = langx.isFunction;\r\n\t    $.isWindow = langx.isWindow;\r\n\t    $.isPlainObject = langx.isPlainObject;\r\n        $.isNumeric = langx.isNumber;\r\n\r\n\t    $.inArray = langx.inArray;\r\n\r\n\t    $.makeArray = langx.makeArray;\r\n\t    $.map = langx.map;  // The behavior is somewhat different from the original jquery.\r\n\r\n\t    $.noop = function() {\r\n\t    };\r\n\r\n\t    $.parseJSON = window.JSON.parse;\r\n\r\n\t    $.proxy = langx.proxy;\r\n\r\n\t    $.trim = langx.trim;\r\n\t    $.type = langx.type;\r\n\r\n\t    $.fn.extend = function(props) {\r\n\t        langx.mixin($.fn, props);\r\n\t    };\r\n\r\n\t    $.fn.serializeArray = function() {\r\n\t        var name, type, result = [],\r\n\t            add = function(value) {\r\n\t                if (value.forEach) return value.forEach(add)\r\n\t                result.push({ name: name, value: value })\r\n\t            }\r\n\t        if (this[0]) langx.each(this[0].elements, function(_, field) {\r\n\t            type = field.type, name = field.name\r\n\t            if (name && field.nodeName.toLowerCase() != 'fieldset' &&\r\n\t                !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&\r\n\t                ((type != 'radio' && type != 'checkbox') || field.checked))\r\n\t                add($(field).val())\r\n\t        })\r\n\t        return result\r\n\t    };\r\n\r\n\t    $.fn.serialize = function() {\r\n\t        var result = []\r\n\t        this.serializeArray().forEach(function(elm) {\r\n\t            result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\r\n\t        })\r\n\t        return result.join('&')\r\n\t    };\r\n    })(query);\r\n\r\n    (function($){\r\n        $.Event = function Event(src, props) {\r\n            if (langx.isString(src)) {\r\n            \tvar type = src;\r\n            \treturn eventer.create(type, props);\r\n\t        }\r\n            return eventer.proxy(src, props);\r\n        };\r\n\r\n        $.event = {};\r\n\r\n\t    $.event.special = eventer.special;\r\n\r\n\t    $.fn.submit = function(callback) {\r\n\t        if (0 in arguments) this.bind('submit', callback)\r\n\t        else if (this.length) {\r\n\t            var event = $.Event('submit')\r\n\t            this.eq(0).trigger(event)\r\n\t            if (!event.isDefaultPrevented()) this.get(0).submit()\r\n\t        }\r\n\t        return this\r\n\t    };\r\n\r\n\t    // event\r\n\t    $.fn.triggerHandler = $.fn.trigger;\r\n\r\n\t    $.fn.delegate = function(selector, event, callback) {\r\n\t        return this.on(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.undelegate = function(selector, event, callback) {\r\n\t        return this.off(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.live = function(event, callback) {\r\n\t        $(document.body).delegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.die = function(event, callback) {\r\n\t        $(document.body).undelegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.bind = function(event, selector, data, callback) {\r\n\t        return this.on(event, selector, data, callback)\r\n\t    };\r\n\r\n\t    $.fn.unbind = function(event, callback) {\r\n\t        return this.off(event, callback)\r\n\t    };\r\n\r\n\t    $.fn.ready = function(callback) {\r\n\t        eventer.ready(callback);\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.stop = function() {\r\n\t        // todo\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.moveto = function(x, y) {\r\n\t        return this.animate({\r\n\t            left: x + \"px\",\r\n\t            top: y + \"px\"\r\n\t        }, 0.4);\r\n\r\n\t    };\r\n\r\n\t    $.ready = eventer.ready;\r\n\r\n\t    $.on = eventer.on;\r\n\r\n\t    $.off = eventer.off;\r\n    })(query);\r\n\r\n    (function($){\r\n\t    // plugin compatibility\r\n\t    $.uuid = 0;\r\n\t    $.support = browser.support;\r\n\t    $.expr = {};\r\n\r\n\t    $.expr[\":\"] = $.expr.pseudos = $.expr.filters = finder.pseudos;\r\n\r\n\t    $.expr.createPseudo = function(fn) {\r\n\t    \treturn fn;\r\n\t    };\r\n\r\n\t    $.cssHooks = styler.cssHooks;\r\n\r\n\t    $.contains = noder.contains;\r\n\r\n\t    $.css = styler.css;\r\n\r\n\t    $.data = datax.data;\r\n\r\n\t    $.fx = fx;\r\n\t    $.fx.step = {\r\n\r\n        };\r\n\r\n        $.speed = function( speed, easing, fn ) {\r\n            var opt = speed && typeof speed === \"object\" ? $.extend( {}, speed ) : {\r\n                complete: fn || !fn && easing ||\r\n                    $.isFunction( speed ) && speed,\r\n                duration: speed,\r\n                easing: fn && easing || easing && !$.isFunction( easing ) && easing\r\n            };\r\n\r\n            // Go to the end state if fx are off\r\n            if ( $.fx.off ) {\r\n                opt.duration = 0;\r\n\r\n            } else {\r\n                if ( typeof opt.duration !== \"number\" ) {\r\n                    if ( opt.duration in $.fx.speeds ) {\r\n                        opt.duration = $.fx.speeds[ opt.duration ];\r\n\r\n                    } else {\r\n                        opt.duration = $.fx.speeds._default;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Normalize opt.queue - true/undefined/null -> \"fx\"\r\n            if ( opt.queue == null || opt.queue === true ) {\r\n                opt.queue = \"fx\";\r\n            }\r\n\r\n            // Queueing\r\n            opt.old = opt.complete;\r\n\r\n            opt.complete = function() {\r\n                if ( $.isFunction( opt.old ) ) {\r\n                    opt.old.call( this );\r\n                }\r\n\r\n                if ( opt.queue ) {\r\n                    $.dequeue( this, opt.queue );\r\n                }\r\n            };\r\n\r\n            return opt;\r\n        };\r\n\r\n        $.easing = {};\r\n\r\n\t    $.offset = {};\r\n\t    $.offset.setOffset = function(elem, options, i) {\r\n\t        var position = $.css(elem, \"position\");\r\n\r\n\t        // set position first, in-case top/left are set even on static elem\r\n\t        if (position === \"static\") {\r\n\t            elem.style.position = \"relative\";\r\n\t        }\r\n\r\n\t        var curElem = $(elem),\r\n\t            curOffset = curElem.offset(),\r\n\t            curCSSTop = $.css(elem, \"top\"),\r\n\t            curCSSLeft = $.css(elem, \"left\"),\r\n\t            calculatePosition = (position === \"absolute\" || position === \"fixed\") && $.inArray(\"auto\", [curCSSTop, curCSSLeft]) > -1,\r\n\t            props = {},\r\n\t            curPosition = {},\r\n\t            curTop, curLeft;\r\n\r\n\t        // need to be able to calculate position if either top or left is auto and position is either absolute or fixed\r\n\t        if (calculatePosition) {\r\n\t            curPosition = curElem.position();\r\n\t            curTop = curPosition.top;\r\n\t            curLeft = curPosition.left;\r\n\t        } else {\r\n\t            curTop = parseFloat(curCSSTop) || 0;\r\n\t            curLeft = parseFloat(curCSSLeft) || 0;\r\n\t        }\r\n\r\n\t        if ($.isFunction(options)) {\r\n\t            options = options.call(elem, i, curOffset);\r\n\t        }\r\n\r\n\t        if (options.top != null) {\r\n\t            props.top = (options.top - curOffset.top) + curTop;\r\n\t        }\r\n\t        if (options.left != null) {\r\n\t            props.left = (options.left - curOffset.left) + curLeft;\r\n\t        }\r\n\r\n\t        if (\"using\" in options) {\r\n\t            options.using.call(elem, props);\r\n\t        } else {\r\n\t            curElem.css(props);\r\n\t        }\r\n\t    };\r\n\r\n        $._data = function(elm,propName) {\r\n            if (elm.hasAttribute) {\r\n                return datax.data(elm,propName);\r\n            } else {\r\n                return {};\r\n            }\r\n        };\r\n\r\n     \tvar t = $.fn.text;  \r\n\t    $.fn.text = function(v) {\r\n\t        var r = t.apply(this,arguments);\r\n\t        if (r === undefined) {\r\n\t            r = \"\";\r\n\t        }  \r\n\t        return r;\r\n\t    };       \r\n        \t    \r\n    })(query);\r\n\r\n    query.parseHTML = function(html) {\r\n        return  noder.createFragment(html);\r\n    };\r\n\r\n    query.uniqueSort = query.unique = langx.uniq;\r\n\r\n    query.skylark = skylark;\r\n\r\n    return window.jQuery = window.$ = query;\r\n});\r\n\ndefine('skylark-jquery/ajax',[\r\n    \"./core\",\r\n    \"skylark-langx/langx\"\r\n], function($,langx) {\r\n    var jsonpID = 0;\r\n\r\n     // Attach a bunch of functions for handling common AJAX events\r\n    $.each( [\r\n        \"ajaxStart\",\r\n        \"ajaxStop\",\r\n        \"ajaxComplete\",\r\n        \"ajaxError\",\r\n        \"ajaxSuccess\",\r\n        \"ajaxSend\"\r\n    ], function( i, type ) {\r\n        $.fn[ type ] = function( fn ) {\r\n            return this.on( type, fn );\r\n        };\r\n    } );\r\n   \r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') return url\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n    }\r\n    \r\n    $.ajaxJSONP = function(options) {\r\n        var deferred = new langx.Deferred();\r\n        var _callbackName = options.jsonpCallback,\r\n            callbackName = ($.isFunction(_callbackName) ?\r\n                _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\r\n            script = document.createElement('script'),\r\n            originalCallback = window[callbackName],\r\n            responseData,\r\n            abort = function(errorType) {\r\n                $(script).triggerHandler('error', errorType || 'abort')\r\n            },\r\n            xhr = { abort: abort },\r\n            abortTimeout;\r\n\r\n        for (var key in options.data) {\r\n            options.url = appendQuery(options.url, key + \"=\" + options.data[key]);\r\n        }\r\n         \r\n//        if (deferred) deferred.promise(xhr)\r\n\r\n        $(script).on('load error', function(e, errorType) {\r\n            clearTimeout(abortTimeout)\r\n            $(script).off().remove()\r\n\r\n            if (e.type == 'error' || !responseData) {\r\n                deferred.reject(e);\r\n            } else {\r\n                deferred.resolve(responseData[0],200,xhr);\r\n            }\r\n\r\n            window[callbackName] = originalCallback\r\n            if (responseData && $.isFunction(originalCallback))\r\n                originalCallback(responseData[0])\r\n\r\n            originalCallback = responseData = undefined\r\n        })\r\n\r\n        window[callbackName] = function() {\r\n            responseData = arguments\r\n        }\r\n\r\n        script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\r\n        document.head.appendChild(script)\r\n\r\n        if (options.timeout > 0) abortTimeout = setTimeout(function() {\r\n            abort('timeout')\r\n        }, options.timeout)\r\n\r\n        return deferred;\r\n    }\r\n\r\n    $.ajaxSettings = langx.Xhr.defaultOptions;\r\n\r\n    $.ajaxSettings.xhr = function() {\r\n        return new window.XMLHttpRequest()\r\n    };\r\n\r\n    $.ajax = function(options) {\r\n        if (!options) {\r\n            options = {\r\n                url :  \"./\"\r\n            };\r\n        } else if (langx.isString(options)) {\r\n            options = {\r\n                url :  options\r\n            };\r\n        }\r\n\r\n        if ('jsonp' == options.dataType) {\r\n            var hasPlaceholder = /\\?.+=\\?/.test(options.url);\r\n\r\n            if (!hasPlaceholder)\r\n                options.url = appendQuery(options.url,\r\n                    options.jsonp ? (options.jsonp + '=?') : options.jsonp === false ? '' : 'callback=?')\r\n            return $.ajaxJSONP(options);\r\n        }\r\n\r\n        function ajaxSuccess() {\r\n            $(document).trigger(\"ajaxSucess\");\r\n            if (options.success) {\r\n                options.success.apply(this,arguments);\r\n            }\r\n        }\r\n\r\n        function ajaxError() {\r\n            $(document).trigger(\"ajaxError\");\r\n            if (options.error) {\r\n                options.error.apply(this,arguments);\r\n            }\r\n        }\r\n\r\n        var p = langx.Xhr.request(options.url,options);\r\n        p = p.then(ajaxSuccess,ajaxError);\r\n        p.success = p.done;\r\n        p.error = p.fail;\r\n        p.complete = p.always;\r\n        \r\n        return p;\r\n    };\r\n\r\n    // handle optional data/success arguments\r\n    function parseArguments(url, data, success, dataType) {\r\n        if ($.isFunction(url)) {\r\n            dataType = data, success = url, data = undefined,url = undefined;\r\n        } else if ($.isFunction(data)) {\r\n            dataType = success, success = data, data = undefined;\r\n        } \r\n        if (!$.isFunction(success)) dataType = success, success = undefined\r\n        return {\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            dataType: dataType\r\n        }\r\n    }\r\n\r\n    $.get = function( /* url, data, success, dataType */ ) {\r\n        return $.ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    $.post = function( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.type = 'POST'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    $.getJSON = function( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.dataType = 'json'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    var originalLoad = $.fn.load;\r\n\r\n    $.fn.load = function(url, data, success) {\r\n        if (\"string\" != typeof url && originalLoad) {\r\n            return originalLoad.apply(this, arguments);\r\n        }\r\n        if (!this.length) return this\r\n        var self = this,\r\n            options = parseArguments(url, data, success),\r\n            parts = options.url && options.url.split(/\\s/),\r\n            selector,\r\n            callback = options.success\r\n        if (parts && parts.length > 1) options.url = parts[0], selector = parts[1]\r\n        options.success = function(response) {\r\n            self.html(selector ?\r\n                $('<div>').html(response.replace(rscript, \"\")).find(selector) : response)\r\n            callback && callback.apply(self, arguments)\r\n        }\r\n        $.ajax(options)\r\n        return this\r\n    }\r\n\r\n    $.param = langx.Xhr.param;\r\n\r\n\r\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n    function addToPrefiltersOrTransports(structure) {\r\n\r\n        // dataTypeExpression is optional and defaults to \"*\"\r\n        return function(dataTypeExpression, func) {\r\n\r\n            if (typeof dataTypeExpression !== \"string\") {\r\n                func = dataTypeExpression;\r\n                dataTypeExpression = \"*\";\r\n            }\r\n\r\n            var dataType,\r\n                i = 0,\r\n                dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\r\n\r\n            if (jQuery.isFunction(func)) {\r\n\r\n                // For each dataType in the dataTypeExpression\r\n                while ((dataType = dataTypes[i++])) {\r\n\r\n                    // Prepend if requested\r\n                    if (dataType[0] === \"+\") {\r\n                        dataType = dataType.slice(1) || \"*\";\r\n                        (structure[dataType] = structure[dataType] || []).unshift(func);\r\n\r\n                        // Otherwise append\r\n                    } else {\r\n                        (structure[dataType] = structure[dataType] || []).push(func);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    var\r\n        prefilters = {},\r\n        transports = {},\r\n        rnotwhite = (/\\S+/g);\r\n\r\n    $.ajaxPrefilter = addToPrefiltersOrTransports(prefilters);\r\n    $.ajaxTransport = addToPrefiltersOrTransports(transports);\r\n    $.ajaxSetup = function(target, settings) {\r\n        langx.mixin(langx.Xhr.defaultOptions,target,settings);\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/callbacks',[\r\n    \"./core\"\r\n], function($) {\r\n\r\n    //     This module is borrow from zepto.callback.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    // Create a collection of callbacks to be fired in a sequence, with configurable behaviour\r\n    // Option flags:\r\n    //   - once: Callbacks fired at most one time.\r\n    //   - memory: Remember the most recent context and arguments\r\n    //   - stopOnFalse: Cease iterating over callback list\r\n    //   - unique: Permit adding at most one instance of the same callback\r\n    $.Callbacks = function(options) {\r\n        options = $.extend({}, options)\r\n\r\n        var memory, // Last fire value (for non-forgettable lists)\r\n            fired, // Flag to know if list was already fired\r\n            firing, // Flag to know if list is currently firing\r\n            firingStart, // First callback to fire (used internally by add and fireWith)\r\n            firingLength, // End of the loop when firing\r\n            firingIndex, // Index of currently firing callback (modified by remove if needed)\r\n            list = [], // Actual callback list\r\n            stack = !options.once && [], // Stack of fire calls for repeatable lists\r\n            fire = function(data) {\r\n                memory = options.memory && data\r\n                fired = true\r\n                firingIndex = firingStart || 0\r\n                firingStart = 0\r\n                firingLength = list.length\r\n                firing = true\r\n                for (; list && firingIndex < firingLength; ++firingIndex) {\r\n                    if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\r\n                        memory = false\r\n                        break\r\n                    }\r\n                }\r\n                firing = false\r\n                if (list) {\r\n                    if (stack) stack.length && fire(stack.shift())\r\n                    else if (memory) list.length = 0\r\n                    else Callbacks.disable()\r\n                }\r\n            },\r\n\r\n            Callbacks = {\r\n                add: function() {\r\n                    if (list) {\r\n                        var start = list.length,\r\n                            add = function(args) {\r\n                                $.each(args, function(_, arg) {\r\n                                    if (typeof arg === \"function\") {\r\n                                        if (!options.unique || !Callbacks.has(arg)) list.push(arg)\r\n                                    } else if (arg && arg.length && typeof arg !== 'string') add(arg)\r\n                                })\r\n                            }\r\n                        add(arguments)\r\n                        if (firing) firingLength = list.length\r\n                        else if (memory) {\r\n                            firingStart = start\r\n                            fire(memory)\r\n                        }\r\n                    }\r\n                    return this\r\n                },\r\n                remove: function() {\r\n                    if (list) {\r\n                        $.each(arguments, function(_, arg) {\r\n                            var index\r\n                            while ((index = $.inArray(arg, list, index)) > -1) {\r\n                                list.splice(index, 1)\r\n                                // Handle firing indexes\r\n                                if (firing) {\r\n                                    if (index <= firingLength) --firingLength\r\n                                    if (index <= firingIndex) --firingIndex\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    return this\r\n                },\r\n                has: function(fn) {\r\n                    return !!(list && (fn ? $.inArray(fn, list) > -1 : list.length))\r\n                },\r\n                empty: function() {\r\n                    firingLength = list.length = 0\r\n                    return this\r\n                },\r\n                disable: function() {\r\n                    list = stack = memory = undefined\r\n                    return this\r\n                },\r\n                disabled: function() {\r\n                    return !list\r\n                },\r\n                lock: function() {\r\n                    stack = undefined;\r\n                    if (!memory) Callbacks.disable()\r\n                    return this\r\n                },\r\n                locked: function() {\r\n                    return !stack\r\n                },\r\n                fireWith: function(context, args) {\r\n                    if (list && (!fired || stack)) {\r\n                        args = args || []\r\n                        args = [context, args.slice ? args.slice() : args]\r\n                        if (firing) stack.push(args)\r\n                        else fire(args)\r\n                    }\r\n                    return this\r\n                },\r\n                fire: function() {\r\n                    return Callbacks.fireWith(this, arguments)\r\n                },\r\n                fired: function() {\r\n                    return !!fired\r\n                }\r\n            }\r\n\r\n        return Callbacks\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/deferred',[\r\n    \"./core\",\r\n    \"skylark-langx/langx\"\r\n], function($,langx) {\r\n\r\n    $.Deferred = function() {\r\n        var d = new langx.Deferred(),\r\n            ret = {\r\n                promise : function() {\r\n                    return d.promise;\r\n                }\r\n            };\r\n\r\n        [\"resolve\",\"resolveWith\",\"reject\",\"rejectWith\",\"notify\",\"then\",\"done\",\"fail\",\"progress\"].forEach(function(name){\r\n            ret[name] = function() {\r\n              var ret2 =   d[name].apply(d,arguments);\r\n              if (ret2 == d) {\r\n                ret2 = ret;\r\n              }\r\n              return ret2;\r\n            }\r\n        });\r\n\r\n        return ret;\r\n    };\r\n    \r\n    $.when = function(){\r\n        var p = langx.Deferred.all(langx.makeArray(arguments)),\r\n            originThen = p.then;\r\n        p.then = function(onResolved,onRejected) {\r\n            var handler = function(results) {\r\n                //results = results.map(function(result){\r\n                //    return [result];\r\n                //});\r\n                return onResolved && onResolved.apply(null,results);\r\n            };\r\n            return originThen.call(p,handler,onRejected);\r\n        };\r\n        return p;\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/queue',[\r\n    \"skylark-langx/langx\",\r\n    \"./core\",\r\n    \"./callbacks\"\r\n], function(langx, $) {\r\n\r\n // jQuery Data object\r\n  var rbrace = /(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,\r\n      rmultiDash = /([A-Z])/g,\r\n      expando = \"Sky\" + ( '1.0' + Math.random() ).replace( /\\D/g, \"\"),\r\n      optionsCache = {},\r\n      core_rnotwhite = /\\S+/g,\r\n      core_deletedIds = [],\r\n      core_push = core_deletedIds.push;\r\n\r\n// Convert String-formatted options into Object-formatted ones and store in cache\r\n  function createOptions( options ) {\r\n    var object = optionsCache[ options ] = {};\r\n    $.each( options.match( core_rnotwhite ) || [], function( _, flag ) {\r\n      object[ flag ] = true;\r\n    });\r\n    return object;\r\n  }\r\n\r\n  function isArraylike( obj ) {\r\n    var length = obj.length,\r\n        type = $.type( obj );\r\n\r\n    if ( $.isWindow( obj ) ) {\r\n      return false;\r\n    }\r\n\r\n    if ( obj.nodeType === 1 && length ) {\r\n      return true;\r\n    }\r\n\r\n    return type === \"array\" || type !== \"function\" &&\r\n        ( length === 0 ||\r\n            typeof length === \"number\" && length > 0 && ( length - 1 ) in obj );\r\n  }\r\n\r\n  \r\n\r\n  function Data() {\r\n    // Support: Android < 4,\r\n    // Old WebKit does not have Object.preventExtensions/freeze method,\r\n    // return new empty object instead with no [[set]] accessor\r\n    Object.defineProperty( this.cache = {}, 0, {\r\n      get: function() {\r\n        return {};\r\n      }\r\n    });\r\n\r\n    this.expando = expando + Math.random();\r\n  }\r\n\r\n  Data.uid = 1;\r\n\r\n  Data.accepts = function( owner ) {\r\n    // Accepts only:\r\n    //  - Node\r\n    //    - Node.ELEMENT_NODE\r\n    //    - Node.DOCUMENT_NODE\r\n    //  - Object\r\n    //    - Any\r\n    return owner.nodeType ?\r\n        owner.nodeType === 1 || owner.nodeType === 9 : true;\r\n  };\r\n\r\n  Data.prototype = {\r\n    key: function( owner ) {\r\n      // We can accept data for non-element nodes in modern browsers,\r\n      // but we should not, see #8335.\r\n      // Always return the key for a frozen object.\r\n      if ( !Data.accepts( owner ) ) {\r\n        return 0;\r\n      }\r\n\r\n      var descriptor = {},\r\n      // Check if the owner object already has a cache key\r\n          unlock = owner[ this.expando ];\r\n\r\n      // If not, create one\r\n      if ( !unlock ) {\r\n        unlock = Data.uid++;\r\n\r\n        // Secure it in a non-enumerable, non-writable property\r\n        try {\r\n          descriptor[ this.expando ] = { value: unlock };\r\n          Object.defineProperties( owner, descriptor );\r\n\r\n          // Support: Android < 4\r\n          // Fallback to a less secure definition\r\n        } catch ( e ) {\r\n          descriptor[ this.expando ] = unlock;\r\n          $.extend( owner, descriptor );\r\n        }\r\n      }\r\n\r\n      // Ensure the cache object\r\n      if ( !this.cache[ unlock ] ) {\r\n        this.cache[ unlock ] = {};\r\n      }\r\n\r\n      return unlock;\r\n    },\r\n    set: function( owner, data, value ) {\r\n      var prop,\r\n      // There may be an unlock assigned to this node,\r\n      // if there is no entry for this \"owner\", create one inline\r\n      // and set the unlock as though an owner entry had always existed\r\n          unlock = this.key( owner ),\r\n          cache = this.cache[ unlock ];\r\n\r\n      // Handle: [ owner, key, value ] args\r\n      if ( typeof data === \"string\" ) {\r\n        cache[ data ] = value;\r\n\r\n        // Handle: [ owner, { properties } ] args\r\n      } else {\r\n        // Fresh assignments by object are shallow copied\r\n        if ( $.isEmptyObject( cache ) ) {\r\n          $.extend( this.cache[ unlock ], data );\r\n          // Otherwise, copy the properties one-by-one to the cache object\r\n        } else {\r\n          for ( prop in data ) {\r\n            cache[ prop ] = data[ prop ];\r\n          }\r\n        }\r\n      }\r\n      return cache;\r\n    },\r\n    get: function( owner, key ) {\r\n      // Either a valid cache is found, or will be created.\r\n      // New caches will be created and the unlock returned,\r\n      // allowing direct access to the newly created\r\n      // empty data object. A valid owner object must be provided.\r\n      var cache = this.cache[ this.key( owner ) ];\r\n\r\n      return key === undefined ?\r\n          cache : cache[ key ];\r\n    },\r\n    access: function( owner, key, value ) {\r\n      var stored;\r\n      // In cases where either:\r\n      //\r\n      //   1. No key was specified\r\n      //   2. A string key was specified, but no value provided\r\n      //\r\n      // Take the \"read\" path and allow the get method to determine\r\n      // which value to return, respectively either:\r\n      //\r\n      //   1. The entire cache object\r\n      //   2. The data stored at the key\r\n      //\r\n      if ( key === undefined ||\r\n          ((key && typeof key === \"string\") && value === undefined) ) {\r\n\r\n        stored = this.get( owner, key );\r\n\r\n        return stored !== undefined ?\r\n            stored : this.get( owner, $.camelCase(key) );\r\n      }\r\n\r\n      // [*]When the key is not a string, or both a key and value\r\n      // are specified, set or extend (existing objects) with either:\r\n      //\r\n      //   1. An object of properties\r\n      //   2. A key and value\r\n      //\r\n      this.set( owner, key, value );\r\n\r\n      // Since the \"set\" path can have two possible entry points\r\n      // return the expected data based on which path was taken[*]\r\n      return value !== undefined ? value : key;\r\n    },\r\n    remove: function( owner, key ) {\r\n      var i, name, camel,\r\n          unlock = this.key( owner ),\r\n          cache = this.cache[ unlock ];\r\n\r\n      if ( key === undefined ) {\r\n        this.cache[ unlock ] = {};\r\n\r\n      } else {\r\n        // Support array or space separated string of keys\r\n        if ( $.isArray( key ) ) {\r\n          // If \"name\" is an array of keys...\r\n          // When data is initially created, via (\"key\", \"val\") signature,\r\n          // keys will be converted to camelCase.\r\n          // Since there is no way to tell _how_ a key was added, remove\r\n          // both plain key and camelCase key. #12786\r\n          // This will only penalize the array argument path.\r\n          name = key.concat( key.map( $.camelCase ) );\r\n        } else {\r\n          camel = $.camelCase( key );\r\n          // Try the string as a key before any manipulation\r\n          if ( key in cache ) {\r\n            name = [ key, camel ];\r\n          } else {\r\n            // If a key with the spaces exists, use it.\r\n            // Otherwise, create an array by matching non-whitespace\r\n            name = camel;\r\n            name = name in cache ?\r\n                [ name ] : ( name.match( core_rnotwhite ) || [] );\r\n          }\r\n        }\r\n\r\n        i = name.length;\r\n        while ( i-- ) {\r\n          delete cache[ name[ i ] ];\r\n        }\r\n      }\r\n    },\r\n    hasData: function( owner ) {\r\n      return !$.isEmptyObject(\r\n          this.cache[ owner[ this.expando ] ] || {}\r\n      );\r\n    },\r\n    discard: function( owner ) {\r\n      if ( owner[ this.expando ] ) {\r\n        delete this.cache[ owner[ this.expando ] ];\r\n      }\r\n    }\r\n  };\r\n\r\n  var data_priv = new Data();\r\n\r\n  $.extend($, {\r\n    queue: function( elem, type, data ) {\r\n      var queue;\r\n\r\n      if ( elem ) {\r\n        type = ( type || \"fx\" ) + \"queue\";\r\n        queue = data_priv.get( elem, type );\r\n\r\n        // Speed up dequeue by getting out quickly if this is just a lookup\r\n        if ( data ) {\r\n          if ( !queue || $.isArray( data ) ) {\r\n            queue = data_priv.access( elem, type, $.makeArray(data) );\r\n          } else {\r\n            queue.push( data );\r\n          }\r\n        }\r\n        return queue || [];\r\n      }\r\n    },\r\n\r\n    dequeue: function( elem, type ) {\r\n      type = type || \"fx\";\r\n\r\n      var queue = $.queue( elem, type ),\r\n          startLength = queue.length,\r\n          fn = queue.shift(),\r\n          hooks = $._queueHooks( elem, type ),\r\n          next = function() {\r\n            $.dequeue( elem, type );\r\n          };\r\n\r\n      // If the fx queue is dequeued, always remove the progress sentinel\r\n      if ( fn === \"inprogress\" ) {\r\n        fn = queue.shift();\r\n        startLength--;\r\n      }\r\n\r\n      if ( fn ) {\r\n\r\n        // Add a progress sentinel to prevent the fx queue from being\r\n        // automatically dequeued\r\n        if ( type === \"fx\" ) {\r\n          queue.unshift( \"inprogress\" );\r\n        }\r\n\r\n        // clear up the last queue stop function\r\n        delete hooks.stop;\r\n        fn.call( elem, next, hooks );\r\n      }\r\n\r\n      if ( !startLength && hooks ) {\r\n        hooks.empty.fire();\r\n      }\r\n    },\r\n\r\n    // not intended for public consumption - generates a queueHooks object, or returns the current one\r\n    _queueHooks: function( elem, type ) {\r\n      var key = type + \"queueHooks\";\r\n      return data_priv.get( elem, key ) || data_priv.access( elem, key, {\r\n        empty: $.Callbacks(\"once memory\").add(function() {\r\n          data_priv.remove( elem, [ type + \"queue\", key ] );\r\n        })\r\n      });\r\n    },\r\n\r\n    // array operations\r\n    makeArray: function( arr, results ) {\r\n      var ret = results || [];\r\n\r\n      if ( arr != null ) {\r\n        if ( isArraylike( Object(arr) ) ) {\r\n          $.merge( ret,\r\n              typeof arr === \"string\" ?\r\n                  [ arr ] : arr\r\n          );\r\n        } else {\r\n          core_push.call( ret, arr );\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    },\r\n    merge: function( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n  });\r\n\r\n  $.extend($.fn, {\r\n    queue: function( type, data ) {\r\n      var setter = 2;\r\n\r\n      if ( typeof type !== \"string\" ) {\r\n        data = type;\r\n        type = \"fx\";\r\n        setter--;\r\n      }\r\n\r\n      if ( arguments.length < setter ) {\r\n        return $.queue( this[0], type );\r\n      }\r\n\r\n      return data === undefined ?\r\n          this :\r\n          this.each(function() {\r\n            var queue = $.queue( this, type, data );\r\n\r\n            // ensure a hooks for this queue\r\n            $._queueHooks( this, type );\r\n\r\n            if ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\r\n              $.dequeue( this, type );\r\n            }\r\n          });\r\n    },\r\n    dequeue: function( type ) {\r\n      return this.each(function() {\r\n        $.dequeue( this, type );\r\n      });\r\n    },\r\n    // Based off of the plugin by Clint Helfers, with permission.\r\n    // http://blindsignals.com/index.php/2009/07/jquery-delay/\r\n    delay: function( time, type ) {\r\n      time = $.fx ? $.fx.speeds[ time ] || time : time;\r\n      type = type || \"fx\";\r\n\r\n      return this.queue( type, function( next, hooks ) {\r\n        var timeout = setTimeout( next, time );\r\n        hooks.stop = function() {\r\n          clearTimeout( timeout );\r\n        };\r\n      });\r\n    },\r\n    clearQueue: function( type ) {\r\n      return this.queue( type || \"fx\", [] );\r\n    },\r\n    // Get a promise resolved when queues of a certain type\r\n    // are emptied (fx is the type by default)\r\n    promise: function( type, obj ) {\r\n      var tmp,\r\n          count = 1,\r\n          defer = $.Deferred(),\r\n          elements = this,\r\n          i = this.length,\r\n          resolve = function() {\r\n            if ( !( --count ) ) {\r\n              defer.resolveWith( elements, [ elements ] );\r\n            }\r\n          };\r\n\r\n      if ( typeof type !== \"string\" ) {\r\n        obj = type;\r\n        type = undefined;\r\n      }\r\n      type = type || \"fx\";\r\n\r\n      while( i-- ) {\r\n        tmp = data_priv.get( elements[ i ], type + \"queueHooks\" );\r\n        if ( tmp && tmp.empty ) {\r\n          count++;\r\n          tmp.empty.add( resolve );\r\n        }\r\n      }\r\n      resolve();\r\n      return defer.promise( obj );\r\n    }\r\n  });\r\n\r\n  return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/JqueryPlugin',[\r\n\t\"skylark-langx/types\",\r\n\t\"skylark-langx/objects\",\r\n\t\"skylark-langx/arrays\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-utils-dom/datax\",\r\n\t\"skylark-utils-dom/eventer\",\r\n\t\"skylark-utils-dom/plugins\",\r\n\t\"skylark-utils-dom/query\",\r\n],function(types, objects, arrays, langx, datax, eventer, plugins, $){\r\n\r\n    var pluginUuid = 0;\r\n\r\n\tvar JqPlugin = plugins.Plugin.inherit({\r\n\t\tklassName : \"JqPlugin\",\r\n\r\n        pluginEventPrefix: \"\",\r\n\r\n        options: {\r\n            // Callbacks\r\n            create: null\r\n        },\r\n\r\n        destroy: function() {\r\n            this.overrided();\r\n\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            this.element\r\n                .off( this.eventNamespace );\r\n\r\n            // Clean up events and states\r\n            this.bindings.off( this.eventNamespace );\r\n        },\r\n\r\n        _construct : function(element,options) {\r\n            //this.options = langx.mixin( {}, this.options );\r\n\r\n            element = $( element || this.defaultElement || this )[ 0 ];\r\n\r\n            this.overrided(element,options);\r\n            \r\n            this.element = $( element );\r\n            this.uuid = pluginUuid++;\r\n            this.eventNamespace = \".\" + this.pluginName + this.uuid;\r\n\r\n            this.bindings = $();\r\n            this.classesElementLookup = {};\r\n\r\n\t\t\tthis.hoverable = $();\r\n\t\t\tthis.focusable = $();\r\n\r\n            if ( element !== this ) {\r\n                datax.data( element, this.pluginName, this );\r\n                this._on( true, this.element, {\r\n                    remove: function( event ) {\r\n                        if ( event.target === element ) {\r\n                            this.destroy();\r\n                        }\r\n                    }\r\n                } );\r\n                this.document = $( element.style ?\r\n\r\n                    // Element within the document\r\n                    element.ownerDocument :\r\n\r\n                    // Element is window or document\r\n                    element.document || element );\r\n                this.window = $( this.document[ 0 ].defaultView || this.document[ 0 ].parentWindow );\r\n            }\r\n\r\n//            this.options = langx.mixin( {},\r\n//                this.options,\r\n//                this._getCreateOptions(),\r\n//                options );\r\n\r\n            this._create();\r\n\r\n            this._trigger( \"create\", null, this._getCreateEventData() );\r\n\r\n            this._init();\r\n        },\r\n\r\n//        _getCreateOptions: function() {\r\n//            return {};\r\n//        },\r\n\r\n        _getCreateEventData: langx.noop,\r\n\r\n        _create: langx.noop,\r\n\r\n        _init: langx.noop,\r\n\r\n\t\t_classes: function( options ) {\r\n\t\t\tvar full = [];\r\n\t\t\tvar that = this;\r\n\r\n\t\t\toptions = objects.mixin( {\r\n\t\t\t\telement: this.element,\r\n\t\t\t\tclasses: this.options.classes || {}\r\n\t\t\t}, options );\r\n\r\n\r\n\t\t\tfunction bindRemoveEvent() {\r\n\t\t\t\toptions.element.each( function( _, element ) {\r\n\t\t\t\t\tvar isTracked = langx.map( that.classesElementLookup, function( elements ) {\r\n\t\t\t\t\t\treturn elements;\r\n\t\t\t\t\t} )\r\n\t\t\t\t\t\t.some( function(elements ) {\r\n\t\t\t\t\t\t\treturn $(elements).is( element );\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tif ( !isTracked ) {\r\n\t\t\t\t\t\tthat._on( $( element ), {\r\n\t\t\t\t\t\t\tremove: \"_untrackClassesElement\"\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\tfunction processClassString( classes, checkOption ) {\r\n\t\t\t\tvar current, i;\r\n\t\t\t\tfor ( i = 0; i < classes.length; i++ ) {\r\n\t\t\t\t\tcurrent = that.classesElementLookup[ classes[ i ] ] || $();\r\n\t\t\t\t\tif ( options.add ) {\r\n\t\t\t\t\t\tbindRemoveEvent();\r\n\t\t\t\t\t\tcurrent = $( langx.uniq( current.get().concat( options.element.get() ) ) );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcurrent = $( current.not( options.element ).get() );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthat.classesElementLookup[ classes[ i ] ] = current;\r\n\t\t\t\t\tfull.push( classes[ i ] );\r\n\t\t\t\t\tif ( checkOption && options.classes[ classes[ i ] ] ) {\r\n\t\t\t\t\t\tfull.push( options.classes[ classes[ i ] ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( options.keys ) {\r\n\t\t\t\tprocessClassString( options.keys.match( /\\S+/g ) || [], true );\r\n\t\t\t}\r\n\t\t\tif ( options.extra ) {\r\n\t\t\t\tprocessClassString( options.extra.match( /\\S+/g ) || [] );\r\n\t\t\t}\r\n\r\n\t\t\treturn full.join( \" \" );\r\n\t\t},\r\n\r\n\t\t_untrackClassesElement: function( event ) {\r\n\t\t\tvar that = this;\r\n\t\t\tlangx.each( that.classesElementLookup, function( key, value ) {\r\n\t\t\t\tif ( arrays.inArray( event.target, value ) !== -1 ) {\r\n\t\t\t\t\tthat.classesElementLookup[ key ] = $( value.not( event.target ).get() );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tthis._off( $( event.target ) );\r\n\t\t},\r\n\r\n\t\t_removeClass: function( element, keys, extra ) {\r\n\t\t\treturn this._toggleClass( element, keys, extra, false );\r\n\t\t},\r\n\r\n\t\t_addClass: function( element, keys, extra ) {\r\n\t\t\treturn this._toggleClass( element, keys, extra, true );\r\n\t\t},\r\n\r\n\t\t_toggleClass: function( element, keys, extra, add ) {\r\n\t\t\tadd = ( typeof add === \"boolean\" ) ? add : extra;\r\n\t\t\tvar shift = ( typeof element === \"string\" || element === null ),\r\n\t\t\t\toptions = {\r\n\t\t\t\t\textra: shift ? keys : extra,\r\n\t\t\t\t\tkeys: shift ? element : keys,\r\n\t\t\t\t\telement: shift ? this.element : element,\r\n\t\t\t\t\tadd: add\r\n\t\t\t\t};\r\n\t\t\toptions.element.toggleClass( this._classes( options ), add );\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t_on: function( suppressDisabledCheck, element, handlers ) {\r\n\t\t\tvar delegateElement;\r\n\t\t\tvar instance = this;\r\n\r\n\t\t\t// No suppressDisabledCheck flag, shuffle arguments\r\n\t\t\tif ( typeof suppressDisabledCheck !== \"boolean\" ) {\r\n\t\t\t\thandlers = element;\r\n\t\t\t\telement = suppressDisabledCheck;\r\n\t\t\t\tsuppressDisabledCheck = false;\r\n\t\t\t}\r\n\r\n\t\t\t// No element argument, shuffle and use this.element\r\n\t\t\tif ( !handlers ) {\r\n\t\t\t\thandlers = element;\r\n\t\t\t\telement = this.element;\r\n\t\t\t\tdelegateElement = this.widget();\r\n\t\t\t} else {\r\n\t\t\t\telement = delegateElement = $( element );\r\n\t\t\t\tthis.bindings = this.bindings.add( element );\r\n\t\t\t}\r\n\r\n\t\t\tobjects.each( handlers, function( event, handler ) {\r\n\t\t\t\tfunction handlerProxy() {\r\n\r\n\t\t\t\t\t// Allow widgets to customize the disabled handling\r\n\t\t\t\t\t// - disabled as an array instead of boolean\r\n\t\t\t\t\t// - disabled class as method for disabling individual parts\r\n\t\t\t\t\tif ( !suppressDisabledCheck &&\r\n\t\t\t\t\t\t\t( instance.options.disabled === true ||\r\n\t\t\t\t\t\t\t$( this ).hasClass( \"ui-state-disabled\" ) ) ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n\t\t\t\t\t\t.apply( instance, arguments );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Copy the guid so direct unbinding works\r\n\t\t\t\tif ( typeof handler !== \"string\" ) {\r\n\t\t\t\t\thandlerProxy.guid = handler.guid =\r\n\t\t\t\t\t\thandler.guid || handlerProxy.guid || $.guid++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar match = event.match( /^([\\w:-]*)\\s*(.*)$/ );\r\n\t\t\t\tvar eventName = match[ 1 ] + instance.eventNamespace;\r\n\t\t\t\tvar selector = match[ 2 ];\r\n\r\n\t\t\t\tif ( selector ) {\r\n\t\t\t\t\tdelegateElement.on( eventName, selector, handlerProxy );\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.on( eventName, handlerProxy );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t},\r\n\r\n\t\t_off: function( element, eventName ) {\r\n\t\t\teventName = ( eventName || \"\" ).split( \" \" ).join( this.eventNamespace + \" \" ) +\r\n\t\t\t\tthis.eventNamespace;\r\n\t\t\telement.off( eventName );\r\n\r\n\t\t\t// Clear the stack to avoid memory leaks (#10056)\r\n\t\t\tthis.bindings = $( this.bindings.not( element ).get() );\r\n\t\t\tthis.focusable = $( this.focusable.not( element ).get() );\r\n\t\t\tthis.hoverable = $( this.hoverable.not( element ).get() );\r\n\t\t},\r\n\r\n\t\t_trigger: function( type, event, data ) {\r\n\t\t\tvar prop, orig;\r\n\t\t\tvar callback = this.options[ type ];\r\n\r\n\t\t\tdata = data || {};\r\n\t\t\tevent = eventer.proxy( event );\r\n\t\t\tevent.type = ( type === this.widgetEventPrefix ?\r\n\t\t\t\ttype :\r\n\t\t\t\tthis.widgetEventPrefix + type ).toLowerCase();\r\n\r\n\t\t\t// The original event may come from any element\r\n\t\t\t// so we need to reset the target on the new event\r\n\t\t\tevent.target = this.element[ 0 ];\r\n\r\n\t\t\t// Copy original event properties over to the new event\r\n\t\t\torig = event.originalEvent;\r\n\t\t\tif ( orig ) {\r\n\t\t\t\tfor ( prop in orig ) {\r\n\t\t\t\t\tif ( !( prop in event ) ) {\r\n\t\t\t\t\t\tevent[ prop ] = orig[ prop ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.element.trigger( event, data );\r\n\t\t\treturn !( types.isFunction( callback ) &&\r\n\t\t\t\tcallback.apply( this.element[ 0 ], [ event ].concat( data ) ) === false ||\r\n\t\t\t\tevent.isDefaultPrevented() );\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn JqPlugin;\r\n});\n/*!\r\n * jQuery UI Widget @VERSION\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Widget\r\n//>>group: Core\r\n//>>description: Provides a factory for creating stateful widgets with a common API.\r\n//>>docs: http://api.jqueryui.com/jQuery.widget/\r\n//>>demos: http://jqueryui.com/widget/\r\n\r\ndefine( 'skylark-jquery/widget',[ \r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-utils-dom/plugins\",\r\n\t\"./core\",\r\n\t\"./JqueryPlugin\"\r\n],  function(langx,splugins, $,JqPlugin ) {\r\n\r\n\tvar widgetUuid = 0;\r\n\tvar widgetHasOwnProperty = Array.prototype.hasOwnProperty;\r\n\tvar widgetSlice = Array.prototype.slice;\r\n\r\n\t$.cleanData = ( function( orig ) {\r\n\t\treturn function( elems ) {\r\n\t\t\tvar events, elem, i;\r\n\t\t\tfor ( i = 0; ( elem = elems[ i ] ) != null; i++ ) {\r\n\r\n\t\t\t\t// Only trigger remove when necessary to save time\r\n\t\t\t\tevents = $._data( elem, \"events\" );\r\n\t\t\t\tif ( events && events.remove ) {\r\n\t\t\t\t\t$( elem ).triggerHandler( \"remove\" );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\torig( elems );\r\n\t\t};\r\n\t} )( $.cleanData );\r\n\t\r\n\t$.widget = function( name, base, prototype ) {\r\n\t\tvar existingConstructor, constructor, basePrototype;\r\n\r\n\t\t// ProxiedPrototype allows the provided prototype to remain unmodified\r\n\t\t// so that it can be used as a mixin for multiple widgets (#8876)\r\n\t\tvar proxiedPrototype = {};\r\n\r\n\t\tvar namespace = name.split( \".\" )[ 0 ];\r\n\t\tname = name.split( \".\" )[ 1 ];\r\n\t\tvar fullName = namespace + \"-\" + name;\r\n\r\n\t\tif ( !prototype ) {\r\n\t\t\tprototype = base;\r\n\t\t\tbase = $.Widget;\r\n\t\t}\r\n\r\n\t\tif ( $.isArray( prototype ) ) {\r\n\t\t\tprototype = $.extend.apply( null, [ {} ].concat( prototype ) );\r\n\t\t}\r\n\r\n\t\t// Create selector for plugin\r\n\t\t$.expr.pseudos[ fullName.toLowerCase() ] = function( elem ) {\r\n\t\t\treturn !!$.data( elem, fullName );\r\n\t\t};\r\n\r\n\t\t$[ namespace ] = $[ namespace ] || {};\r\n\r\n\t\texistingConstructor = $[ namespace ][ name ];\r\n\r\n\t\tvar basePrototype = base.prototype,\r\n\t\t\tnewPrototype = {};\r\n\r\n\t\tfor (var key in prototype) {\r\n\t\t\tvar value = prototype[key];\r\n\r\n\t\t\tif ( $.isPlainObject( value ) ) {\r\n\t\t\t\tnewPrototype[ key ] = $.isPlainObject( basePrototype[ key ] ) ?\r\n\t\t\t\t\t$.widget.extend( {}, basePrototype[ key ], value ) :\r\n\r\n\t\t\t\t\t// Don't extend strings, arrays, etc. with objects\r\n\t\t\t\t\t$.widget.extend( {}, value );\r\n\t\t\t} else {\r\n\t\t\t\tnewPrototype[key] = value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar _proto = $.widget.extend({\r\n\r\n\t\t\t// TODO: remove support for widgetEventPrefix\r\n\t\t\t// always use the name + a colon as the prefix, e.g., draggable:start\r\n\t\t\t// don't prefix for widgets that aren't DOM-based\r\n\t\t\twidgetEventPrefix: existingConstructor ? ( base.prototype.widgetEventPrefix || name ) : name\r\n\t\t}, {\r\n\t\t\toptions : base.prototype.options\r\n\t\t},newPrototype, {\r\n\t\t\tname : fullName,\r\n\t\t\tnamespace: namespace,\r\n\t\t\twidgetName: name,\r\n\t\t\tpluginName : \"jqueryui.\" + (namespace ? namespace + \".\" : \"\") + name,\r\n\t\t\twidgetFullName: fullName\r\n\t\t} );\r\n\r\n\t\tconstructor = $[ namespace ][ name ] = base.inherit(_proto);\r\n\t\t/*\r\n\r\n\t\tconstructor = $[ namespace ][ name ] = function( options, element ) {\r\n\r\n\t\t\t// Allow instantiation without \"new\" keyword\r\n\t\t\tif ( !this._createWidget ) {\r\n\t\t\t\treturn new constructor( options, element );\r\n\t\t\t}\r\n\r\n\t\t\t// Allow instantiation without initializing for simple inheritance\r\n\t\t\t// must use \"new\" keyword (the code above always passes args)\r\n\t\t\tif ( arguments.length ) {\r\n\t\t\t\tthis._createWidget( options, element );\r\n\t\t\t}\r\n\t\t};\r\n\t\t*/\r\n\t\t// Extend with the existing constructor to carry over any static properties\r\n\t\t$.extend( constructor, existingConstructor, {\r\n\t\t\tversion: prototype.version,\r\n\r\n\t\t\t// Copy the object used to create the prototype in case we need to\r\n\t\t\t// redefine the widget later\r\n\t\t\t_proto: _proto,\r\n\r\n\t\t\t// Track widgets that inherit from this widget in case this widget is\r\n\t\t\t// redefined after a widget inherits from it\r\n\t\t\t_childConstructors: []\r\n\t\t} );\r\n\r\n\t\t/*\r\n\t\tbasePrototype = new base();\r\n\r\n\t\t// We need to make the options hash a property directly on the new instance\r\n\t\t// otherwise we'll modify the options hash on the prototype that we're\r\n\t\t// inheriting from\r\n\t\tbasePrototype.options = $.widget.extend( {}, basePrototype.options );\r\n\t\t$.each( prototype, function( prop, value ) {\r\n\t\t\tif ( !$.isFunction( value ) ) {\r\n\t\t\t\tproxiedPrototype[ prop ] = value;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tproxiedPrototype[ prop ] = ( function() {\r\n\t\t\t\tfunction _super() {\r\n\t\t\t\t\treturn base.prototype[ prop ].apply( this, arguments );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction _superApply( args ) {\r\n\t\t\t\t\treturn base.prototype[ prop ].apply( this, args );\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tvar __super = this._super;\r\n\t\t\t\t\tvar __superApply = this._superApply;\r\n\t\t\t\t\tvar returnValue;\r\n\r\n\t\t\t\t\tthis._super = _super;\r\n\t\t\t\t\tthis._superApply = _superApply;\r\n\r\n\t\t\t\t\treturnValue = value.apply( this, arguments );\r\n\r\n\t\t\t\t\tthis._super = __super;\r\n\t\t\t\t\tthis._superApply = __superApply;\r\n\r\n\t\t\t\t\treturn returnValue;\r\n\t\t\t\t};\r\n\t\t\t} )();\r\n\t\t} );\r\n\t\tconstructor.prototype = $.widget.extend( basePrototype, {\r\n\r\n\t\t\t// TODO: remove support for widgetEventPrefix\r\n\t\t\t// always use the name + a colon as the prefix, e.g., draggable:start\r\n\t\t\t// don't prefix for widgets that aren't DOM-based\r\n\t\t\twidgetEventPrefix: existingConstructor ? ( basePrototype.widgetEventPrefix || name ) : name\r\n\t\t}, proxiedPrototype, {\r\n\t\t\tconstructor: constructor,\r\n\t\t\tnamespace: namespace,\r\n\t\t\twidgetName: name,\r\n\t\t\twidgetFullName: fullName\r\n\t\t} );\r\n\t\t*/\r\n\t\t// If this widget is being redefined then we need to find all widgets that\r\n\t\t// are inheriting from it and redefine all of them so that they inherit from\r\n\t\t// the new version of this widget. We're essentially trying to replace one\r\n\t\t// level in the prototype chain.\r\n\t\tif ( existingConstructor ) {\r\n\t\t\t$.each( existingConstructor._childConstructors, function( i, child ) {\r\n\t\t\t\tvar childPrototype = child.prototype;\r\n\r\n\t\t\t\t// Redefine the child widget using the same prototype that was\r\n\t\t\t\t// originally used, but inherit from the new version of the base\r\n\t\t\t\t$.widget( childPrototype.namespace + \".\" + childPrototype.widgetName, constructor,\r\n\t\t\t\t\tchild._proto );\r\n\t\t\t} );\r\n\r\n\t\t\t// Remove the list of existing child constructors from the old constructor\r\n\t\t\t// so the old child constructors can be garbage collected\r\n\t\t\tdelete existingConstructor._childConstructors;\r\n\t\t} else {\r\n\t\t\tif (base._childConstructors) {\r\n\t\t\t\tbase._childConstructors.push( constructor );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//$.widget.bridge( name, constructor );\r\n\r\n\t\tsplugins.register(constructor,name,fullName);\r\n\r\n\t\treturn constructor;\r\n\t};\r\n\r\n\t$.widget.extend = function( target ) {\r\n\t\tvar input = widgetSlice.call( arguments, 1 );\r\n\t\tvar inputIndex = 0;\r\n\t\tvar inputLength = input.length;\r\n\t\tvar key;\r\n\t\tvar value;\r\n\r\n\t\tfor ( ; inputIndex < inputLength; inputIndex++ ) {\r\n\t\t\tfor ( key in input[ inputIndex ] ) {\r\n\t\t\t\tvalue = input[ inputIndex ][ key ];\r\n\t\t\t\tif ( widgetHasOwnProperty.call( input[ inputIndex ], key ) && value !== undefined ) {\r\n\r\n\t\t\t\t\t// Clone objects\r\n\t\t\t\t\tif ( $.isPlainObject( value ) ) {\r\n\t\t\t\t\t\ttarget[ key ] = $.isPlainObject( target[ key ] ) ?\r\n\t\t\t\t\t\t\t$.widget.extend( {}, target[ key ], value ) :\r\n\r\n\t\t\t\t\t\t\t// Don't extend strings, arrays, etc. with objects\r\n\t\t\t\t\t\t\t$.widget.extend( {}, value );\r\n\r\n\t\t\t\t\t// Copy everything else by reference\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttarget[ key ] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\r\n\t$.Widget = \t JqPlugin.inherit({\r\n\t\twidgetName: \"widget\",\r\n\t\twidgetEventPrefix: \"\",\r\n\t\tdefaultElement: \"<div>\",\r\n\r\n\t\toptions: {\r\n\t\t\tclasses: {},\r\n\t\t\tdisabled: false,\r\n\r\n\t\t\t// Callbacks\r\n\t\t\tcreate: null\r\n\t\t},\r\n\r\n\t     _initOptions : function(options) {\r\n\t     \toptions = langx.mixin(this._createOptions(),options);\r\n\r\n\t\t\tthis.overrided(options);\r\n\t\t},\r\n\r\n\t\t_createOptions : function() {\r\n\t\t\treturn {};\r\n\t\t},\r\n\r\n\t\t_super : function() {\r\n\t\t\tif (this.overrided) {\r\n\t\t\t\treturn this.overrided.apply(this,arguments);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_superApply : function ( args ) {\r\n\t\t\tif (this.overrided) {\r\n\t\t\t\treturn this.overrided.apply(this,args);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\twidget: function() {\r\n\t\t\treturn this.element;\r\n\t\t},\r\n\r\n\r\n\t\t_setOption: function( key, value ) {\r\n\t\t\tif ( key === \"classes\" ) {\r\n\t\t\t\tthis._setOptionClasses( value );\r\n\t\t\t}\r\n\r\n\t\t\tthis.options[ key ] = value;\r\n\r\n\t\t\tif ( key === \"disabled\" ) {\r\n\t\t\t\tthis._setOptionDisabled( value );\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t_setOptionClasses: function( value ) {\r\n\t\t\tvar classKey, elements, currentElements;\r\n\r\n\t\t\tfor ( classKey in value ) {\r\n\t\t\t\tcurrentElements = this.classesElementLookup[ classKey ];\r\n\t\t\t\tif ( value[ classKey ] === this.options.classes[ classKey ] ||\r\n\t\t\t\t\t\t!currentElements ||\r\n\t\t\t\t\t\t!currentElements.length ) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// We are doing this to create a new jQuery object because the _removeClass() call\r\n\t\t\t\t// on the next line is going to destroy the reference to the current elements being\r\n\t\t\t\t// tracked. We need to save a copy of this collection so that we can add the new classes\r\n\t\t\t\t// below.\r\n\t\t\t\telements = $( currentElements.get() );\r\n\t\t\t\tthis._removeClass( currentElements, classKey );\r\n\r\n\t\t\t\t// We don't use _addClass() here, because that uses this.options.classes\r\n\t\t\t\t// for generating the string of classes. We want to use the value passed in from\r\n\t\t\t\t// _setOption(), this is the new value of the classes option which was passed to\r\n\t\t\t\t// _setOption(). We pass this value directly to _classes().\r\n\t\t\t\telements.addClass( this._classes( {\r\n\t\t\t\t\telement: elements,\r\n\t\t\t\t\tkeys: classKey,\r\n\t\t\t\t\tclasses: value,\r\n\t\t\t\t\tadd: true\r\n\t\t\t\t} ));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setOptionDisabled: function( value ) {\r\n\t\t\tthis._toggleClass( this.widget(), this.widgetFullName + \"-disabled\", null, !!value );\r\n\r\n\t\t\t// If the widget is becoming disabled, then nothing is interactive\r\n\t\t\tif ( value ) {\r\n\t\t\t\tthis._removeClass( this.hoverable, null, \"ui-state-hover\" );\r\n\t\t\t\tthis._removeClass( this.focusable, null, \"ui-state-focus\" );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tenable: function() {\r\n\t\t\treturn this._setOptions( { disabled: false } );\r\n\t\t},\r\n\r\n\t\tdisable: function() {\r\n\t\t\treturn this._setOptions( { disabled: true } );\r\n\t\t},\r\n\r\n\r\n\t\t_delay: function( handler, delay ) {\r\n\t\t\tfunction handlerProxy() {\r\n\t\t\t\treturn ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n\t\t\t\t\t.apply( instance, arguments );\r\n\t\t\t}\r\n\t\t\tvar instance = this;\r\n\t\t\treturn setTimeout( handlerProxy, delay || 0 );\r\n\t\t},\r\n\r\n\t\t_hoverable: function( element ) {\r\n\t\t\tthis.hoverable = this.hoverable.add( element );\r\n\t\t\tthis._on( element, {\r\n\t\t\t\tmouseenter: function( event ) {\r\n\t\t\t\t\tthis._addClass( $( event.currentTarget ), null, \"ui-state-hover\" );\r\n\t\t\t\t},\r\n\t\t\t\tmouseleave: function( event ) {\r\n\t\t\t\t\tthis._removeClass( $( event.currentTarget ), null, \"ui-state-hover\" );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t},\r\n\r\n\t\t_focusable: function( element ) {\r\n\t\t\tthis.focusable = this.focusable.add( element );\r\n\t\t\tthis._on( element, {\r\n\t\t\t\tfocusin: function( event ) {\r\n\t\t\t\t\tthis._addClass( $( event.currentTarget ), null, \"ui-state-focus\" );\r\n\t\t\t\t},\r\n\t\t\t\tfocusout: function( event ) {\r\n\t\t\t\t\tthis._removeClass( $( event.currentTarget ), null, \"ui-state-focus\" );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t});\r\n\r\n\t$.Widget._childConstructors = [];\r\n\r\n\t$.each( { show: \"fadeIn\", hide: \"fadeOut\" }, function( method, defaultEffect ) {\r\n\t\t$.Widget.prototype[ \"_\" + method ] = function( element, options, callback ) {\r\n\t\t\tif ( typeof options === \"string\" ) {\r\n\t\t\t\toptions = { effect: options };\r\n\t\t\t}\r\n\r\n\t\t\tvar hasOptions;\r\n\t\t\tvar effectName = !options ?\r\n\t\t\t\tmethod :\r\n\t\t\t\toptions === true || typeof options === \"number\" ?\r\n\t\t\t\t\tdefaultEffect :\r\n\t\t\t\t\toptions.effect || defaultEffect;\r\n\r\n\t\t\toptions = options || {};\r\n\t\t\tif ( typeof options === \"number\" ) {\r\n\t\t\t\toptions = { duration: options };\r\n\t\t\t}\r\n\r\n\t\t\thasOptions = !$.isEmptyObject( options );\r\n\t\t\toptions.complete = callback;\r\n\r\n\t\t\tif ( options.delay ) {\r\n\t\t\t\telement.delay( options.delay );\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasOptions && $.effects && $.effects.effect[ effectName ] ) {\r\n\t\t\t\telement[ method ]( options );\r\n\t\t\t} else if ( effectName !== method && element[ effectName ] ) {\r\n\t\t\t\telement[ effectName ]( options.duration, options.easing, callback );\r\n\t\t\t} else {\r\n\t\t\t\telement.queue( function( next ) {\r\n\t\t\t\t\t$( this )[ method ]();\r\n\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\tcallback.call( element[ 0 ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnext();\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t};\r\n\t} );\r\n\r\n\treturn $.widget;\r\n\r\n});\r\n\ndefine('skylark-jquery/main',[\r\n    \"./core\",\r\n    \"./ajax\",\r\n    \"./callbacks\",\r\n    \"./deferred\",\r\n    \"./queue\",\r\n    \"./JqueryPlugin\",\r\n    \"./widget\"\r\n], function($) {\r\n    return $;\r\n});\r\n\ndefine('skylark-jquery', ['skylark-jquery/main'], function (main) { return main; });\n\n"]}