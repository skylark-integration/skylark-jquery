{"version":3,"sources":["skylark-jquery.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","get","context","relMap","localRequire","intakeDefines","defined","jQuery","$","skylark","browser","langx","noder","datax","eventer","finder","fx","styler","query","filter","Array","prototype","slice","fn","jquery","camelCase","cleanData","elems","elem","undefined","each","extend","target","deep","call","arguments","shift","this","arg","mixin","grep","elements","callback","isArray","isEmptyObject","isFunction","isWindow","isPlainObject","inArray","makeArray","noop","parseJSON","JSON","parse","proxy","trim","type","props","serializeArray","name","result","add","value","_","field","nodeName","toLowerCase","disabled","checked","val","serialize","elm","encodeURIComponent","Event","src","isString","create","event","special","submit","bind","eq","trigger","isDefaultPrevented","triggerHandler","delegate","selector","on","undelegate","off","live","document","body","die","data","unbind","ready","stop","moveto","x","y","animate","left","top","uuid","support","expr","pseudos","filters","createPseudo","cssHooks","contains","css","step","easing","offset","setOffset","options","position","style","curTop","curLeft","curElem","curOffset","curCSSTop","curCSSLeft","calculatePosition","curPosition","parseFloat","using","parseHTML","html","createFragment","unique","uniq","Deferred","func","tuples","Callbacks","once","memory","state","promise","always","deferred","done","fail","then","fns","defer","tuple","returned","resolve","reject","progress","notify","values","obj","pipe","list","stateString","disable","lock","fireWith","when","sub","progressValues","progressContexts","resolveContexts","resolveValues","len","remain","updateFn","ctx","notifyWith","resolveWith","triggerAndReturn","eventName","triggerGlobal","settings","global","ajaxStart","active","ajaxStop","ajaxBeforeSend","xhr","beforeSend","ajaxSuccess","status","success","ajaxComplete","ajaxError","error","rejectWith","complete","empty","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","test","xmlTypeRE","appendQuery","url","replace","serializeData","processData","param","traditional","toUpperCase","parseArguments","dataType","params","scope","array","hash","key","addToPrefiltersOrTransports","structure","dataTypeExpression","dataTypes","match","rnotwhite","unshift","ajaxExtend","flatOptions","ajaxSettings","jsonpID","rscript","blankRE","originAnchor","createElement","href","location","ajaxJSONP","ajax","responseData","abortTimeout","_callbackName","jsonpCallback","callbackName","script","originalCallback","abort","errorType","e","clearTimeout","remove","head","appendChild","timeout","setTimeout","XMLHttpRequest","accepts","json","xml","text","crossDomain","cache","urlAnchor","protocol","host","toString","hasPlaceholder","Date","now","jsonp","headers","setHeader","RegExp","$1","nativeSetHeader","setRequestHeader","mimeType","indexOf","overrideMimeType","contentType","onreadystatechange","readyState","getResponseHeader","responseText","eval","responseXML","statusText","xhrFields","async","open","username","password","send","post","getJSON","load","self","response","find","escape","prefilters","transports","ajaxPrefilter","ajaxTransport","ajaxSetup","fired","firing","firingStart","firingLength","firingIndex","fire","stopOnFalse","start","has","index","splice","locked","main"],"mappings":"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","file":"../skylark-jquery.js","sourcesContent":["define('skylark-jquery/core',[\r\n\t\"skylark-utils/skylark\",\r\n\t\"skylark-utils/browser\",\r\n\t\"skylark-utils/langx\",\r\n\t\"skylark-utils/noder\",\r\n\t\"skylark-utils/datax\",\r\n\t\"skylark-utils/eventer\",\r\n\t\"skylark-utils/finder\",\r\n\t\"skylark-utils/fx\",\r\n\t\"skylark-utils/styler\",\r\n\t\"skylark-utils/query\"\r\n],function(skylark,browser,langx,noder,datax,eventer,finder,fx,styler,query){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n    (function($){\r\n\t    $.fn.jquery = '2.2.0';\r\n\r\n\t    $.camelCase = langx.camelCase;\r\n\r\n\t\t$.cleanData = function( elems ) {\r\n\t\t\tvar elem,\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\r\n\t\t\t\tdatax.cleanData(elem);\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t    $.each = langx.each;\r\n\r\n\t    $.extend = function(target) {\r\n\t        var deep, args = slice.call(arguments, 1);\r\n\t        if (typeof target == 'boolean') {\r\n\t            deep = target\r\n\t            target = args.shift()\r\n\t        }\r\n\t        if (args.length == 0) {\r\n\t            args = [target];\r\n\t            target = this;\r\n\t        }\r\n\t        args.forEach(function(arg) {\r\n\t        \tlangx.mixin(target, arg, deep);\r\n\t        });\r\n\t        return target;\r\n\t    };\r\n\r\n\t    $.grep = function(elements, callback) {\r\n\t        return filter.call(elements, callback)\r\n\t    };\r\n\r\n\t    $.isArray = langx.isArray;\r\n\t    $.isEmptyObject = langx.isEmptyObject;\r\n\t    $.isFunction = langx.isFunction;\r\n\t    $.isWindow = langx.isWindow;\r\n\t    $.isPlainObject = langx.isPlainObject;\r\n\r\n\t    $.inArray = langx.inArray;\r\n\r\n\t    $.makeArray = langx.makeArray;\r\n\t    $.map = langx.map;\r\n\r\n\t    $.noop = function() {\r\n\t    };\r\n\r\n\t    $.parseJSON = window.JSON.parse;\r\n\r\n\t    $.proxy = langx.proxy;\r\n\r\n\t    $.trim = langx.trim;\r\n\t    $.type = langx.type;\r\n\r\n\t    $.fn.extend = function(props) {\r\n\t        langx.mixin($.fn, props);\r\n\t    };\r\n\r\n\t    $.fn.serializeArray = function() {\r\n\t        var name, type, result = [],\r\n\t            add = function(value) {\r\n\t                if (value.forEach) return value.forEach(add)\r\n\t                result.push({ name: name, value: value })\r\n\t            }\r\n\t        if (this[0]) langx.each(this[0].elements, function(_, field) {\r\n\t            type = field.type, name = field.name\r\n\t            if (name && field.nodeName.toLowerCase() != 'fieldset' &&\r\n\t                !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&\r\n\t                ((type != 'radio' && type != 'checkbox') || field.checked))\r\n\t                add($(field).val())\r\n\t        })\r\n\t        return result\r\n\t    };\r\n\r\n\t    $.fn.serialize = function() {\r\n\t        var result = []\r\n\t        this.serializeArray().forEach(function(elm) {\r\n\t            result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\r\n\t        })\r\n\t        return result.join('&')\r\n\t    };\r\n    })(query);\r\n\r\n    (function($){\r\n        $.Event = function Event(src, props) {\r\n            if (langx.isString(src)) {\r\n            \tvar type = src;\r\n            \treturn eventer.create(type, props);\r\n\t        }\r\n            return eventer.proxy(src, props);\r\n        };\r\n\r\n        $.event = {};\r\n\r\n\t    $.event.special = eventer.special;\r\n\r\n\t    $.fn.submit = function(callback) {\r\n\t        if (0 in arguments) this.bind('submit', callback)\r\n\t        else if (this.length) {\r\n\t            var event = $.Event('submit')\r\n\t            this.eq(0).trigger(event)\r\n\t            if (!event.isDefaultPrevented()) this.get(0).submit()\r\n\t        }\r\n\t        return this\r\n\t    };\r\n\r\n\t    // event\r\n\t    $.fn.triggerHandler = $.fn.trigger;\r\n\r\n\t    $.fn.delegate = function(selector, event, callback) {\r\n\t        return this.on(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.undelegate = function(selector, event, callback) {\r\n\t        return this.off(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.live = function(event, callback) {\r\n\t        $(document.body).delegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.die = function(event, callback) {\r\n\t        $(document.body).undelegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.bind = function(event, selector, data, callback) {\r\n\t        return this.on(event, selector, data, callback)\r\n\t    };\r\n\r\n\t    $.fn.unbind = function(event, callback) {\r\n\t        return this.off(event, callback)\r\n\t    };\r\n\r\n\t    $.fn.ready = function(callback) {\r\n\t        eventer.ready(callback);\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.stop = function() {\r\n\t        // todo\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.moveto = function(x, y) {\r\n\t        return this.animate({\r\n\t            left: x + \"px\",\r\n\t            top: y + \"px\"\r\n\t        }, 0.4);\r\n\r\n\t    };\r\n\r\n\t    $.ready = eventer.ready;\r\n\r\n\t    $.on = eventer.on;\r\n\r\n\t    $.off = eventer.off;\r\n    })(query);\r\n\r\n    (function($){\r\n\t    // plugin compatibility\r\n\t    $.uuid = 0;\r\n\t    $.support = browser.support;\r\n\t    $.expr = {};\r\n\r\n\t    $.expr[\":\"] = $.expr.pseudos = $.expr.filters = finder.pseudos;\r\n\r\n\t    $.expr.createPseudo = function(fn) {\r\n\t    \treturn fn;\r\n\t    };\r\n\r\n\t    $.cssHooks = styler.cssHooks;\r\n\r\n\t    $.contains = noder.contains;\r\n\r\n\t    $.css = styler.css;\r\n\r\n\t    $.data = datax.data;\r\n\r\n\t    $.fx = fx;\r\n\t    $.fx.step = {\r\n\r\n        };\r\n\r\n        $.easing = {};\r\n\r\n\t    $.offset = {};\r\n\t    $.offset.setOffset = function(elem, options, i) {\r\n\t        var position = $.css(elem, \"position\");\r\n\r\n\t        // set position first, in-case top/left are set even on static elem\r\n\t        if (position === \"static\") {\r\n\t            elem.style.position = \"relative\";\r\n\t        }\r\n\r\n\t        var curElem = $(elem),\r\n\t            curOffset = curElem.offset(),\r\n\t            curCSSTop = $.css(elem, \"top\"),\r\n\t            curCSSLeft = $.css(elem, \"left\"),\r\n\t            calculatePosition = (position === \"absolute\" || position === \"fixed\") && $.inArray(\"auto\", [curCSSTop, curCSSLeft]) > -1,\r\n\t            props = {},\r\n\t            curPosition = {},\r\n\t            curTop, curLeft;\r\n\r\n\t        // need to be able to calculate position if either top or left is auto and position is either absolute or fixed\r\n\t        if (calculatePosition) {\r\n\t            curPosition = curElem.position();\r\n\t            curTop = curPosition.top;\r\n\t            curLeft = curPosition.left;\r\n\t        } else {\r\n\t            curTop = parseFloat(curCSSTop) || 0;\r\n\t            curLeft = parseFloat(curCSSLeft) || 0;\r\n\t        }\r\n\r\n\t        if ($.isFunction(options)) {\r\n\t            options = options.call(elem, i, curOffset);\r\n\t        }\r\n\r\n\t        if (options.top != null) {\r\n\t            props.top = (options.top - curOffset.top) + curTop;\r\n\t        }\r\n\t        if (options.left != null) {\r\n\t            props.left = (options.left - curOffset.left) + curLeft;\r\n\t        }\r\n\r\n\t        if (\"using\" in options) {\r\n\t            options.using.call(elem, props);\r\n\t        } else {\r\n\t            curElem.css(props);\r\n\t        }\r\n\t    };\r\n    })(query);\r\n\r\n    query.parseHTML = function(html) {\r\n        return  noder.createFragment(html);\r\n    };\r\n\r\n    query.unique = langx.uniq;\r\n\r\n    query.skylark = skylark;\r\n\r\n    return window.jQuery = window.$ = query;\r\n});\r\n\ndefine('skylark-jquery/deferred',[\r\n    \"./core\"\r\n], function($) {\r\n\r\n    /*\r\n        (function ($) {\r\n            $.Deferred = async.Deferred;\r\n            $.when = async.when;\r\n        })(Zepto);\r\n    */\r\n\r\n    //     This module is borrow from zepto.deferred.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n    //\r\n    //     Some code (c) 2005, 2013 jQuery Foundation, Inc. and other contributors\r\n\r\n    var slice = Array.prototype.slice\r\n\r\n    function Deferred(func) {\r\n        var tuples = [\r\n                // action, add listener, listener list, final state\r\n                [\"resolve\", \"done\", $.Callbacks({ once: 1, memory: 1 }), \"resolved\"],\r\n                [\"reject\", \"fail\", $.Callbacks({ once: 1, memory: 1 }), \"rejected\"],\r\n                [\"notify\", \"progress\", $.Callbacks({ memory: 1 })]\r\n            ],\r\n            state = \"pending\",\r\n            promise = {\r\n                state: function() {\r\n                    return state\r\n                },\r\n                always: function() {\r\n                    deferred.done(arguments).fail(arguments)\r\n                    return this\r\n                },\r\n                then: function( /* fnDone [, fnFailed [, fnProgress]] */ ) {\r\n                    var fns = arguments\r\n                    return Deferred(function(defer) {\r\n                        $.each(tuples, function(i, tuple) {\r\n                            var fn = $.isFunction(fns[i]) && fns[i]\r\n                            deferred[tuple[1]](function() {\r\n                                var returned = fn && fn.apply(this, arguments)\r\n                                if (returned && $.isFunction(returned.promise)) {\r\n                                    returned.promise()\r\n                                        .done(defer.resolve)\r\n                                        .fail(defer.reject)\r\n                                        .progress(defer.notify)\r\n                                } else {\r\n                                    var context = this === promise ? defer.promise() : this,\r\n                                        values = fn ? [returned] : arguments\r\n                                    defer[tuple[0] + \"With\"](context, values)\r\n                                }\r\n                            })\r\n                        })\r\n                        fns = null\r\n                    }).promise()\r\n                },\r\n\r\n                promise: function(obj) {\r\n                    return obj != null ? $.extend(obj, promise) : promise\r\n                }\r\n            },\r\n            deferred = {};\r\n\r\n        promise.pipe = promise.then;\r\n\r\n        $.each(tuples, function(i, tuple) {\r\n            var list = tuple[2],\r\n                stateString = tuple[3]\r\n\r\n            promise[tuple[1]] = list.add\r\n\r\n            if (stateString) {\r\n                list.add(function() {\r\n                    state = stateString\r\n                }, tuples[i ^ 1][2].disable, tuples[2][2].lock)\r\n            }\r\n\r\n            deferred[tuple[0]] = function() {\r\n                deferred[tuple[0] + \"With\"](this === deferred ? promise : this, arguments)\r\n                return this\r\n            }\r\n            deferred[tuple[0] + \"With\"] = list.fireWith\r\n        })\r\n\r\n        promise.promise(deferred)\r\n        if (func) func.call(deferred, deferred)\r\n        return deferred\r\n    }\r\n\r\n    $.when = function(sub) {\r\n        var resolveValues = slice.call(arguments),\r\n            len = resolveValues.length,\r\n            i = 0,\r\n            remain = len !== 1 || (sub && $.isFunction(sub.promise)) ? len : 0,\r\n            deferred = remain === 1 ? sub : Deferred(),\r\n            progressValues, progressContexts, resolveContexts,\r\n            updateFn = function(i, ctx, val) {\r\n                return function(value) {\r\n                    ctx[i] = this\r\n                    val[i] = arguments.length > 1 ? slice.call(arguments) : value\r\n                    if (val === progressValues) {\r\n                        deferred.notifyWith(ctx, val)\r\n                    } else if (!(--remain)) {\r\n                        deferred.resolveWith(ctx, val)\r\n                    }\r\n                }\r\n            }\r\n\r\n        if (len > 1) {\r\n            progressValues = new Array(len)\r\n            progressContexts = new Array(len)\r\n            resolveContexts = new Array(len)\r\n            for (; i < len; ++i) {\r\n                if (resolveValues[i] && $.isFunction(resolveValues[i].promise)) {\r\n                    resolveValues[i].promise()\r\n                        .done(updateFn(i, resolveContexts, resolveValues))\r\n                        .fail(deferred.reject)\r\n                        .progress(updateFn(i, progressContexts, progressValues))\r\n                } else {\r\n                    --remain\r\n                }\r\n            }\r\n        }\r\n        if (!remain) deferred.resolveWith(resolveContexts, resolveValues)\r\n        return deferred.promise()\r\n    }\r\n\r\n    $.Deferred = Deferred\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/ajax',[\r\n    \"./core\",\r\n    \"./deferred\"\r\n], function($) {\r\n    //     zepto.ajax.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    var jsonpID = 0,\r\n        document = window.document,\r\n        key,\r\n        name,\r\n        rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n        scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n        xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n        jsonType = 'application/json',\r\n        htmlType = 'text/html',\r\n        blankRE = /^\\s*$/,\r\n        originAnchor = document.createElement('a');\r\n\r\n    originAnchor.href = window.location.href;\r\n\r\n    // trigger a custom event and return false if it was cancelled\r\n    function triggerAndReturn(context, eventName, data) {\r\n        var event = $.Event(eventName)\r\n        $(context).trigger(event, data)\r\n        return !event.isDefaultPrevented()\r\n    }\r\n\r\n    // trigger an Ajax \"global\" event\r\n    function triggerGlobal(settings, context, eventName, data) {\r\n        if (settings.global) return triggerAndReturn(context || document, eventName, data)\r\n    }\r\n\r\n    // Number of active Ajax requests\r\n    $.active = 0;\r\n\r\n    function ajaxStart(settings) {\r\n        if (settings.global && $.active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\r\n    }\r\n\r\n    function ajaxStop(settings) {\r\n        if (settings.global && !(--$.active)) triggerGlobal(settings, null, 'ajaxStop')\r\n    }\r\n\r\n    // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\r\n    function ajaxBeforeSend(xhr, settings) {\r\n        var context = settings.context\r\n        if (settings.beforeSend.call(context, xhr, settings) === false ||\r\n            triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\r\n            return false\r\n\r\n        triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\r\n    }\r\n\r\n    function ajaxSuccess(data, xhr, settings, deferred) {\r\n        var context = settings.context,\r\n            status = 'success'\r\n        settings.success.call(context, data, status, xhr)\r\n        if (deferred) deferred.resolveWith(context, [data, status, xhr])\r\n        triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\r\n        ajaxComplete(status, xhr, settings)\r\n    }\r\n    // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\r\n    function ajaxError(error, type, xhr, settings, deferred) {\r\n        var context = settings.context\r\n        settings.error.call(context, xhr, type, error)\r\n        if (deferred) deferred.rejectWith(context, [xhr, type, error])\r\n        triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\r\n        ajaxComplete(type, xhr, settings)\r\n    }\r\n    // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\r\n    function ajaxComplete(status, xhr, settings) {\r\n        var context = settings.context\r\n        settings.complete.call(context, xhr, status)\r\n        triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\r\n        ajaxStop(settings)\r\n    }\r\n\r\n    // Empty function, used as default callback\r\n    function empty() {}\r\n\r\n    $.ajaxJSONP = function(options, deferred) {\r\n        if (!('type' in options)) return $.ajax(options)\r\n\r\n        var _callbackName = options.jsonpCallback,\r\n            callbackName = ($.isFunction(_callbackName) ?\r\n                _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\r\n            script = document.createElement('script'),\r\n            originalCallback = window[callbackName],\r\n            responseData,\r\n            abort = function(errorType) {\r\n                $(script).triggerHandler('error', errorType || 'abort')\r\n            },\r\n            xhr = { abort: abort },\r\n            abortTimeout\r\n\r\n        if (deferred) deferred.promise(xhr)\r\n\r\n        $(script).on('load error', function(e, errorType) {\r\n            clearTimeout(abortTimeout)\r\n            $(script).off().remove()\r\n\r\n            if (e.type == 'error' || !responseData) {\r\n                ajaxError(null, errorType || 'error', xhr, options, deferred)\r\n            } else {\r\n                ajaxSuccess(responseData[0], xhr, options, deferred)\r\n            }\r\n\r\n            window[callbackName] = originalCallback\r\n            if (responseData && $.isFunction(originalCallback))\r\n                originalCallback(responseData[0])\r\n\r\n            originalCallback = responseData = undefined\r\n        })\r\n\r\n        if (ajaxBeforeSend(xhr, options) === false) {\r\n            abort('abort')\r\n            return xhr\r\n        }\r\n\r\n        window[callbackName] = function() {\r\n            responseData = arguments\r\n        }\r\n\r\n        script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\r\n        document.head.appendChild(script)\r\n\r\n        if (options.timeout > 0) abortTimeout = setTimeout(function() {\r\n            abort('timeout')\r\n        }, options.timeout)\r\n\r\n        return xhr;\r\n    }\r\n\r\n    $.ajaxSettings = {\r\n        // Default type of request\r\n        type: 'GET',\r\n        // Callback that is executed before request\r\n        beforeSend: empty,\r\n        // Callback that is executed if the request succeeds\r\n        success: empty,\r\n        // Callback that is executed the the server drops error\r\n        error: empty,\r\n        // Callback that is executed on request complete (both: error and success)\r\n        complete: empty,\r\n        // The context for the callbacks\r\n        context: null,\r\n        // Whether to trigger \"global\" Ajax events\r\n        global: true,\r\n        // Transport\r\n        xhr: function() {\r\n            return new window.XMLHttpRequest()\r\n        },\r\n        // MIME types mapping\r\n        // IIS returns Javascript as \"application/x-javascript\"\r\n        accepts: {\r\n            script: 'text/javascript, application/javascript, application/x-javascript',\r\n            json: jsonType,\r\n            xml: 'application/xml, text/xml',\r\n            html: htmlType,\r\n            text: 'text/plain'\r\n        },\r\n        // Whether the request is to another domain\r\n        crossDomain: false,\r\n        // Default timeout\r\n        timeout: 0,\r\n        // Whether data should be serialized to string\r\n        processData: true,\r\n        // Whether the browser should be allowed to cache GET responses\r\n        cache: true\r\n    }\r\n\r\n    function mimeToDataType(mime) {\r\n        if (mime) mime = mime.split(';', 2)[0]\r\n        return mime && (mime == htmlType ? 'html' :\r\n            mime == jsonType ? 'json' :\r\n            scriptTypeRE.test(mime) ? 'script' :\r\n            xmlTypeRE.test(mime) && 'xml') || 'text'\r\n    }\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') return url\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n    }\r\n\r\n    // serialize payload and append it to the URL for GET requests\r\n    function serializeData(options) {\r\n        if (options.processData && options.data && $.type(options.data) != \"string\")\r\n            options.data = $.param(options.data, options.traditional)\r\n        if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))\r\n            options.url = appendQuery(options.url, options.data), options.data = undefined\r\n    }\r\n\r\n    $.ajax = function(options) {\r\n        var settings = $.extend({}, options || {}),\r\n            deferred = $.Deferred && $.Deferred(),\r\n            urlAnchor\r\n        for (key in $.ajaxSettings)\r\n            if (settings[key] === undefined) settings[key] = $.ajaxSettings[key]\r\n\r\n        ajaxStart(settings)\r\n\r\n        if (!settings.crossDomain) {\r\n            urlAnchor = document.createElement('a')\r\n            urlAnchor.href = settings.url\r\n            urlAnchor.href = urlAnchor.href\r\n            settings.crossDomain = (originAnchor.protocol + '//' + originAnchor.host) !== (urlAnchor.protocol + '//' + urlAnchor.host)\r\n        }\r\n\r\n        if (!settings.url) settings.url = window.location.toString()\r\n        serializeData(settings)\r\n\r\n        var dataType = settings.dataType,\r\n            hasPlaceholder = /\\?.+=\\?/.test(settings.url)\r\n        if (hasPlaceholder) dataType = 'jsonp'\r\n\r\n        if (settings.cache === false || (\r\n                (!options || options.cache !== true) &&\r\n                ('script' == dataType || 'jsonp' == dataType)\r\n            ))\r\n            settings.url = appendQuery(settings.url, '_=' + Date.now())\r\n\r\n        if ('jsonp' == dataType) {\r\n            if (!hasPlaceholder)\r\n                settings.url = appendQuery(settings.url,\r\n                    settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')\r\n            return $.ajaxJSONP(settings, deferred)\r\n        }\r\n\r\n        var mime = settings.accepts[dataType],\r\n            headers = {},\r\n            setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\r\n            protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\r\n            xhr = settings.xhr(),\r\n            nativeSetHeader = xhr.setRequestHeader,\r\n            abortTimeout\r\n\r\n        if (deferred) deferred.promise(xhr)\r\n\r\n        if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest')\r\n        setHeader('Accept', mime || '*/*')\r\n        if (mime = settings.mimeType || mime) {\r\n            if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\r\n            xhr.overrideMimeType && xhr.overrideMimeType(mime)\r\n        }\r\n        if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\r\n            setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\r\n\r\n        if (settings.headers)\r\n            for (name in settings.headers) setHeader(name, settings.headers[name])\r\n        xhr.setRequestHeader = setHeader\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState == 4) {\r\n                xhr.onreadystatechange = empty\r\n                clearTimeout(abortTimeout)\r\n                var result, error = false\r\n                if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\r\n                    dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\r\n                    result = xhr.responseText\r\n\r\n                    try {\r\n                        // http://perfectionkills.com/global-eval-what-are-the-options/\r\n                        if (dataType == 'script')(1, eval)(result)\r\n                        else if (dataType == 'xml') result = xhr.responseXML\r\n                        else if (dataType == 'json') result = blankRE.test(result) ? null : $.parseJSON(result)\r\n                    } catch (e) { error = e }\r\n\r\n                    if (error) ajaxError(error, 'parsererror', xhr, settings, deferred)\r\n                    else ajaxSuccess(result, xhr, settings, deferred)\r\n                } else {\r\n                    ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred)\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ajaxBeforeSend(xhr, settings) === false) {\r\n            xhr.abort()\r\n            ajaxError(null, 'abort', xhr, settings, deferred)\r\n            return xhr\r\n        }\r\n\r\n        if (settings.xhrFields)\r\n            for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\r\n\r\n        var async = 'async' in settings ? settings.async : true\r\n        xhr.open(settings.type, settings.url, async, settings.username, settings.password)\r\n\r\n        for (name in headers) nativeSetHeader.apply(xhr, headers[name])\r\n\r\n        if (settings.timeout > 0) abortTimeout = setTimeout(function() {\r\n            xhr.onreadystatechange = empty\r\n            xhr.abort()\r\n            ajaxError(null, 'timeout', xhr, settings, deferred)\r\n        }, settings.timeout)\r\n\r\n        // avoid sending empty string (#319)\r\n        xhr.send(settings.data ? settings.data : null)\r\n        return xhr\r\n    }\r\n\r\n    // handle optional data/success arguments\r\n    function parseArguments(url, data, success, dataType) {\r\n        if ($.isFunction(data)) dataType = success, success = data, data = undefined\r\n        if (!$.isFunction(success)) dataType = success, success = undefined\r\n        return {\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            dataType: dataType\r\n        }\r\n    }\r\n\r\n    $.get = function( /* url, data, success, dataType */ ) {\r\n        return $.ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    $.post = function( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.type = 'POST'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    $.getJSON = function( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.dataType = 'json'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    $.fn.load = function(url, data, success) {\r\n        if (!this.length) return this\r\n        var self = this,\r\n            parts = url.split(/\\s/),\r\n            selector,\r\n            options = parseArguments(url, data, success),\r\n            callback = options.success\r\n        if (parts.length > 1) options.url = parts[0], selector = parts[1]\r\n        options.success = function(response) {\r\n            self.html(selector ?\r\n                $('<div>').html(response.replace(rscript, \"\")).find(selector) : response)\r\n            callback && callback.apply(self, arguments)\r\n        }\r\n        $.ajax(options)\r\n        return this\r\n    }\r\n\r\n    var escape = encodeURIComponent\r\n\r\n    function serialize(params, obj, traditional, scope) {\r\n        var type, array = $.isArray(obj),\r\n            hash = $.isPlainObject(obj)\r\n        $.each(obj, function(key, value) {\r\n            type = $.type(value)\r\n            if (scope) key = traditional ? scope :\r\n                scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']'\r\n            // handle data in serializeArray() format\r\n            if (!scope && array) params.add(value.name, value.value)\r\n            // recurse into nested objects\r\n            else if (type == \"array\" || (!traditional && type == \"object\"))\r\n                serialize(params, value, traditional, key)\r\n            else params.add(key, value)\r\n        })\r\n    }\r\n\r\n    $.param = function(obj, traditional) {\r\n        var params = []\r\n        params.add = function(key, value) {\r\n            if ($.isFunction(value)) value = value()\r\n            if (value == null) value = \"\"\r\n            this.push(escape(key) + '=' + escape(value))\r\n        }\r\n        serialize(params, obj, traditional)\r\n        return params.join('&').replace(/%20/g, '+')\r\n    };\r\n\r\n    var\r\n        /* Prefilters\r\n         * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\r\n         * 2) These are called:\r\n         *    - BEFORE asking for a transport\r\n         *    - AFTER param serialization (s.data is a string if s.processData is true)\r\n         * 3) key is the dataType\r\n         * 4) the catchall symbol \"*\" can be used\r\n         * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\r\n         */\r\n        prefilters = {},\r\n\r\n        /* Transports bindings\r\n         * 1) key is the dataType\r\n         * 2) the catchall symbol \"*\" can be used\r\n         * 3) selection will start with transport dataType and THEN go to \"*\" if needed\r\n         */\r\n        transports = {},\r\n        rnotwhite = (/\\S+/g);\r\n\r\n\r\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n    function addToPrefiltersOrTransports(structure) {\r\n\r\n        // dataTypeExpression is optional and defaults to \"*\"\r\n        return function(dataTypeExpression, func) {\r\n\r\n            if (typeof dataTypeExpression !== \"string\") {\r\n                func = dataTypeExpression;\r\n                dataTypeExpression = \"*\";\r\n            }\r\n\r\n            var dataType,\r\n                i = 0,\r\n                dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\r\n\r\n            if (jQuery.isFunction(func)) {\r\n\r\n                // For each dataType in the dataTypeExpression\r\n                while ((dataType = dataTypes[i++])) {\r\n\r\n                    // Prepend if requested\r\n                    if (dataType[0] === \"+\") {\r\n                        dataType = dataType.slice(1) || \"*\";\r\n                        (structure[dataType] = structure[dataType] || []).unshift(func);\r\n\r\n                        // Otherwise append\r\n                    } else {\r\n                        (structure[dataType] = structure[dataType] || []).push(func);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    $.ajaxPrefilter = addToPrefiltersOrTransports(prefilters);\r\n    $.ajaxTransport = addToPrefiltersOrTransports(transports);\r\n\r\n    // A special extend for ajax options\r\n    // that takes \"flat\" options (not to be deep extended)\r\n    // Fixes #9887\r\n    function ajaxExtend(target, src) {\r\n        var key, deep,\r\n            flatOptions = jQuery.ajaxSettings.flatOptions || {};\r\n\r\n        for (key in src) {\r\n            if (src[key] !== undefined) {\r\n                (flatOptions[key] ? target : (deep || (deep = {})))[key] = src[key];\r\n            }\r\n        }\r\n        if (deep) {\r\n            jQuery.extend(true, target, deep);\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n    // Creates a full fledged settings object into target\r\n    // with both ajaxSettings and settings fields.\r\n    // If target is omitted, writes into ajaxSettings.\r\n    $.ajaxSetup = function(target, settings) {\r\n        return settings ?\r\n\r\n            // Building a settings object\r\n            ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) :\r\n\r\n            // Extending ajaxSettings\r\n            ajaxExtend(jQuery.ajaxSettings, target);\r\n    };\r\n\r\n    // Base inspection function for prefilters and transports\r\n    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\r\n\r\n        var inspected = {},\r\n            seekingTransport = (structure === transports);\r\n\r\n        function inspect(dataType) {\r\n            var selected;\r\n            inspected[dataType] = true;\r\n            jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {\r\n                var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\r\n                if (typeof dataTypeOrTransport === \"string\" &&\r\n                    !seekingTransport && !inspected[dataTypeOrTransport]) {\r\n\r\n                    options.dataTypes.unshift(dataTypeOrTransport);\r\n                    inspect(dataTypeOrTransport);\r\n                    return false;\r\n                } else if (seekingTransport) {\r\n                    return !(selected = dataTypeOrTransport);\r\n                }\r\n            });\r\n            return selected;\r\n        }\r\n\r\n        return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\r\n    }\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/callbacks',[\r\n    \"./core\"\r\n], function($) {\r\n\r\n    //     This module is borrow from zepto.callback.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    // Create a collection of callbacks to be fired in a sequence, with configurable behaviour\r\n    // Option flags:\r\n    //   - once: Callbacks fired at most one time.\r\n    //   - memory: Remember the most recent context and arguments\r\n    //   - stopOnFalse: Cease iterating over callback list\r\n    //   - unique: Permit adding at most one instance of the same callback\r\n    $.Callbacks = function(options) {\r\n        options = $.extend({}, options)\r\n\r\n        var memory, // Last fire value (for non-forgettable lists)\r\n            fired, // Flag to know if list was already fired\r\n            firing, // Flag to know if list is currently firing\r\n            firingStart, // First callback to fire (used internally by add and fireWith)\r\n            firingLength, // End of the loop when firing\r\n            firingIndex, // Index of currently firing callback (modified by remove if needed)\r\n            list = [], // Actual callback list\r\n            stack = !options.once && [], // Stack of fire calls for repeatable lists\r\n            fire = function(data) {\r\n                memory = options.memory && data\r\n                fired = true\r\n                firingIndex = firingStart || 0\r\n                firingStart = 0\r\n                firingLength = list.length\r\n                firing = true\r\n                for (; list && firingIndex < firingLength; ++firingIndex) {\r\n                    if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\r\n                        memory = false\r\n                        break\r\n                    }\r\n                }\r\n                firing = false\r\n                if (list) {\r\n                    if (stack) stack.length && fire(stack.shift())\r\n                    else if (memory) list.length = 0\r\n                    else Callbacks.disable()\r\n                }\r\n            },\r\n\r\n            Callbacks = {\r\n                add: function() {\r\n                    if (list) {\r\n                        var start = list.length,\r\n                            add = function(args) {\r\n                                $.each(args, function(_, arg) {\r\n                                    if (typeof arg === \"function\") {\r\n                                        if (!options.unique || !Callbacks.has(arg)) list.push(arg)\r\n                                    } else if (arg && arg.length && typeof arg !== 'string') add(arg)\r\n                                })\r\n                            }\r\n                        add(arguments)\r\n                        if (firing) firingLength = list.length\r\n                        else if (memory) {\r\n                            firingStart = start\r\n                            fire(memory)\r\n                        }\r\n                    }\r\n                    return this\r\n                },\r\n                remove: function() {\r\n                    if (list) {\r\n                        $.each(arguments, function(_, arg) {\r\n                            var index\r\n                            while ((index = $.inArray(arg, list, index)) > -1) {\r\n                                list.splice(index, 1)\r\n                                // Handle firing indexes\r\n                                if (firing) {\r\n                                    if (index <= firingLength) --firingLength\r\n                                    if (index <= firingIndex) --firingIndex\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    return this\r\n                },\r\n                has: function(fn) {\r\n                    return !!(list && (fn ? $.inArray(fn, list) > -1 : list.length))\r\n                },\r\n                empty: function() {\r\n                    firingLength = list.length = 0\r\n                    return this\r\n                },\r\n                disable: function() {\r\n                    list = stack = memory = undefined\r\n                    return this\r\n                },\r\n                disabled: function() {\r\n                    return !list\r\n                },\r\n                lock: function() {\r\n                    stack = undefined;\r\n                    if (!memory) Callbacks.disable()\r\n                    return this\r\n                },\r\n                locked: function() {\r\n                    return !stack\r\n                },\r\n                fireWith: function(context, args) {\r\n                    if (list && (!fired || stack)) {\r\n                        args = args || []\r\n                        args = [context, args.slice ? args.slice() : args]\r\n                        if (firing) stack.push(args)\r\n                        else fire(args)\r\n                    }\r\n                    return this\r\n                },\r\n                fire: function() {\r\n                    return Callbacks.fireWith(this, arguments)\r\n                },\r\n                fired: function() {\r\n                    return !!fired\r\n                }\r\n            }\r\n\r\n        return Callbacks\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/main',[\r\n    \"./core\",\r\n    \"./ajax\",\r\n    \"./callbacks\",\r\n    \"./deferred\"\r\n], function($) {\r\n    return $;\r\n});\r\n\ndefine('skylark-jquery', ['skylark-jquery/main'], function (main) { return main; });\n\n"]}