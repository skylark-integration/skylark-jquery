{"version":3,"sources":["skylark-jquery.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","browser","langx","noder","datax","eventer","finder","fx","styler","query","filter","Array","prototype","slice","$","fn","jquery","camelCase","cleanData","elems","elem","undefined","removeData","elm","name","each","extend","target","deep","call","arguments","shift","this","arg","mixin","grep","elements","callback","attr","isArray","isEmptyObject","isFunction","isWindow","isPlainObject","inArray","makeArray","noop","parseJSON","JSON","parse","proxy","trim","type","props","serializeArray","result","add","value","_","field","nodeName","toLowerCase","disabled","checked","val","serialize","encodeURIComponent","Event","src","isString","create","event","special","submit","bind","eq","trigger","isDefaultPrevented","get","triggerHandler","delegate","selector","on","undelegate","off","live","document","body","die","data","unbind","ready","stop","moveto","x","y","animate","left","top","uuid","support","expr","pseudos","filters","createPseudo","cssHooks","contains","css","step","easing","offset","setOffset","options","position","style","curTop","curLeft","curElem","curOffset","curCSSTop","curCSSLeft","calculatePosition","curPosition","parseFloat","using","_data","propName","hasAttribute","parseHTML","html","createFragment","uniqueSort","unique","uniq","jQuery","appendQuery","url","replace","parseArguments","success","dataType","addToPrefiltersOrTransports","structure","dataTypeExpression","func","dataTypes","match","rnotwhite","unshift","jsonpID","ajaxJSONP","responseData","abortTimeout","deferred","Deferred","_callbackName","jsonpCallback","callbackName","script","createElement","originalCallback","abort","errorType","xhr","key","e","clearTimeout","remove","resolve","reject","head","appendChild","timeout","setTimeout","ajaxSettings","Xhr","defaultOptions","XMLHttpRequest","ajax","hasPlaceholder","test","jsonp","p","request","then","error","post","getJSON","originalLoad","load","self","response","rscript","find","param","prefilters","transports","ajaxPrefilter","ajaxTransport","ajaxSetup","settings","Callbacks","memory","fired","firing","firingStart","firingLength","firingIndex","list","once","fire","stopOnFalse","disable","start","has","index","splice","empty","lock","locked","fireWith","context","d","_p","promise","when","all","originThen","onResolved","onRejected","handler","results","isArraylike","obj","nodeType","Data","Object","defineProperty","cache","expando","Math","random","core_rnotwhite","core_deletedIds","core_push","uid","accepts","owner","descriptor","unlock","defineProperties","set","prop","access","stored","camel","concat","hasData","discard","data_priv","queue","dequeue","startLength","hooks","_queueHooks","next","arr","ret","merge","first","second","l","j","setter","delay","time","speeds","clearQueue","tmp","count","defer","resolveWith","main"],"mappings":"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","file":"../skylark-jquery.js","sourcesContent":["define('skylark-jquery/core',[\r\n\t\"skylark-utils/skylark\",\r\n\t\"skylark-utils/browser\",\r\n\t\"skylark-utils/langx\",\r\n\t\"skylark-utils/noder\",\r\n\t\"skylark-utils/datax\",\r\n\t\"skylark-utils/eventer\",\r\n\t\"skylark-utils/finder\",\r\n\t\"skylark-utils/fx\",\r\n\t\"skylark-utils/styler\",\r\n\t\"skylark-utils/query\",\r\n\t\"skylark-utils/widgets\"\r\n],function(skylark,browser,langx,noder,datax,eventer,finder,fx,styler,query){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n    (function($){\r\n\t    $.fn.jquery = '2.2.0';\r\n\r\n\t    $.camelCase = langx.camelCase;\r\n\r\n\t\t$.cleanData = function( elems ) {\r\n\t\t\tvar elem,\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\r\n\t\t\t\tdatax.cleanData(elem);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.removeData = function(elm,name) {\r\n\t\t\tdatax.removeData(elm,name);\r\n\t\t}\r\n\t\r\n\t    $.each = langx.each;\r\n\r\n\t    $.extend = function(target) {\r\n\t        var deep, args = slice.call(arguments, 1);\r\n\t        if (typeof target == 'boolean') {\r\n\t            deep = target\r\n\t            target = args.shift()\r\n\t        }\r\n\t        if (args.length == 0) {\r\n\t            args = [target];\r\n\t            target = this;\r\n\t        }\r\n\t        args.forEach(function(arg) {\r\n\t        \tlangx.mixin(target, arg, deep);\r\n\t        });\r\n\t        return target;\r\n\t    };\r\n\r\n\t    $.grep = function(elements, callback) {\r\n\t        return filter.call(elements, callback)\r\n\t    };\r\n\r\n\t    $.attr = function(elm,name) {\r\n\t    \treturn datax.attr(elm,name);\r\n\t    };\r\n\r\n\t    $.isArray = langx.isArray;\r\n\t    $.isEmptyObject = langx.isEmptyObject;\r\n\t    $.isFunction = langx.isFunction;\r\n\t    $.isWindow = langx.isWindow;\r\n\t    $.isPlainObject = langx.isPlainObject;\r\n\r\n\t    $.inArray = langx.inArray;\r\n\r\n\t    $.makeArray = langx.makeArray;\r\n\t    $.map = langx.map;  // The behavior is somewhat different from the original jquery.\r\n\r\n\t    $.noop = function() {\r\n\t    };\r\n\r\n\t    $.parseJSON = window.JSON.parse;\r\n\r\n\t    $.proxy = langx.proxy;\r\n\r\n\t    $.trim = langx.trim;\r\n\t    $.type = langx.type;\r\n\r\n\t    $.fn.extend = function(props) {\r\n\t        langx.mixin($.fn, props);\r\n\t    };\r\n\r\n\t    $.fn.serializeArray = function() {\r\n\t        var name, type, result = [],\r\n\t            add = function(value) {\r\n\t                if (value.forEach) return value.forEach(add)\r\n\t                result.push({ name: name, value: value })\r\n\t            }\r\n\t        if (this[0]) langx.each(this[0].elements, function(_, field) {\r\n\t            type = field.type, name = field.name\r\n\t            if (name && field.nodeName.toLowerCase() != 'fieldset' &&\r\n\t                !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&\r\n\t                ((type != 'radio' && type != 'checkbox') || field.checked))\r\n\t                add($(field).val())\r\n\t        })\r\n\t        return result\r\n\t    };\r\n\r\n\t    $.fn.serialize = function() {\r\n\t        var result = []\r\n\t        this.serializeArray().forEach(function(elm) {\r\n\t            result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\r\n\t        })\r\n\t        return result.join('&')\r\n\t    };\r\n    })(query);\r\n\r\n    (function($){\r\n        $.Event = function Event(src, props) {\r\n            if (langx.isString(src)) {\r\n            \tvar type = src;\r\n            \treturn eventer.create(type, props);\r\n\t        }\r\n            return eventer.proxy(src, props);\r\n        };\r\n\r\n        $.event = {};\r\n\r\n\t    $.event.special = eventer.special;\r\n\r\n\t    $.fn.submit = function(callback) {\r\n\t        if (0 in arguments) this.bind('submit', callback)\r\n\t        else if (this.length) {\r\n\t            var event = $.Event('submit')\r\n\t            this.eq(0).trigger(event)\r\n\t            if (!event.isDefaultPrevented()) this.get(0).submit()\r\n\t        }\r\n\t        return this\r\n\t    };\r\n\r\n\t    // event\r\n\t    $.fn.triggerHandler = $.fn.trigger;\r\n\r\n\t    $.fn.delegate = function(selector, event, callback) {\r\n\t        return this.on(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.undelegate = function(selector, event, callback) {\r\n\t        return this.off(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.live = function(event, callback) {\r\n\t        $(document.body).delegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.die = function(event, callback) {\r\n\t        $(document.body).undelegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.bind = function(event, selector, data, callback) {\r\n\t        return this.on(event, selector, data, callback)\r\n\t    };\r\n\r\n\t    $.fn.unbind = function(event, callback) {\r\n\t        return this.off(event, callback)\r\n\t    };\r\n\r\n\t    $.fn.ready = function(callback) {\r\n\t        eventer.ready(callback);\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.stop = function() {\r\n\t        // todo\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.moveto = function(x, y) {\r\n\t        return this.animate({\r\n\t            left: x + \"px\",\r\n\t            top: y + \"px\"\r\n\t        }, 0.4);\r\n\r\n\t    };\r\n\r\n\t    $.ready = eventer.ready;\r\n\r\n\t    $.on = eventer.on;\r\n\r\n\t    $.off = eventer.off;\r\n    })(query);\r\n\r\n    (function($){\r\n\t    // plugin compatibility\r\n\t    $.uuid = 0;\r\n\t    $.support = browser.support;\r\n\t    $.expr = {};\r\n\r\n\t    $.expr[\":\"] = $.expr.pseudos = $.expr.filters = finder.pseudos;\r\n\r\n\t    $.expr.createPseudo = function(fn) {\r\n\t    \treturn fn;\r\n\t    };\r\n\r\n\t    $.cssHooks = styler.cssHooks;\r\n\r\n\t    $.contains = noder.contains;\r\n\r\n\t    $.css = styler.css;\r\n\r\n\t    $.data = datax.data;\r\n\r\n\t    $.fx = fx;\r\n\t    $.fx.step = {\r\n\r\n        };\r\n\r\n        $.easing = {};\r\n\r\n\t    $.offset = {};\r\n\t    $.offset.setOffset = function(elem, options, i) {\r\n\t        var position = $.css(elem, \"position\");\r\n\r\n\t        // set position first, in-case top/left are set even on static elem\r\n\t        if (position === \"static\") {\r\n\t            elem.style.position = \"relative\";\r\n\t        }\r\n\r\n\t        var curElem = $(elem),\r\n\t            curOffset = curElem.offset(),\r\n\t            curCSSTop = $.css(elem, \"top\"),\r\n\t            curCSSLeft = $.css(elem, \"left\"),\r\n\t            calculatePosition = (position === \"absolute\" || position === \"fixed\") && $.inArray(\"auto\", [curCSSTop, curCSSLeft]) > -1,\r\n\t            props = {},\r\n\t            curPosition = {},\r\n\t            curTop, curLeft;\r\n\r\n\t        // need to be able to calculate position if either top or left is auto and position is either absolute or fixed\r\n\t        if (calculatePosition) {\r\n\t            curPosition = curElem.position();\r\n\t            curTop = curPosition.top;\r\n\t            curLeft = curPosition.left;\r\n\t        } else {\r\n\t            curTop = parseFloat(curCSSTop) || 0;\r\n\t            curLeft = parseFloat(curCSSLeft) || 0;\r\n\t        }\r\n\r\n\t        if ($.isFunction(options)) {\r\n\t            options = options.call(elem, i, curOffset);\r\n\t        }\r\n\r\n\t        if (options.top != null) {\r\n\t            props.top = (options.top - curOffset.top) + curTop;\r\n\t        }\r\n\t        if (options.left != null) {\r\n\t            props.left = (options.left - curOffset.left) + curLeft;\r\n\t        }\r\n\r\n\t        if (\"using\" in options) {\r\n\t            options.using.call(elem, props);\r\n\t        } else {\r\n\t            curElem.css(props);\r\n\t        }\r\n\t    };\r\n\r\n        $._data = function(elm,propName) {\r\n            if (elm.hasAttribute) {\r\n                return datax.data(elm,propName);\r\n            } else {\r\n                return {};\r\n            }\r\n        };\r\n        \t    \r\n    })(query);\r\n\r\n    query.parseHTML = function(html) {\r\n        return  noder.createFragment(html);\r\n    };\r\n\r\n    query.uniqueSort = query.unique = langx.uniq;\r\n\r\n    query.skylark = skylark;\r\n\r\n    return window.jQuery = window.$ = query;\r\n});\r\n\ndefine('skylark-jquery/ajax',[\r\n    \"./core\",\r\n    \"skylark-langx/langx\"\r\n], function($,langx) {\r\n    var jsonpID = 0;\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') return url\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n    }\r\n    \r\n    $.ajaxJSONP = function(options) {\r\n        var deferred = new langx.Deferred();\r\n        var _callbackName = options.jsonpCallback,\r\n            callbackName = ($.isFunction(_callbackName) ?\r\n                _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\r\n            script = document.createElement('script'),\r\n            originalCallback = window[callbackName],\r\n            responseData,\r\n            abort = function(errorType) {\r\n                $(script).triggerHandler('error', errorType || 'abort')\r\n            },\r\n            xhr = { abort: abort },\r\n            abortTimeout;\r\n\r\n        for (var key in options.data) {\r\n            options.url = appendQuery(options.url, key + \"=\" + options.data[key]);\r\n        }\r\n         \r\n//        if (deferred) deferred.promise(xhr)\r\n\r\n        $(script).on('load error', function(e, errorType) {\r\n            clearTimeout(abortTimeout)\r\n            $(script).off().remove()\r\n\r\n            if (e.type == 'error' || !responseData) {\r\n                deferred.reject(e);\r\n            } else {\r\n                deferred.resolve(responseData[0],200,xhr);\r\n            }\r\n\r\n            window[callbackName] = originalCallback\r\n            if (responseData && $.isFunction(originalCallback))\r\n                originalCallback(responseData[0])\r\n\r\n            originalCallback = responseData = undefined\r\n        })\r\n\r\n        window[callbackName] = function() {\r\n            responseData = arguments\r\n        }\r\n\r\n        script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\r\n        document.head.appendChild(script)\r\n\r\n        if (options.timeout > 0) abortTimeout = setTimeout(function() {\r\n            abort('timeout')\r\n        }, options.timeout)\r\n\r\n        return deferred;\r\n    }\r\n\r\n    $.ajaxSettings = langx.Xhr.defaultOptions;\r\n\r\n    $.ajaxSettings.xhr = function() {\r\n        return new window.XMLHttpRequest()\r\n    };\r\n\r\n    $.ajax = function(options) {\r\n        if (!options) {\r\n            options = {\r\n                url :  \"./\"\r\n            };\r\n        } else if (langx.isString(options)) {\r\n            options = {\r\n                url :  options\r\n            };\r\n        }\r\n\r\n        if ('jsonp' == options.dataType) {\r\n            var hasPlaceholder = /\\?.+=\\?/.test(options.url);\r\n\r\n            if (!hasPlaceholder)\r\n                options.url = appendQuery(options.url,\r\n                    options.jsonp ? (options.jsonp + '=?') : options.jsonp === false ? '' : 'callback=?')\r\n            return $.ajaxJSONP(options);\r\n        }\r\n\r\n        var p = langx.Xhr.request(options.url,options);\r\n        if (options.success) {\r\n            p = p.then(options.success,options.error);\r\n        }\r\n        return p;\r\n    };\r\n\r\n    // handle optional data/success arguments\r\n    function parseArguments(url, data, success, dataType) {\r\n        if ($.isFunction(url)) {\r\n            dataType = data, success = url, data = undefined,url = undefined;\r\n        } else if ($.isFunction(data)) {\r\n            dataType = success, success = data, data = undefined;\r\n        } \r\n        if (!$.isFunction(success)) dataType = success, success = undefined\r\n        return {\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            dataType: dataType\r\n        }\r\n    }\r\n\r\n    $.get = function( /* url, data, success, dataType */ ) {\r\n        return $.ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    $.post = function( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.type = 'POST'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    $.getJSON = function( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.dataType = 'json'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    var originalLoad = $.fn.load;\r\n\r\n    $.fn.load = function(url, data, success) {\r\n        if (\"string\" != typeof url && originalLoad) {\r\n            return originalLoad.apply(this, arguments);\r\n        }\r\n        if (!this.length) return this\r\n        var self = this,\r\n            options = parseArguments(url, data, success),\r\n            parts = options.url && options.url.split(/\\s/),\r\n            selector,\r\n            callback = options.success\r\n        if (parts && parts.length > 1) options.url = parts[0], selector = parts[1]\r\n        options.success = function(response) {\r\n            self.html(selector ?\r\n                $('<div>').html(response.replace(rscript, \"\")).find(selector) : response)\r\n            callback && callback.apply(self, arguments)\r\n        }\r\n        $.ajax(options)\r\n        return this\r\n    }\r\n\r\n    $.param = langx.Xhr.param;\r\n\r\n\r\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n    function addToPrefiltersOrTransports(structure) {\r\n\r\n        // dataTypeExpression is optional and defaults to \"*\"\r\n        return function(dataTypeExpression, func) {\r\n\r\n            if (typeof dataTypeExpression !== \"string\") {\r\n                func = dataTypeExpression;\r\n                dataTypeExpression = \"*\";\r\n            }\r\n\r\n            var dataType,\r\n                i = 0,\r\n                dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\r\n\r\n            if (jQuery.isFunction(func)) {\r\n\r\n                // For each dataType in the dataTypeExpression\r\n                while ((dataType = dataTypes[i++])) {\r\n\r\n                    // Prepend if requested\r\n                    if (dataType[0] === \"+\") {\r\n                        dataType = dataType.slice(1) || \"*\";\r\n                        (structure[dataType] = structure[dataType] || []).unshift(func);\r\n\r\n                        // Otherwise append\r\n                    } else {\r\n                        (structure[dataType] = structure[dataType] || []).push(func);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    var\r\n        prefilters = {},\r\n        transports = {},\r\n        rnotwhite = (/\\S+/g);\r\n\r\n    $.ajaxPrefilter = addToPrefiltersOrTransports(prefilters);\r\n    $.ajaxTransport = addToPrefiltersOrTransports(transports);\r\n    $.ajaxSetup = function(target, settings) {\r\n        langx.mixin(langx.Xhr.defaultOptions,target,settings);\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/callbacks',[\r\n    \"./core\"\r\n], function($) {\r\n\r\n    //     This module is borrow from zepto.callback.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    // Create a collection of callbacks to be fired in a sequence, with configurable behaviour\r\n    // Option flags:\r\n    //   - once: Callbacks fired at most one time.\r\n    //   - memory: Remember the most recent context and arguments\r\n    //   - stopOnFalse: Cease iterating over callback list\r\n    //   - unique: Permit adding at most one instance of the same callback\r\n    $.Callbacks = function(options) {\r\n        options = $.extend({}, options)\r\n\r\n        var memory, // Last fire value (for non-forgettable lists)\r\n            fired, // Flag to know if list was already fired\r\n            firing, // Flag to know if list is currently firing\r\n            firingStart, // First callback to fire (used internally by add and fireWith)\r\n            firingLength, // End of the loop when firing\r\n            firingIndex, // Index of currently firing callback (modified by remove if needed)\r\n            list = [], // Actual callback list\r\n            stack = !options.once && [], // Stack of fire calls for repeatable lists\r\n            fire = function(data) {\r\n                memory = options.memory && data\r\n                fired = true\r\n                firingIndex = firingStart || 0\r\n                firingStart = 0\r\n                firingLength = list.length\r\n                firing = true\r\n                for (; list && firingIndex < firingLength; ++firingIndex) {\r\n                    if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\r\n                        memory = false\r\n                        break\r\n                    }\r\n                }\r\n                firing = false\r\n                if (list) {\r\n                    if (stack) stack.length && fire(stack.shift())\r\n                    else if (memory) list.length = 0\r\n                    else Callbacks.disable()\r\n                }\r\n            },\r\n\r\n            Callbacks = {\r\n                add: function() {\r\n                    if (list) {\r\n                        var start = list.length,\r\n                            add = function(args) {\r\n                                $.each(args, function(_, arg) {\r\n                                    if (typeof arg === \"function\") {\r\n                                        if (!options.unique || !Callbacks.has(arg)) list.push(arg)\r\n                                    } else if (arg && arg.length && typeof arg !== 'string') add(arg)\r\n                                })\r\n                            }\r\n                        add(arguments)\r\n                        if (firing) firingLength = list.length\r\n                        else if (memory) {\r\n                            firingStart = start\r\n                            fire(memory)\r\n                        }\r\n                    }\r\n                    return this\r\n                },\r\n                remove: function() {\r\n                    if (list) {\r\n                        $.each(arguments, function(_, arg) {\r\n                            var index\r\n                            while ((index = $.inArray(arg, list, index)) > -1) {\r\n                                list.splice(index, 1)\r\n                                // Handle firing indexes\r\n                                if (firing) {\r\n                                    if (index <= firingLength) --firingLength\r\n                                    if (index <= firingIndex) --firingIndex\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    return this\r\n                },\r\n                has: function(fn) {\r\n                    return !!(list && (fn ? $.inArray(fn, list) > -1 : list.length))\r\n                },\r\n                empty: function() {\r\n                    firingLength = list.length = 0\r\n                    return this\r\n                },\r\n                disable: function() {\r\n                    list = stack = memory = undefined\r\n                    return this\r\n                },\r\n                disabled: function() {\r\n                    return !list\r\n                },\r\n                lock: function() {\r\n                    stack = undefined;\r\n                    if (!memory) Callbacks.disable()\r\n                    return this\r\n                },\r\n                locked: function() {\r\n                    return !stack\r\n                },\r\n                fireWith: function(context, args) {\r\n                    if (list && (!fired || stack)) {\r\n                        args = args || []\r\n                        args = [context, args.slice ? args.slice() : args]\r\n                        if (firing) stack.push(args)\r\n                        else fire(args)\r\n                    }\r\n                    return this\r\n                },\r\n                fire: function() {\r\n                    return Callbacks.fireWith(this, arguments)\r\n                },\r\n                fired: function() {\r\n                    return !!fired\r\n                }\r\n            }\r\n\r\n        return Callbacks\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/deferred',[\r\n    \"./core\",\r\n    \"skylark-langx/langx\"\r\n], function($,langx) {\r\n\r\n    $.Deferred = function() {\r\n        var d = new langx.Deferred(),\r\n            _p = d.promise;\r\n        d.promise = function() {\r\n            return _p;\r\n        }\r\n        return d;\r\n    };\r\n\r\n    $.when = function(){\r\n        var p = langx.Deferred.all(langx.makeArray(arguments)),\r\n            originThen = p.then;\r\n        p.then = function(onResolved,onRejected) {\r\n            var handler = function(results) {\r\n                results = results.map(function(result){\r\n                    return [result];\r\n                });\r\n                return onResolved && onResolved.apply(null,results);\r\n            };\r\n            return originThen.call(p,handler,onRejected);\r\n        };\r\n        return p;\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/queue',[\r\n    \"skylark-langx/langx\",\r\n    \"./core\",\r\n    \"./callbacks\"\r\n], function(langx, $) {\r\n\r\n // jQuery Data object\r\n  var rbrace = /(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,\r\n      rmultiDash = /([A-Z])/g,\r\n      expando = \"Sky\" + ( '1.0' + Math.random() ).replace( /\\D/g, \"\"),\r\n      optionsCache = {},\r\n      core_rnotwhite = /\\S+/g,\r\n      core_deletedIds = [],\r\n      core_push = core_deletedIds.push;\r\n\r\n// Convert String-formatted options into Object-formatted ones and store in cache\r\n  function createOptions( options ) {\r\n    var object = optionsCache[ options ] = {};\r\n    $.each( options.match( core_rnotwhite ) || [], function( _, flag ) {\r\n      object[ flag ] = true;\r\n    });\r\n    return object;\r\n  }\r\n\r\n  function isArraylike( obj ) {\r\n    var length = obj.length,\r\n        type = $.type( obj );\r\n\r\n    if ( $.isWindow( obj ) ) {\r\n      return false;\r\n    }\r\n\r\n    if ( obj.nodeType === 1 && length ) {\r\n      return true;\r\n    }\r\n\r\n    return type === \"array\" || type !== \"function\" &&\r\n        ( length === 0 ||\r\n            typeof length === \"number\" && length > 0 && ( length - 1 ) in obj );\r\n  }\r\n\r\n  \r\n\r\n  function Data() {\r\n    // Support: Android < 4,\r\n    // Old WebKit does not have Object.preventExtensions/freeze method,\r\n    // return new empty object instead with no [[set]] accessor\r\n    Object.defineProperty( this.cache = {}, 0, {\r\n      get: function() {\r\n        return {};\r\n      }\r\n    });\r\n\r\n    this.expando = expando + Math.random();\r\n  }\r\n\r\n  Data.uid = 1;\r\n\r\n  Data.accepts = function( owner ) {\r\n    // Accepts only:\r\n    //  - Node\r\n    //    - Node.ELEMENT_NODE\r\n    //    - Node.DOCUMENT_NODE\r\n    //  - Object\r\n    //    - Any\r\n    return owner.nodeType ?\r\n        owner.nodeType === 1 || owner.nodeType === 9 : true;\r\n  };\r\n\r\n  Data.prototype = {\r\n    key: function( owner ) {\r\n      // We can accept data for non-element nodes in modern browsers,\r\n      // but we should not, see #8335.\r\n      // Always return the key for a frozen object.\r\n      if ( !Data.accepts( owner ) ) {\r\n        return 0;\r\n      }\r\n\r\n      var descriptor = {},\r\n      // Check if the owner object already has a cache key\r\n          unlock = owner[ this.expando ];\r\n\r\n      // If not, create one\r\n      if ( !unlock ) {\r\n        unlock = Data.uid++;\r\n\r\n        // Secure it in a non-enumerable, non-writable property\r\n        try {\r\n          descriptor[ this.expando ] = { value: unlock };\r\n          Object.defineProperties( owner, descriptor );\r\n\r\n          // Support: Android < 4\r\n          // Fallback to a less secure definition\r\n        } catch ( e ) {\r\n          descriptor[ this.expando ] = unlock;\r\n          $.extend( owner, descriptor );\r\n        }\r\n      }\r\n\r\n      // Ensure the cache object\r\n      if ( !this.cache[ unlock ] ) {\r\n        this.cache[ unlock ] = {};\r\n      }\r\n\r\n      return unlock;\r\n    },\r\n    set: function( owner, data, value ) {\r\n      var prop,\r\n      // There may be an unlock assigned to this node,\r\n      // if there is no entry for this \"owner\", create one inline\r\n      // and set the unlock as though an owner entry had always existed\r\n          unlock = this.key( owner ),\r\n          cache = this.cache[ unlock ];\r\n\r\n      // Handle: [ owner, key, value ] args\r\n      if ( typeof data === \"string\" ) {\r\n        cache[ data ] = value;\r\n\r\n        // Handle: [ owner, { properties } ] args\r\n      } else {\r\n        // Fresh assignments by object are shallow copied\r\n        if ( $.isEmptyObject( cache ) ) {\r\n          $.extend( this.cache[ unlock ], data );\r\n          // Otherwise, copy the properties one-by-one to the cache object\r\n        } else {\r\n          for ( prop in data ) {\r\n            cache[ prop ] = data[ prop ];\r\n          }\r\n        }\r\n      }\r\n      return cache;\r\n    },\r\n    get: function( owner, key ) {\r\n      // Either a valid cache is found, or will be created.\r\n      // New caches will be created and the unlock returned,\r\n      // allowing direct access to the newly created\r\n      // empty data object. A valid owner object must be provided.\r\n      var cache = this.cache[ this.key( owner ) ];\r\n\r\n      return key === undefined ?\r\n          cache : cache[ key ];\r\n    },\r\n    access: function( owner, key, value ) {\r\n      var stored;\r\n      // In cases where either:\r\n      //\r\n      //   1. No key was specified\r\n      //   2. A string key was specified, but no value provided\r\n      //\r\n      // Take the \"read\" path and allow the get method to determine\r\n      // which value to return, respectively either:\r\n      //\r\n      //   1. The entire cache object\r\n      //   2. The data stored at the key\r\n      //\r\n      if ( key === undefined ||\r\n          ((key && typeof key === \"string\") && value === undefined) ) {\r\n\r\n        stored = this.get( owner, key );\r\n\r\n        return stored !== undefined ?\r\n            stored : this.get( owner, $.camelCase(key) );\r\n      }\r\n\r\n      // [*]When the key is not a string, or both a key and value\r\n      // are specified, set or extend (existing objects) with either:\r\n      //\r\n      //   1. An object of properties\r\n      //   2. A key and value\r\n      //\r\n      this.set( owner, key, value );\r\n\r\n      // Since the \"set\" path can have two possible entry points\r\n      // return the expected data based on which path was taken[*]\r\n      return value !== undefined ? value : key;\r\n    },\r\n    remove: function( owner, key ) {\r\n      var i, name, camel,\r\n          unlock = this.key( owner ),\r\n          cache = this.cache[ unlock ];\r\n\r\n      if ( key === undefined ) {\r\n        this.cache[ unlock ] = {};\r\n\r\n      } else {\r\n        // Support array or space separated string of keys\r\n        if ( $.isArray( key ) ) {\r\n          // If \"name\" is an array of keys...\r\n          // When data is initially created, via (\"key\", \"val\") signature,\r\n          // keys will be converted to camelCase.\r\n          // Since there is no way to tell _how_ a key was added, remove\r\n          // both plain key and camelCase key. #12786\r\n          // This will only penalize the array argument path.\r\n          name = key.concat( key.map( $.camelCase ) );\r\n        } else {\r\n          camel = $.camelCase( key );\r\n          // Try the string as a key before any manipulation\r\n          if ( key in cache ) {\r\n            name = [ key, camel ];\r\n          } else {\r\n            // If a key with the spaces exists, use it.\r\n            // Otherwise, create an array by matching non-whitespace\r\n            name = camel;\r\n            name = name in cache ?\r\n                [ name ] : ( name.match( core_rnotwhite ) || [] );\r\n          }\r\n        }\r\n\r\n        i = name.length;\r\n        while ( i-- ) {\r\n          delete cache[ name[ i ] ];\r\n        }\r\n      }\r\n    },\r\n    hasData: function( owner ) {\r\n      return !$.isEmptyObject(\r\n          this.cache[ owner[ this.expando ] ] || {}\r\n      );\r\n    },\r\n    discard: function( owner ) {\r\n      if ( owner[ this.expando ] ) {\r\n        delete this.cache[ owner[ this.expando ] ];\r\n      }\r\n    }\r\n  };\r\n\r\n  var data_priv = new Data();\r\n\r\n  $.extend($, {\r\n    queue: function( elem, type, data ) {\r\n      var queue;\r\n\r\n      if ( elem ) {\r\n        type = ( type || \"fx\" ) + \"queue\";\r\n        queue = data_priv.get( elem, type );\r\n\r\n        // Speed up dequeue by getting out quickly if this is just a lookup\r\n        if ( data ) {\r\n          if ( !queue || $.isArray( data ) ) {\r\n            queue = data_priv.access( elem, type, $.makeArray(data) );\r\n          } else {\r\n            queue.push( data );\r\n          }\r\n        }\r\n        return queue || [];\r\n      }\r\n    },\r\n\r\n    dequeue: function( elem, type ) {\r\n      type = type || \"fx\";\r\n\r\n      var queue = $.queue( elem, type ),\r\n          startLength = queue.length,\r\n          fn = queue.shift(),\r\n          hooks = $._queueHooks( elem, type ),\r\n          next = function() {\r\n            $.dequeue( elem, type );\r\n          };\r\n\r\n      // If the fx queue is dequeued, always remove the progress sentinel\r\n      if ( fn === \"inprogress\" ) {\r\n        fn = queue.shift();\r\n        startLength--;\r\n      }\r\n\r\n      if ( fn ) {\r\n\r\n        // Add a progress sentinel to prevent the fx queue from being\r\n        // automatically dequeued\r\n        if ( type === \"fx\" ) {\r\n          queue.unshift( \"inprogress\" );\r\n        }\r\n\r\n        // clear up the last queue stop function\r\n        delete hooks.stop;\r\n        fn.call( elem, next, hooks );\r\n      }\r\n\r\n      if ( !startLength && hooks ) {\r\n        hooks.empty.fire();\r\n      }\r\n    },\r\n\r\n    // not intended for public consumption - generates a queueHooks object, or returns the current one\r\n    _queueHooks: function( elem, type ) {\r\n      var key = type + \"queueHooks\";\r\n      return data_priv.get( elem, key ) || data_priv.access( elem, key, {\r\n        empty: $.Callbacks(\"once memory\").add(function() {\r\n          data_priv.remove( elem, [ type + \"queue\", key ] );\r\n        })\r\n      });\r\n    },\r\n\r\n    // array operations\r\n    makeArray: function( arr, results ) {\r\n      var ret = results || [];\r\n\r\n      if ( arr != null ) {\r\n        if ( isArraylike( Object(arr) ) ) {\r\n          $.merge( ret,\r\n              typeof arr === \"string\" ?\r\n                  [ arr ] : arr\r\n          );\r\n        } else {\r\n          core_push.call( ret, arr );\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    },\r\n    merge: function( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n  });\r\n\r\n  $.extend($.fn, {\r\n    queue: function( type, data ) {\r\n      var setter = 2;\r\n\r\n      if ( typeof type !== \"string\" ) {\r\n        data = type;\r\n        type = \"fx\";\r\n        setter--;\r\n      }\r\n\r\n      if ( arguments.length < setter ) {\r\n        return $.queue( this[0], type );\r\n      }\r\n\r\n      return data === undefined ?\r\n          this :\r\n          this.each(function() {\r\n            var queue = $.queue( this, type, data );\r\n\r\n            // ensure a hooks for this queue\r\n            $._queueHooks( this, type );\r\n\r\n            if ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\r\n              $.dequeue( this, type );\r\n            }\r\n          });\r\n    },\r\n    dequeue: function( type ) {\r\n      return this.each(function() {\r\n        $.dequeue( this, type );\r\n      });\r\n    },\r\n    // Based off of the plugin by Clint Helfers, with permission.\r\n    // http://blindsignals.com/index.php/2009/07/jquery-delay/\r\n    delay: function( time, type ) {\r\n      time = $.fx ? $.fx.speeds[ time ] || time : time;\r\n      type = type || \"fx\";\r\n\r\n      return this.queue( type, function( next, hooks ) {\r\n        var timeout = setTimeout( next, time );\r\n        hooks.stop = function() {\r\n          clearTimeout( timeout );\r\n        };\r\n      });\r\n    },\r\n    clearQueue: function( type ) {\r\n      return this.queue( type || \"fx\", [] );\r\n    },\r\n    // Get a promise resolved when queues of a certain type\r\n    // are emptied (fx is the type by default)\r\n    promise: function( type, obj ) {\r\n      var tmp,\r\n          count = 1,\r\n          defer = $.Deferred(),\r\n          elements = this,\r\n          i = this.length,\r\n          resolve = function() {\r\n            if ( !( --count ) ) {\r\n              defer.resolveWith( elements, [ elements ] );\r\n            }\r\n          };\r\n\r\n      if ( typeof type !== \"string\" ) {\r\n        obj = type;\r\n        type = undefined;\r\n      }\r\n      type = type || \"fx\";\r\n\r\n      while( i-- ) {\r\n        tmp = data_priv.get( elements[ i ], type + \"queueHooks\" );\r\n        if ( tmp && tmp.empty ) {\r\n          count++;\r\n          tmp.empty.add( resolve );\r\n        }\r\n      }\r\n      resolve();\r\n      return defer.promise( obj );\r\n    }\r\n  });\r\n\r\n  return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/main',[\r\n    \"./core\",\r\n    \"./ajax\",\r\n    \"./callbacks\",\r\n    \"./deferred\",\r\n    \"./queue\",\r\n\t\"skylark-utils/widgets\"    \r\n], function($) {\r\n    return $;\r\n});\r\n\ndefine('skylark-jquery', ['skylark-jquery/main'], function (main) { return main; });\n\n"]}