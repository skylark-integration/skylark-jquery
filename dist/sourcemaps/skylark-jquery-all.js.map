{"version":3,"sources":["skylark-jquery-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","get","context","relMap","localRequire","intakeDefines","defined","jQuery","$","skylark","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","this","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","each","callback","undef","flatten","isArrayLike","result","j","funcArg","arg","idx","payload","isFunction","getQueryParams","url","location","href","segs","params","queryParam","nv","grep","out","has","path","inArray","indexOf","inherit","ctor","f","prototype","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","isDefined","Node","isInstanceOf","Number","String","Boolean","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","noop","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","PGLISTENERS","Symbol","deepEq","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","f1","extendClass","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","defineProperty","serialMixins","mixins","clss","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","delegate","TMP","getAbsoluteUrl","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","added","state","isResolved","isRejected","then","onResolved","onRejected","onProgress","progress","__ctx__","always","handler","done","fail","pipe","resolveWith","_resolved","listener","error","reason","rejectWith","_rejected","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","SimpleQueryEngine","query","arr","cache","buildFn","execute","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","matches","QueryResults","addIterativeMethod","method","isPromise","async","parallel","rets","func","series","waterful","ArrayStore","queryEngine","idProperty","getIdentity","put","Math","random","overwrite","add","setData","identifier","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","toUpperCase","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","deferred","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","Restful","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","camelCase","n","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","matched","RegExp","cssPropName","support","maybeAddPx","cssNumber","classRE","classReCache","node","svg","baseVal","disabled","elm","dom","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","styler","css","isInvisible","hide","addClass","names","re","property","computedStyle","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","placing","refNode","nextSibling","insertBefore","append","contents","contentDocument","childNodes","tag","setAttribute","createFragment","singleTagRE","$1","fragmentRE","containers","container","innerHTML","isIE","getAttribs","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","doc","empty","hasChildNodes","firstChild","fullScreen","el","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","fulledEl","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","overlayDiv","position","top","left","width","height","zIndex","console","warn","children","oldNode","replaceChild","throb","timer","time","throbber","textNode","nodeValue","end","traverse","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","ancestors","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","descendant","querySelector","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","enabled","even","focus","activeElement","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","isArrayFilter","radio","checkbox","file","image","submit","reset","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","cleanData","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","createProxy","originalEvent","ignoreProperties","$this","findHandler","unregister","ready","register","stop","keyCode","preventDefault","stopPropagation","evented","Event","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","backspace","comma","down","enter","home","page_down","page_up","period","right","space","tab","up","special","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","parseInt","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","exec","wrapper_node_operation","argType","toArray","is","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","replaceClass","newClass","oldClass","jquery","extend","parseJSON","serializeArray","field","encodeURIComponent","bind","triggerHandler","undelegate","live","die","unbind","moveto","uuid","expr","filters","createPseudo","step","setOffset","curTop","curLeft","curElem","curOffset","curCSSTop","curCSSLeft","calculatePosition","curPosition","using","parseHTML","uniqueSort","unique","parseArguments","addToPrefiltersOrTransports","dataTypeExpression","dataTypes","rnotwhite","ajaxJSONP","responseData","abortTimeout","_callbackName","jsonpCallback","callbackName","originalCallback","errorType","head","ajaxSettings","ajax","hasPlaceholder","jsonp","getJSON","prefilters","transports","ajaxPrefilter","ajaxTransport","ajaxSetup","settings","Callbacks","memory","firing","firingStart","firingLength","firingIndex","list","once","fire","stopOnFalse","disable","lock","locked","fireWith","_p","isArraylike","Data","expando","core_rnotwhite","core_deletedIds","core_push","owner","descriptor","unlock","defineProperties","access","stored","camel","hasData","discard","data_priv","dequeue","startLength","hooks","_queueHooks","merge","second","setter","clearQueue","draggable","Draggable","droppable","Droppable","dnd","DndManager","prepare","dragSource","dragHandle","draggingOffsetX","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setDragImage","effectAllowed","e1","over","dropped","manager","handle","hoverClass","activeClass","acceptable","_params","e2","overElm","dropEffect","dropzone","droppedCallback","enterdCount","types","webkitGetAsEntry","getAsEntry","webentry","files","pastezone","pastedCallback","pasted","clipboardData","getAsFile","picker","selectFiles","pickedFiles","maxFileSize","fileSelected","directory","picked","fileInput","onchange","entries","webkitEntries","webkitdirectory","upload","initDataSettings","o","chunkedUpload","initXHRData","formData","multipart","paramName","contentRange","blob","uploadName","encodeURI","getUploadedBytes","jqXHR","range","upperBytesPos","BitrateTimer","timestamp","Date","now","getTime","loaded","bitrate","getBitrate","timeDiff","testOnly","uploadedBytes","fs","ub","mcs","maxChunkSize","blobSlice","dfd","i18n","_getXHRPromise","currentLoaded","_progress","chunkSize","textStatus","lengthComputable","errorThrown","xoptions","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","form","fileupload","process","webkitSlice","mozSlice","_bitrateTimer","jqXhr","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","filer","readFile","reader","FileReader","onload","onerror","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","createObjectURL","_delegator","domNode","HTMLElement","VisualElement","batch","action","Velm","widgets","defineWidgetClass","delegateEventSplitter","Widget","_ensureElement","$el","render","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","_createElement","_setAttributes","main"],"mappings":"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ACAytB,MAAA,SAAApzB,EAAAqzB,EAAA52C,GAMA,MALAujB,GAAAtjB,QAAA,SAAA2gB,GACA,GAAAI,GAAAJ,YAAA81B,GAAA91B,EAAAsI,EAAAtI,EACAI,GAAA41B,GAAA12C,MAAA8gB,EAAAhhB,KAGAiC,MAGAsnB,KAAA,GAAAmtB,GAAA1nC,SAAAuS,MAEAm1B,cAAAA,EAEA9nC,QAAA,SAAA9F,EAAAtF,GACA,GAAAL,KAEAA,GAAA2F,GAAAtF,EAEAkzC,EAAA9nC,QAAAzL,IAGA0L,SAAA,SAAAsT,EAAA9hB,GACA,GAAA8C,KAEAgf,GAAAliB,QAAA,SAAA6I,GACA3F,EAAA2F,GAAAytC,EAAAl2C,EAAAyI,GAAAzI,KAGAq2C,EAAA9nC,QAAAzL,MAKA+lB,EAAAra,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACAojB,GAGA/I,EAAAra,UACA,YACA,aACA6+B,GAIAxkB,EAAAra,UACA,MACA,KACA,MACA,YACA,WACA4mB,GAGAvM,EAAAra,UACA,SACA,YACAwmC,GAGAnsB,EAAAra,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACA6hB,GAMAxH,EAAAiB,KAAA,SAAAlY,GACA,MAAA,SAAAA,EACAhQ,KAAAsnB,KAEAtnB,KAAAsnB,KAAAU,WAAAhY,IAKAiX,EAAAra,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACAoyB,GAIA/X,EAAAra,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACAsxB,GAGAjX,EAAAra,UACA,YACA,aACA6+B,GAIAxkB,EAAAra,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,cACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAuZ,GAGAc,EAAAra,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAiT,EAIA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","file":"../skylark-jquery-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }),\r\n           added = {\r\n                state : function() {\r\n                    if (self.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (self.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                always: function(handler) {\r\n                    //this.done(handler);\r\n                    //this.fail(handler);\r\n                    this.then(handler,handler);\r\n                    return this;\r\n                },\r\n                done : function(handler) {\r\n                    return this.then(handler);\r\n                },\r\n                fail : function(handler) { \r\n                    //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n                    return this.then(null,handler);\r\n                }, \r\n                progress : function(handler) {\r\n                    self[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        mixin(p,added);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n//        } else if (!nativePromise) {\r\n//            var deferred = new Deferred(valueOrPromise.cancel);\r\n//            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n//            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n    var ArrayStore = createClass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = String.substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n\r\n\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent,mixins, options) {\r\n            return createClass(props, parent, mixins,options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        Restful: Restful,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(skylark, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } +\r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = this.size(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display the matched elements.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide the matched elements.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the current vertical position of the scroll bar for the first element in the set of matched elements or set the vertical position of the scroll bar for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide the matched elements.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of the matched elements.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display the matched elements by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide the matched elements by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide the matched elements by animating their opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display the matched elements with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /*   \r\n     * Hide the matched elements with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    /*   \r\n     * Display or hide the matched elements with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown: slideDown,\r\n        slideToggle: slideToggle,\r\n        slideUp: slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-jquery/core',[\r\n\t\"skylark-utils/skylark\",\r\n\t\"skylark-utils/browser\",\r\n\t\"skylark-utils/langx\",\r\n\t\"skylark-utils/noder\",\r\n\t\"skylark-utils/datax\",\r\n\t\"skylark-utils/eventer\",\r\n\t\"skylark-utils/finder\",\r\n\t\"skylark-utils/fx\",\r\n\t\"skylark-utils/styler\",\r\n\t\"skylark-utils/query\"\r\n],function(skylark,browser,langx,noder,datax,eventer,finder,fx,styler,query){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n    (function($){\r\n\t    $.fn.jquery = '2.2.0';\r\n\r\n\t    $.camelCase = langx.camelCase;\r\n\r\n\t\t$.cleanData = function( elems ) {\r\n\t\t\tvar elem,\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\r\n\t\t\t\tdatax.cleanData(elem);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.removeData = function(elm,name) {\r\n\t\t\tdatax.removeData(elm,name);\r\n\t\t}\r\n\t\r\n\t    $.each = langx.each;\r\n\r\n\t    $.extend = function(target) {\r\n\t        var deep, args = slice.call(arguments, 1);\r\n\t        if (typeof target == 'boolean') {\r\n\t            deep = target\r\n\t            target = args.shift()\r\n\t        }\r\n\t        if (args.length == 0) {\r\n\t            args = [target];\r\n\t            target = this;\r\n\t        }\r\n\t        args.forEach(function(arg) {\r\n\t        \tlangx.mixin(target, arg, deep);\r\n\t        });\r\n\t        return target;\r\n\t    };\r\n\r\n\t    $.grep = function(elements, callback) {\r\n\t        return filter.call(elements, callback)\r\n\t    };\r\n\r\n\t    $.attr = function(elm,name) {\r\n\t    \treturn datax.attr(elm,name);\r\n\t    };\r\n\r\n\t    $.isArray = langx.isArray;\r\n\t    $.isEmptyObject = langx.isEmptyObject;\r\n\t    $.isFunction = langx.isFunction;\r\n\t    $.isWindow = langx.isWindow;\r\n\t    $.isPlainObject = langx.isPlainObject;\r\n\r\n\t    $.inArray = langx.inArray;\r\n\r\n\t    $.makeArray = langx.makeArray;\r\n\t    $.map = langx.map;  // The behavior is somewhat different from the original jquery.\r\n\r\n\t    $.noop = function() {\r\n\t    };\r\n\r\n\t    $.parseJSON = window.JSON.parse;\r\n\r\n\t    $.proxy = langx.proxy;\r\n\r\n\t    $.trim = langx.trim;\r\n\t    $.type = langx.type;\r\n\r\n\t    $.fn.extend = function(props) {\r\n\t        langx.mixin($.fn, props);\r\n\t    };\r\n\r\n\t    $.fn.serializeArray = function() {\r\n\t        var name, type, result = [],\r\n\t            add = function(value) {\r\n\t                if (value.forEach) return value.forEach(add)\r\n\t                result.push({ name: name, value: value })\r\n\t            }\r\n\t        if (this[0]) langx.each(this[0].elements, function(_, field) {\r\n\t            type = field.type, name = field.name\r\n\t            if (name && field.nodeName.toLowerCase() != 'fieldset' &&\r\n\t                !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&\r\n\t                ((type != 'radio' && type != 'checkbox') || field.checked))\r\n\t                add($(field).val())\r\n\t        })\r\n\t        return result\r\n\t    };\r\n\r\n\t    $.fn.serialize = function() {\r\n\t        var result = []\r\n\t        this.serializeArray().forEach(function(elm) {\r\n\t            result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\r\n\t        })\r\n\t        return result.join('&')\r\n\t    };\r\n    })(query);\r\n\r\n    (function($){\r\n        $.Event = function Event(src, props) {\r\n            if (langx.isString(src)) {\r\n            \tvar type = src;\r\n            \treturn eventer.create(type, props);\r\n\t        }\r\n            return eventer.proxy(src, props);\r\n        };\r\n\r\n        $.event = {};\r\n\r\n\t    $.event.special = eventer.special;\r\n\r\n\t    $.fn.submit = function(callback) {\r\n\t        if (0 in arguments) this.bind('submit', callback)\r\n\t        else if (this.length) {\r\n\t            var event = $.Event('submit')\r\n\t            this.eq(0).trigger(event)\r\n\t            if (!event.isDefaultPrevented()) this.get(0).submit()\r\n\t        }\r\n\t        return this\r\n\t    };\r\n\r\n\t    // event\r\n\t    $.fn.triggerHandler = $.fn.trigger;\r\n\r\n\t    $.fn.delegate = function(selector, event, callback) {\r\n\t        return this.on(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.undelegate = function(selector, event, callback) {\r\n\t        return this.off(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.live = function(event, callback) {\r\n\t        $(document.body).delegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.die = function(event, callback) {\r\n\t        $(document.body).undelegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.bind = function(event, selector, data, callback) {\r\n\t        return this.on(event, selector, data, callback)\r\n\t    };\r\n\r\n\t    $.fn.unbind = function(event, callback) {\r\n\t        return this.off(event, callback)\r\n\t    };\r\n\r\n\t    $.fn.ready = function(callback) {\r\n\t        eventer.ready(callback);\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.stop = function() {\r\n\t        // todo\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.moveto = function(x, y) {\r\n\t        return this.animate({\r\n\t            left: x + \"px\",\r\n\t            top: y + \"px\"\r\n\t        }, 0.4);\r\n\r\n\t    };\r\n\r\n\t    $.ready = eventer.ready;\r\n\r\n\t    $.on = eventer.on;\r\n\r\n\t    $.off = eventer.off;\r\n    })(query);\r\n\r\n    (function($){\r\n\t    // plugin compatibility\r\n\t    $.uuid = 0;\r\n\t    $.support = browser.support;\r\n\t    $.expr = {};\r\n\r\n\t    $.expr[\":\"] = $.expr.pseudos = $.expr.filters = finder.pseudos;\r\n\r\n\t    $.expr.createPseudo = function(fn) {\r\n\t    \treturn fn;\r\n\t    };\r\n\r\n\t    $.cssHooks = styler.cssHooks;\r\n\r\n\t    $.contains = noder.contains;\r\n\r\n\t    $.css = styler.css;\r\n\r\n\t    $.data = datax.data;\r\n\r\n\t    $.fx = fx;\r\n\t    $.fx.step = {\r\n\r\n        };\r\n\r\n        $.easing = {};\r\n\r\n\t    $.offset = {};\r\n\t    $.offset.setOffset = function(elem, options, i) {\r\n\t        var position = $.css(elem, \"position\");\r\n\r\n\t        // set position first, in-case top/left are set even on static elem\r\n\t        if (position === \"static\") {\r\n\t            elem.style.position = \"relative\";\r\n\t        }\r\n\r\n\t        var curElem = $(elem),\r\n\t            curOffset = curElem.offset(),\r\n\t            curCSSTop = $.css(elem, \"top\"),\r\n\t            curCSSLeft = $.css(elem, \"left\"),\r\n\t            calculatePosition = (position === \"absolute\" || position === \"fixed\") && $.inArray(\"auto\", [curCSSTop, curCSSLeft]) > -1,\r\n\t            props = {},\r\n\t            curPosition = {},\r\n\t            curTop, curLeft;\r\n\r\n\t        // need to be able to calculate position if either top or left is auto and position is either absolute or fixed\r\n\t        if (calculatePosition) {\r\n\t            curPosition = curElem.position();\r\n\t            curTop = curPosition.top;\r\n\t            curLeft = curPosition.left;\r\n\t        } else {\r\n\t            curTop = parseFloat(curCSSTop) || 0;\r\n\t            curLeft = parseFloat(curCSSLeft) || 0;\r\n\t        }\r\n\r\n\t        if ($.isFunction(options)) {\r\n\t            options = options.call(elem, i, curOffset);\r\n\t        }\r\n\r\n\t        if (options.top != null) {\r\n\t            props.top = (options.top - curOffset.top) + curTop;\r\n\t        }\r\n\t        if (options.left != null) {\r\n\t            props.left = (options.left - curOffset.left) + curLeft;\r\n\t        }\r\n\r\n\t        if (\"using\" in options) {\r\n\t            options.using.call(elem, props);\r\n\t        } else {\r\n\t            curElem.css(props);\r\n\t        }\r\n\t    };\r\n    })(query);\r\n\r\n    query.parseHTML = function(html) {\r\n        return  noder.createFragment(html);\r\n    };\r\n\r\n    query.uniqueSort = query.unique = langx.uniq;\r\n\r\n    query.skylark = skylark;\r\n\r\n    return window.jQuery = window.$ = query;\r\n});\r\n\ndefine('skylark-jquery/ajax',[\r\n    \"./core\",\r\n    \"skylark-langx/langx\"\r\n], function($,langx) {\r\n    var jsonpID = 0;\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') return url\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n    }\r\n    \r\n    $.ajaxJSONP = function(options) {\r\n        var deferred = new langx.Deferred();\r\n        var _callbackName = options.jsonpCallback,\r\n            callbackName = ($.isFunction(_callbackName) ?\r\n                _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\r\n            script = document.createElement('script'),\r\n            originalCallback = window[callbackName],\r\n            responseData,\r\n            abort = function(errorType) {\r\n                $(script).triggerHandler('error', errorType || 'abort')\r\n            },\r\n            xhr = { abort: abort },\r\n            abortTimeout;\r\n\r\n        for (var key in options.data) {\r\n            options.url = appendQuery(options.url, key + \"=\" + options.data[key]);\r\n        }\r\n         \r\n//        if (deferred) deferred.promise(xhr)\r\n\r\n        $(script).on('load error', function(e, errorType) {\r\n            clearTimeout(abortTimeout)\r\n            $(script).off().remove()\r\n\r\n            if (e.type == 'error' || !responseData) {\r\n                deferred.reject(e);\r\n            } else {\r\n                deferred.resolve(responseData[0],200,xhr);\r\n            }\r\n\r\n            window[callbackName] = originalCallback\r\n            if (responseData && $.isFunction(originalCallback))\r\n                originalCallback(responseData[0])\r\n\r\n            originalCallback = responseData = undefined\r\n        })\r\n\r\n        window[callbackName] = function() {\r\n            responseData = arguments\r\n        }\r\n\r\n        script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\r\n        document.head.appendChild(script)\r\n\r\n        if (options.timeout > 0) abortTimeout = setTimeout(function() {\r\n            abort('timeout')\r\n        }, options.timeout)\r\n\r\n        return deferred;\r\n    }\r\n\r\n    $.ajaxSettings = langx.Xhr.defaultOptions;\r\n\r\n    $.ajaxSettings.xhr = function() {\r\n        return new window.XMLHttpRequest()\r\n    };\r\n\r\n    $.ajax = function(options) {\r\n        if ('jsonp' == options.dataType) {\r\n            var hasPlaceholder = /\\?.+=\\?/.test(options.url);\r\n\r\n            if (!hasPlaceholder)\r\n                options.url = appendQuery(options.url,\r\n                    options.jsonp ? (options.jsonp + '=?') : options.jsonp === false ? '' : 'callback=?')\r\n            return $.ajaxJSONP(options);\r\n        }\r\n\r\n        var p = langx.Xhr.request(options.url,options);\r\n        if (options.success) {\r\n            p = p.then(options.success,options.error);\r\n        }\r\n        return p;\r\n    };\r\n\r\n    // handle optional data/success arguments\r\n    function parseArguments(url, data, success, dataType) {\r\n        if ($.isFunction(url)) {\r\n            dataType = data, success = url, data = undefined,url = undefined;\r\n        } else if ($.isFunction(data)) {\r\n            dataType = success, success = data, data = undefined;\r\n        } \r\n        if (!$.isFunction(success)) dataType = success, success = undefined\r\n        return {\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            dataType: dataType\r\n        }\r\n    }\r\n\r\n    $.get = function( /* url, data, success, dataType */ ) {\r\n        return $.ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    $.post = function( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.type = 'POST'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    $.getJSON = function( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.dataType = 'json'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    $.fn.load = function(url, data, success) {\r\n        if (!this.length) return this\r\n        var self = this,\r\n            options = parseArguments(url, data, success),\r\n            parts = options.url && options.url.split(/\\s/),\r\n            selector,\r\n            callback = options.success\r\n        if (parts && parts.length > 1) options.url = parts[0], selector = parts[1]\r\n        options.success = function(response) {\r\n            self.html(selector ?\r\n                $('<div>').html(response.replace(rscript, \"\")).find(selector) : response)\r\n            callback && callback.apply(self, arguments)\r\n        }\r\n        $.ajax(options)\r\n        return this\r\n    }\r\n\r\n    $.param = langx.Xhr.param;\r\n\r\n\r\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n    function addToPrefiltersOrTransports(structure) {\r\n\r\n        // dataTypeExpression is optional and defaults to \"*\"\r\n        return function(dataTypeExpression, func) {\r\n\r\n            if (typeof dataTypeExpression !== \"string\") {\r\n                func = dataTypeExpression;\r\n                dataTypeExpression = \"*\";\r\n            }\r\n\r\n            var dataType,\r\n                i = 0,\r\n                dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\r\n\r\n            if (jQuery.isFunction(func)) {\r\n\r\n                // For each dataType in the dataTypeExpression\r\n                while ((dataType = dataTypes[i++])) {\r\n\r\n                    // Prepend if requested\r\n                    if (dataType[0] === \"+\") {\r\n                        dataType = dataType.slice(1) || \"*\";\r\n                        (structure[dataType] = structure[dataType] || []).unshift(func);\r\n\r\n                        // Otherwise append\r\n                    } else {\r\n                        (structure[dataType] = structure[dataType] || []).push(func);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    var\r\n        prefilters = {},\r\n        transports = {},\r\n        rnotwhite = (/\\S+/g);\r\n\r\n    $.ajaxPrefilter = addToPrefiltersOrTransports(prefilters);\r\n    $.ajaxTransport = addToPrefiltersOrTransports(transports);\r\n    $.ajaxSetup = function(target, settings) {\r\n        langx.mixin(langx.Xhr.defaultOptions,target,settings);\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/callbacks',[\r\n    \"./core\"\r\n], function($) {\r\n\r\n    //     This module is borrow from zepto.callback.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    // Create a collection of callbacks to be fired in a sequence, with configurable behaviour\r\n    // Option flags:\r\n    //   - once: Callbacks fired at most one time.\r\n    //   - memory: Remember the most recent context and arguments\r\n    //   - stopOnFalse: Cease iterating over callback list\r\n    //   - unique: Permit adding at most one instance of the same callback\r\n    $.Callbacks = function(options) {\r\n        options = $.extend({}, options)\r\n\r\n        var memory, // Last fire value (for non-forgettable lists)\r\n            fired, // Flag to know if list was already fired\r\n            firing, // Flag to know if list is currently firing\r\n            firingStart, // First callback to fire (used internally by add and fireWith)\r\n            firingLength, // End of the loop when firing\r\n            firingIndex, // Index of currently firing callback (modified by remove if needed)\r\n            list = [], // Actual callback list\r\n            stack = !options.once && [], // Stack of fire calls for repeatable lists\r\n            fire = function(data) {\r\n                memory = options.memory && data\r\n                fired = true\r\n                firingIndex = firingStart || 0\r\n                firingStart = 0\r\n                firingLength = list.length\r\n                firing = true\r\n                for (; list && firingIndex < firingLength; ++firingIndex) {\r\n                    if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\r\n                        memory = false\r\n                        break\r\n                    }\r\n                }\r\n                firing = false\r\n                if (list) {\r\n                    if (stack) stack.length && fire(stack.shift())\r\n                    else if (memory) list.length = 0\r\n                    else Callbacks.disable()\r\n                }\r\n            },\r\n\r\n            Callbacks = {\r\n                add: function() {\r\n                    if (list) {\r\n                        var start = list.length,\r\n                            add = function(args) {\r\n                                $.each(args, function(_, arg) {\r\n                                    if (typeof arg === \"function\") {\r\n                                        if (!options.unique || !Callbacks.has(arg)) list.push(arg)\r\n                                    } else if (arg && arg.length && typeof arg !== 'string') add(arg)\r\n                                })\r\n                            }\r\n                        add(arguments)\r\n                        if (firing) firingLength = list.length\r\n                        else if (memory) {\r\n                            firingStart = start\r\n                            fire(memory)\r\n                        }\r\n                    }\r\n                    return this\r\n                },\r\n                remove: function() {\r\n                    if (list) {\r\n                        $.each(arguments, function(_, arg) {\r\n                            var index\r\n                            while ((index = $.inArray(arg, list, index)) > -1) {\r\n                                list.splice(index, 1)\r\n                                // Handle firing indexes\r\n                                if (firing) {\r\n                                    if (index <= firingLength) --firingLength\r\n                                    if (index <= firingIndex) --firingIndex\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    return this\r\n                },\r\n                has: function(fn) {\r\n                    return !!(list && (fn ? $.inArray(fn, list) > -1 : list.length))\r\n                },\r\n                empty: function() {\r\n                    firingLength = list.length = 0\r\n                    return this\r\n                },\r\n                disable: function() {\r\n                    list = stack = memory = undefined\r\n                    return this\r\n                },\r\n                disabled: function() {\r\n                    return !list\r\n                },\r\n                lock: function() {\r\n                    stack = undefined;\r\n                    if (!memory) Callbacks.disable()\r\n                    return this\r\n                },\r\n                locked: function() {\r\n                    return !stack\r\n                },\r\n                fireWith: function(context, args) {\r\n                    if (list && (!fired || stack)) {\r\n                        args = args || []\r\n                        args = [context, args.slice ? args.slice() : args]\r\n                        if (firing) stack.push(args)\r\n                        else fire(args)\r\n                    }\r\n                    return this\r\n                },\r\n                fire: function() {\r\n                    return Callbacks.fireWith(this, arguments)\r\n                },\r\n                fired: function() {\r\n                    return !!fired\r\n                }\r\n            }\r\n\r\n        return Callbacks\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/deferred',[\r\n    \"./core\",\r\n    \"skylark-langx/langx\"\r\n], function($,langx) {\r\n\r\n    $.Deferred = function() {\r\n        var d = new langx.Deferred(),\r\n            _p = d.promise;\r\n        d.promise = function() {\r\n            return _p;\r\n        }\r\n        return d;\r\n    };\r\n\r\n    $.when = langx.Deferred.when;\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/queue',[\r\n    \"skylark-langx/langx\",\r\n    \"./core\",\r\n    \"./callbacks\"\r\n], function(langx, $) {\r\n\r\n // jQuery Data object\r\n  var rbrace = /(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,\r\n      rmultiDash = /([A-Z])/g,\r\n      expando = \"Sky\" + ( '1.0' + Math.random() ).replace( /\\D/g, \"\"),\r\n      optionsCache = {},\r\n      core_rnotwhite = /\\S+/g,\r\n      core_deletedIds = [],\r\n      core_push = core_deletedIds.push;\r\n\r\n// Convert String-formatted options into Object-formatted ones and store in cache\r\n  function createOptions( options ) {\r\n    var object = optionsCache[ options ] = {};\r\n    $.each( options.match( core_rnotwhite ) || [], function( _, flag ) {\r\n      object[ flag ] = true;\r\n    });\r\n    return object;\r\n  }\r\n\r\n  function isArraylike( obj ) {\r\n    var length = obj.length,\r\n        type = $.type( obj );\r\n\r\n    if ( $.isWindow( obj ) ) {\r\n      return false;\r\n    }\r\n\r\n    if ( obj.nodeType === 1 && length ) {\r\n      return true;\r\n    }\r\n\r\n    return type === \"array\" || type !== \"function\" &&\r\n        ( length === 0 ||\r\n            typeof length === \"number\" && length > 0 && ( length - 1 ) in obj );\r\n  }\r\n\r\n  \r\n\r\n  function Data() {\r\n    // Support: Android < 4,\r\n    // Old WebKit does not have Object.preventExtensions/freeze method,\r\n    // return new empty object instead with no [[set]] accessor\r\n    Object.defineProperty( this.cache = {}, 0, {\r\n      get: function() {\r\n        return {};\r\n      }\r\n    });\r\n\r\n    this.expando = expando + Math.random();\r\n  }\r\n\r\n  Data.uid = 1;\r\n\r\n  Data.accepts = function( owner ) {\r\n    // Accepts only:\r\n    //  - Node\r\n    //    - Node.ELEMENT_NODE\r\n    //    - Node.DOCUMENT_NODE\r\n    //  - Object\r\n    //    - Any\r\n    return owner.nodeType ?\r\n        owner.nodeType === 1 || owner.nodeType === 9 : true;\r\n  };\r\n\r\n  Data.prototype = {\r\n    key: function( owner ) {\r\n      // We can accept data for non-element nodes in modern browsers,\r\n      // but we should not, see #8335.\r\n      // Always return the key for a frozen object.\r\n      if ( !Data.accepts( owner ) ) {\r\n        return 0;\r\n      }\r\n\r\n      var descriptor = {},\r\n      // Check if the owner object already has a cache key\r\n          unlock = owner[ this.expando ];\r\n\r\n      // If not, create one\r\n      if ( !unlock ) {\r\n        unlock = Data.uid++;\r\n\r\n        // Secure it in a non-enumerable, non-writable property\r\n        try {\r\n          descriptor[ this.expando ] = { value: unlock };\r\n          Object.defineProperties( owner, descriptor );\r\n\r\n          // Support: Android < 4\r\n          // Fallback to a less secure definition\r\n        } catch ( e ) {\r\n          descriptor[ this.expando ] = unlock;\r\n          $.extend( owner, descriptor );\r\n        }\r\n      }\r\n\r\n      // Ensure the cache object\r\n      if ( !this.cache[ unlock ] ) {\r\n        this.cache[ unlock ] = {};\r\n      }\r\n\r\n      return unlock;\r\n    },\r\n    set: function( owner, data, value ) {\r\n      var prop,\r\n      // There may be an unlock assigned to this node,\r\n      // if there is no entry for this \"owner\", create one inline\r\n      // and set the unlock as though an owner entry had always existed\r\n          unlock = this.key( owner ),\r\n          cache = this.cache[ unlock ];\r\n\r\n      // Handle: [ owner, key, value ] args\r\n      if ( typeof data === \"string\" ) {\r\n        cache[ data ] = value;\r\n\r\n        // Handle: [ owner, { properties } ] args\r\n      } else {\r\n        // Fresh assignments by object are shallow copied\r\n        if ( $.isEmptyObject( cache ) ) {\r\n          $.extend( this.cache[ unlock ], data );\r\n          // Otherwise, copy the properties one-by-one to the cache object\r\n        } else {\r\n          for ( prop in data ) {\r\n            cache[ prop ] = data[ prop ];\r\n          }\r\n        }\r\n      }\r\n      return cache;\r\n    },\r\n    get: function( owner, key ) {\r\n      // Either a valid cache is found, or will be created.\r\n      // New caches will be created and the unlock returned,\r\n      // allowing direct access to the newly created\r\n      // empty data object. A valid owner object must be provided.\r\n      var cache = this.cache[ this.key( owner ) ];\r\n\r\n      return key === undefined ?\r\n          cache : cache[ key ];\r\n    },\r\n    access: function( owner, key, value ) {\r\n      var stored;\r\n      // In cases where either:\r\n      //\r\n      //   1. No key was specified\r\n      //   2. A string key was specified, but no value provided\r\n      //\r\n      // Take the \"read\" path and allow the get method to determine\r\n      // which value to return, respectively either:\r\n      //\r\n      //   1. The entire cache object\r\n      //   2. The data stored at the key\r\n      //\r\n      if ( key === undefined ||\r\n          ((key && typeof key === \"string\") && value === undefined) ) {\r\n\r\n        stored = this.get( owner, key );\r\n\r\n        return stored !== undefined ?\r\n            stored : this.get( owner, $.camelCase(key) );\r\n      }\r\n\r\n      // [*]When the key is not a string, or both a key and value\r\n      // are specified, set or extend (existing objects) with either:\r\n      //\r\n      //   1. An object of properties\r\n      //   2. A key and value\r\n      //\r\n      this.set( owner, key, value );\r\n\r\n      // Since the \"set\" path can have two possible entry points\r\n      // return the expected data based on which path was taken[*]\r\n      return value !== undefined ? value : key;\r\n    },\r\n    remove: function( owner, key ) {\r\n      var i, name, camel,\r\n          unlock = this.key( owner ),\r\n          cache = this.cache[ unlock ];\r\n\r\n      if ( key === undefined ) {\r\n        this.cache[ unlock ] = {};\r\n\r\n      } else {\r\n        // Support array or space separated string of keys\r\n        if ( $.isArray( key ) ) {\r\n          // If \"name\" is an array of keys...\r\n          // When data is initially created, via (\"key\", \"val\") signature,\r\n          // keys will be converted to camelCase.\r\n          // Since there is no way to tell _how_ a key was added, remove\r\n          // both plain key and camelCase key. #12786\r\n          // This will only penalize the array argument path.\r\n          name = key.concat( key.map( $.camelCase ) );\r\n        } else {\r\n          camel = $.camelCase( key );\r\n          // Try the string as a key before any manipulation\r\n          if ( key in cache ) {\r\n            name = [ key, camel ];\r\n          } else {\r\n            // If a key with the spaces exists, use it.\r\n            // Otherwise, create an array by matching non-whitespace\r\n            name = camel;\r\n            name = name in cache ?\r\n                [ name ] : ( name.match( core_rnotwhite ) || [] );\r\n          }\r\n        }\r\n\r\n        i = name.length;\r\n        while ( i-- ) {\r\n          delete cache[ name[ i ] ];\r\n        }\r\n      }\r\n    },\r\n    hasData: function( owner ) {\r\n      return !$.isEmptyObject(\r\n          this.cache[ owner[ this.expando ] ] || {}\r\n      );\r\n    },\r\n    discard: function( owner ) {\r\n      if ( owner[ this.expando ] ) {\r\n        delete this.cache[ owner[ this.expando ] ];\r\n      }\r\n    }\r\n  };\r\n\r\n  var data_priv = new Data();\r\n\r\n  $.extend($, {\r\n    queue: function( elem, type, data ) {\r\n      var queue;\r\n\r\n      if ( elem ) {\r\n        type = ( type || \"fx\" ) + \"queue\";\r\n        queue = data_priv.get( elem, type );\r\n\r\n        // Speed up dequeue by getting out quickly if this is just a lookup\r\n        if ( data ) {\r\n          if ( !queue || $.isArray( data ) ) {\r\n            queue = data_priv.access( elem, type, $.makeArray(data) );\r\n          } else {\r\n            queue.push( data );\r\n          }\r\n        }\r\n        return queue || [];\r\n      }\r\n    },\r\n\r\n    dequeue: function( elem, type ) {\r\n      type = type || \"fx\";\r\n\r\n      var queue = $.queue( elem, type ),\r\n          startLength = queue.length,\r\n          fn = queue.shift(),\r\n          hooks = $._queueHooks( elem, type ),\r\n          next = function() {\r\n            $.dequeue( elem, type );\r\n          };\r\n\r\n      // If the fx queue is dequeued, always remove the progress sentinel\r\n      if ( fn === \"inprogress\" ) {\r\n        fn = queue.shift();\r\n        startLength--;\r\n      }\r\n\r\n      if ( fn ) {\r\n\r\n        // Add a progress sentinel to prevent the fx queue from being\r\n        // automatically dequeued\r\n        if ( type === \"fx\" ) {\r\n          queue.unshift( \"inprogress\" );\r\n        }\r\n\r\n        // clear up the last queue stop function\r\n        delete hooks.stop;\r\n        fn.call( elem, next, hooks );\r\n      }\r\n\r\n      if ( !startLength && hooks ) {\r\n        hooks.empty.fire();\r\n      }\r\n    },\r\n\r\n    // not intended for public consumption - generates a queueHooks object, or returns the current one\r\n    _queueHooks: function( elem, type ) {\r\n      var key = type + \"queueHooks\";\r\n      return data_priv.get( elem, key ) || data_priv.access( elem, key, {\r\n        empty: $.Callbacks(\"once memory\").add(function() {\r\n          data_priv.remove( elem, [ type + \"queue\", key ] );\r\n        })\r\n      });\r\n    },\r\n\r\n    // array operations\r\n    makeArray: function( arr, results ) {\r\n      var ret = results || [];\r\n\r\n      if ( arr != null ) {\r\n        if ( isArraylike( Object(arr) ) ) {\r\n          $.merge( ret,\r\n              typeof arr === \"string\" ?\r\n                  [ arr ] : arr\r\n          );\r\n        } else {\r\n          core_push.call( ret, arr );\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    },\r\n    merge: function( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n  });\r\n\r\n  $.extend($.fn, {\r\n    queue: function( type, data ) {\r\n      var setter = 2;\r\n\r\n      if ( typeof type !== \"string\" ) {\r\n        data = type;\r\n        type = \"fx\";\r\n        setter--;\r\n      }\r\n\r\n      if ( arguments.length < setter ) {\r\n        return $.queue( this[0], type );\r\n      }\r\n\r\n      return data === undefined ?\r\n          this :\r\n          this.each(function() {\r\n            var queue = $.queue( this, type, data );\r\n\r\n            // ensure a hooks for this queue\r\n            $._queueHooks( this, type );\r\n\r\n            if ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\r\n              $.dequeue( this, type );\r\n            }\r\n          });\r\n    },\r\n    dequeue: function( type ) {\r\n      return this.each(function() {\r\n        $.dequeue( this, type );\r\n      });\r\n    },\r\n    // Based off of the plugin by Clint Helfers, with permission.\r\n    // http://blindsignals.com/index.php/2009/07/jquery-delay/\r\n    delay: function( time, type ) {\r\n      time = $.fx ? $.fx.speeds[ time ] || time : time;\r\n      type = type || \"fx\";\r\n\r\n      return this.queue( type, function( next, hooks ) {\r\n        var timeout = setTimeout( next, time );\r\n        hooks.stop = function() {\r\n          clearTimeout( timeout );\r\n        };\r\n      });\r\n    },\r\n    clearQueue: function( type ) {\r\n      return this.queue( type || \"fx\", [] );\r\n    },\r\n    // Get a promise resolved when queues of a certain type\r\n    // are emptied (fx is the type by default)\r\n    promise: function( type, obj ) {\r\n      var tmp,\r\n          count = 1,\r\n          defer = $.Deferred(),\r\n          elements = this,\r\n          i = this.length,\r\n          resolve = function() {\r\n            if ( !( --count ) ) {\r\n              defer.resolveWith( elements, [ elements ] );\r\n            }\r\n          };\r\n\r\n      if ( typeof type !== \"string\" ) {\r\n        obj = type;\r\n        type = undefined;\r\n      }\r\n      type = type || \"fx\";\r\n\r\n      while( i-- ) {\r\n        tmp = data_priv.get( elements[ i ], type + \"queueHooks\" );\r\n        if ( tmp && tmp.empty ) {\r\n          count++;\r\n          tmp.empty.add( resolve );\r\n        }\r\n      }\r\n      resolve();\r\n      return defer.promise( obj );\r\n    }\r\n  });\r\n\r\n  return $;\r\n\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder, datax, finder, geom, eventer, styler) {\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n        klassName: \"DndManager\",\r\n\r\n        init: function() {\r\n\r\n        },\r\n\r\n        prepare: function(draggable) {\r\n            var e = eventer.create(\"preparing\", {\r\n                dragSource: draggable.dragSource,\r\n                dragHandle: draggable.dragHandle\r\n            });\r\n            draggable.trigger(e);\r\n            draggable.dragSource = e.dragSource;\r\n        },\r\n\r\n        start: function(draggable, event) {\r\n\r\n            var p = geom.pagePosition(draggable.dragSource);\r\n            this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n            this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n            var e = eventer.create(\"started\", {\r\n                elm: draggable.elm,\r\n                dragSource: draggable.dragSource,\r\n                dragHandle: draggable.dragHandle,\r\n                ghost: null,\r\n\r\n                transfer: {}\r\n            });\r\n\r\n            draggable.trigger(e);\r\n\r\n\r\n            this.dragging = draggable;\r\n\r\n            if (draggable.draggingClass) {\r\n                styler.addClass(draggable.dragSource, draggable.draggingClass);\r\n            }\r\n\r\n            this.draggingGhost = e.ghost;\r\n            if (!this.draggingGhost) {\r\n                this.draggingGhost = draggable.elm;\r\n            }\r\n\r\n            this.draggingTransfer = e.transfer;\r\n            if (this.draggingTransfer) {\r\n\r\n                langx.each(this.draggingTransfer, function(key, value) {\r\n                    event.dataTransfer.setData(key, value);\r\n                });\r\n            }\r\n\r\n            event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n            event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n            var e1 = eventer.create(\"dndStarted\", {\r\n                elm: e.elm,\r\n                dragSource: e.dragSource,\r\n                dragHandle: e.dragHandle,\r\n                ghost: e.ghost,\r\n                transfer: e.transfer\r\n            });\r\n\r\n            this.trigger(e1);\r\n        },\r\n\r\n        over: function() {\r\n\r\n        },\r\n\r\n        end: function(dropped) {\r\n            var dragging = this.dragging;\r\n            if (dragging) {\r\n                if (dragging.draggingClass) {\r\n                    styler.removeClass(dragging.dragSource, dragging.draggingClass);\r\n                }\r\n            }\r\n\r\n            var e = eventer.create(\"dndEnded\", {});\r\n            this.trigger(e);\r\n\r\n\r\n            this.dragging = null;\r\n            this.draggingTransfer = null;\r\n            this.draggingGhost = null;\r\n            this.draggingOffsetX = null;\r\n            this.draggingOffsetY = null;\r\n        }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n        klassName: \"Draggable\",\r\n\r\n        init: function(elm, params) {\r\n            var self = this;\r\n\r\n            self.elm = elm;\r\n            self.draggingClass = params.draggingClass || \"dragging\",\r\n                self.params = langx.clone(params);\r\n\r\n            [\"preparing\", \"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n                if (langx.isFunction(params[eventName])) {\r\n                    self.on(eventName, params[eventName]);\r\n                }\r\n            });\r\n\r\n\r\n            eventer.on(elm, {\r\n                \"mousedown\": function(e) {\r\n                    var params = self.params;\r\n                    if (params.handle) {\r\n                        self.dragHandle = finder.closest(e.target, params.handle);\r\n                        if (!self.dragHandle) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (params.source) {\r\n                        self.dragSource = finder.closest(e.target, params.source);\r\n                    } else {\r\n                        self.dragSource = self.elm;\r\n                    }\r\n                    manager.prepare(self);\r\n                    if (self.dragSource) {\r\n                        datax.attr(self.dragSource, \"draggable\", 'true');\r\n                    }\r\n                },\r\n\r\n                \"mouseup\": function(e) {\r\n                    if (self.dragSource) {\r\n                        //datax.attr(self.dragSource, \"draggable\", 'false');\r\n                        self.dragSource = null;\r\n                        self.dragHandle = null;\r\n                    }\r\n                },\r\n\r\n                \"dragstart\": function(e) {\r\n                    datax.attr(self.dragSource, \"draggable\", 'false');\r\n                    manager.start(self, e);\r\n                },\r\n\r\n                \"dragend\": function(e) {\r\n                    eventer.stop(e);\r\n\r\n                    if (!manager.dragging) {\r\n                        return;\r\n                    }\r\n\r\n                    manager.end(false);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n        klassName: \"Droppable\",\r\n\r\n        init: function(elm, params) {\r\n            var self = this,\r\n                draggingClass = params.draggingClass || \"dragging\",\r\n                hoverClass,\r\n                activeClass,\r\n                acceptable = true;\r\n\r\n            self.elm = elm;\r\n            self._params = params;\r\n\r\n            [\"started\", \"entered\", \"leaved\", \"dropped\", \"overing\"].forEach(function(eventName) {\r\n                if (langx.isFunction(params[eventName])) {\r\n                    self.on(eventName, params[eventName]);\r\n                }\r\n            });\r\n\r\n            eventer.on(elm, {\r\n                \"dragover\": function(e) {\r\n                    e.stopPropagation()\r\n\r\n                    if (!acceptable) {\r\n                        return\r\n                    }\r\n\r\n                    var e2 = eventer.create(\"overing\", {\r\n                        overElm: e.target,\r\n                        transfer: manager.draggingTransfer,\r\n                        acceptable: true\r\n                    });\r\n                    self.trigger(e2);\r\n\r\n                    if (e2.acceptable) {\r\n                        e.preventDefault() // allow drop\r\n\r\n                        e.dataTransfer.dropEffect = \"copyMove\";\r\n                    }\r\n\r\n                },\r\n\r\n                \"dragenter\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n\r\n                    var e2 = eventer.create(\"entered\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    e.stopPropagation()\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.addClass(elm, hoverClass)\r\n                    }\r\n                },\r\n\r\n                \"dragleave\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n                    if (!acceptable) return false\r\n\r\n                    var e2 = eventer.create(\"leaved\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    e.stopPropagation()\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.removeClass(elm, hoverClass);\r\n                    }\r\n                },\r\n\r\n                \"drop\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n\r\n                    eventer.stop(e); // stops the browser from redirecting.\r\n\r\n                    if (!manager.dragging) return\r\n\r\n                    // manager.dragging.elm.removeClass('dragging');\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.addClass(elm, hoverClass)\r\n                    }\r\n\r\n                    var e2 = eventer.create(\"dropped\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    manager.end(true)\r\n                }\r\n            });\r\n\r\n            manager.on(\"dndStarted\", function(e) {\r\n                var e2 = eventer.create(\"started\", {\r\n                    transfer: manager.draggingTransfer,\r\n                    acceptable: false\r\n                });\r\n\r\n                self.trigger(e2);\r\n\r\n                acceptable = e2.acceptable;\r\n                hoverClass = e2.hoverClass;\r\n                activeClass = e2.activeClass;\r\n\r\n                if (activeClass && acceptable) {\r\n                    styler.addClass(elm, activeClass);\r\n                }\r\n\r\n            }).on(\"dndEnded\", function(e) {\r\n                var e2 = eventer.create(\"ended\", {\r\n                    transfer: manager.draggingTransfer,\r\n                    acceptable: false\r\n                });\r\n\r\n                self.trigger(e2);\r\n\r\n                if (hoverClass && acceptable) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n                if (activeClass && acceptable) {\r\n                    styler.removeClass(elm, activeClass);\r\n                }\r\n\r\n                acceptable = false;\r\n                activeClass = null;\r\n                hoverClass = null;\r\n            });\r\n\r\n        }\r\n    });\r\n\r\n\r\n    /*   \r\n     * Make the specified element be in a moveable state.\r\n     * @param {HTMLElement} elm  \r\n     * @param { } params\r\n     */\r\n    function draggable(elm, params) {\r\n        return new Draggable(elm, params);\r\n    }\r\n\r\n    /*   \r\n     * Make the specified element be in a droppable state.\r\n     * @param {HTMLElement} elm  \r\n     * @param { } params\r\n     */\r\n    function droppable(elm, params) {\r\n        return new Droppable(elm, params);\r\n    }\r\n\r\n\r\n    function dnd() {\r\n        return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n        //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable: draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable: droppable,\r\n\r\n        manager: manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer, styler) {\r\n    var concat = Array.prototype.concat,\r\n        on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n\r\n    var webentry = (function() {\r\n        function one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function(file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function(entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function(files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                langx.map(entries, function(entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function() {\r\n                return concat.apply([], arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one: one,\r\n            all: all\r\n        };\r\n    })();\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n    /*\r\n     * Make the specified element to could accept HTML5 file drag and drop.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n                enterdCount++;\r\n                styler.addClass(elm, hoverClass)\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                enterdCount--\r\n                if (enterdCount == 0) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                styler.removeClass(elm, hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                            items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            langx.map(items, function(item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function pastezone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                langx.each(items, function(index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Make the specified element to pop-up the file selection dialog box when clicked , and read the contents the files selected from client file system by user.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function picker(elm, params) {\r\n        on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false,\r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(params) {\r\n        var xoptions = langx.mixin({\r\n            contentRange: null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function(message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function(key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function(form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function(e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function() {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        }, params);\r\n\r\n        var blobSlice = function() {\r\n                var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n                return slice.apply(this, arguments);\r\n            },\r\n            ajax = function(data) {\r\n                return langx.Xhr.request(data.url, data);\r\n            };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = langx.type(o.paramName) === 'array' ?\r\n                o.paramName[0] : o.paramName;\r\n\r\n            o.headers = langx.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    langx.each(o.files, function(index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (langx.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });\r\n                }\r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            langx.each(files, function(index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function(now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context, [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function() {\r\n                // Clone the options object for each chunk upload:\r\n                var o = langx.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = $.ajax(o).done(function(result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context, [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function(jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context, [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function() {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n\r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer, {\r\n        dropzone: dropzone,\r\n\r\n        pastezone: pastezone,\r\n\r\n        picker: picker,\r\n\r\n        select: select,\r\n\r\n        upload: upload,\r\n\r\n        readFile: function(file, params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n\r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n\r\n            if (params.asArrayBuffer) {\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);\r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        writeFile: function(data, name) {\r\n            if (window.navigator.msSaveBlob) {\r\n                if (langx.isString(data)) {\r\n                    data = dataURItoBlob(data);\r\n                }\r\n                window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        Velm.prototype[ method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        Velm.prototype[ method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n    return skylark.velm = velm;\r\n});\ndefine('skylark-utils/widgets',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\",\r\n    \"./velm\"\r\n], function(skylark,langx,noder, datax, styler, geom, eventer,query,velm) {\r\n\t// Cached regex to split keys for `delegate`.\r\n\tvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n\r\n\tfunction bridge( name, object ) {\r\n\t\tvar fullName = object.prototype.widgetFullName || name,\r\n\t\t\tfn = {};\r\n\r\n\t\tfunction _delegate (isQuery) {\r\n\r\n\t\t}\r\n\r\n\t\tfn[name] = function( options ) {\r\n\t\t\tvar isMethodCall = typeof options === \"string\";\r\n\t\t\tvar args = slice.call( arguments, 1 );\r\n\t\t\tvar returnValue = this;\r\n\r\n\t\t\tif ( isMethodCall ) {\r\n\r\n\t\t\t\t// If this is an empty collection, we need to have the instance method\r\n\t\t\t\t// return undefined instead of the jQuery instance\r\n\t\t\t\tif ( !this.length && options === \"instance\" ) {\r\n\t\t\t\t\treturnValue = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.each( function() {\r\n\t\t\t\t\t\tvar methodValue;\r\n\t\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\r\n\t\t\t\t\t\tif ( options === \"instance\" ) {\r\n\t\t\t\t\t\t\treturnValue = instance;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !instance ) {\r\n\t\t\t\t\t\t\treturn $.error( \"cannot call methods on \" + name +\r\n\t\t\t\t\t\t\t\t\" prior to initialization; \" +\r\n\t\t\t\t\t\t\t\t\"attempted to call method '\" + options + \"'\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !langx.isFunction( instance[ options ] ) || options.charAt( 0 ) === \"_\" ) {\r\n\t\t\t\t\t\t\treturn $.error( \"no such method '\" + options + \"' for \" + name +\r\n\t\t\t\t\t\t\t\t\" widget instance\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmethodValue = instance[ options ].apply( instance, args );\r\n\r\n\t\t\t\t\t\tif ( methodValue !== instance && methodValue !== undefined ) {\r\n\t\t\t\t\t\t\treturnValue = methodValue && methodValue.jquery ?\r\n\t\t\t\t\t\t\t\treturnValue.pushStack( methodValue.get() ) :\r\n\t\t\t\t\t\t\t\tmethodValue;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Allow multiple hashes to be passed on init\r\n\t\t\t\tif ( args.length ) {\r\n\t\t\t\t\toptions = $.widget.extend.apply( null, [ options ].concat( args ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.each( function() {\r\n\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\t\t\t\t\tif ( instance ) {\r\n\t\t\t\t\t\tinstance.option( options || {} );\r\n\t\t\t\t\t\tif ( instance._init ) {\r\n\t\t\t\t\t\t\tinstance._init();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdatax.data( this, fullName, new object( options, this ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\treturn returnValue;\r\n\t\t};\r\n\t};\r\n\r\n\tfunction widgets() {\r\n\t    return widgets;\r\n\t}\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n\t    init :function(el,options) {\r\n\t    \t//for supporting init(options,el)\r\n\t        if (langx.isHtmlNode(options)) {\r\n\t        \tvar _t = el,\r\n\t        \t\toptions = el;\r\n\t            el = options;\r\n\t        }\r\n\t        if (langx.isHtmlNode(el)) { \r\n\t        \tthis.el = el;\r\n\t    \t} else {\r\n\t    \t\tthis.el = null;\r\n\t    \t}\r\n\t        if (options) {\r\n\t            langx.mixin(this,options);\r\n\t        }\r\n\t        if (!this.cid) {\r\n\t            this.cid = langx.uniqueId('w');\r\n\t        }\r\n\t        this._ensureElement();\r\n\t    },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // query delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widgets.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n\t    // Translation function, gets the message key to be translated\r\n\t    // and an object with context specific data as arguments:\r\n\t    i18n: function (message, context) {\r\n\t        message = (this.messages && this.messages[message]) || message.toString();\r\n\t        if (context) {\r\n\t            langx.each(context, function (key, value) {\r\n\t                message = message.replace('{' + key + '}', value);\r\n\t            });\r\n\t        }\r\n\t        return message;\r\n\t    },\r\n\r\n\t\t});\r\n\r\n\tfunction defineWidgetClass(name,base,prototype) {\r\n\r\n\t};\r\n\r\n\tlangx.mixin(widgets, {\r\n\t\t$ : query,\r\n\r\n\t\tdefine : defineWidgetClass,\r\n\t\tWidget : Widget\r\n\t});\r\n\r\n\r\n\treturn skylark.widgets = widgets;\r\n});\r\n\ndefine('skylark-jquery/main',[\r\n    \"./core\",\r\n    \"./ajax\",\r\n    \"./callbacks\",\r\n    \"./deferred\",\r\n    \"./queue\",\r\n\t\"skylark-utils/widgets\"    \r\n], function($) {\r\n    return $;\r\n});\r\n\ndefine('skylark-jquery', ['skylark-jquery/main'], function (main) { return main; });\n\n"]}