{"version":3,"sources":["skylark-jquery-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","get","context","relMap","localRequire","intakeDefines","defined","jQuery","$","skylark","isArray","object","constructor","Array","isArrayLike","obj","isString","isHtmlNode","isFunction","isBoolean","isDefined","isDocument","nodeType","DOCUMENT_NODE","isEmptyObject","name","value","type","Node","isNumber","isObject","isPlainObject","isWindow","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","class2type","toLowerCase","String","toString","call","types","compact","array","filter","item","each","callback","key","undef","this","flatten","result","j","inArray","indexOf","makeArray","offset","startWith","concat","slice","elements","values","uniq","idx","first","items","n","createAssigner","keysFunc","defaults","arguments","index","source","keys","l","allKeys","has","path","isEqual","a","b","eq","isMatch","attrs","_mixin","target","deep","safe","undefined","_parseMixinArgs","params","shift","sources","mixin","removeItem","splice","fallback","prop","safeMixin","_","clone","src","checkCloneMethod","copy","deepEq","SymbolProto","Symbol","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","arrays","objects","f1","extendClass","ctor","props","options","proto","_super","superclass","noOverrided","_constructor","fn","superFn","tmp","overrided","ret","defineProperty","serialMixins","mixins","clss","unshift","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","inherit","klass","SimpleQueryEngine","query","arr","thisObject","out","cache","buildFn","execute","results","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","test","matches","QueryResults","addIterativeMethod","method","Deferred","when","isPromise","then","delegate","ArrayStore","queryEngine","idProperty","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","advise","dispatcher","advice","receiveArguments","signal","previous","around","advised","next","nextId","aspect","methodName","existing","executionId","before","after","newResults","defer","requestAnimationFrame","setTimeoutout","noop","proxy","proxyFn","TypeError","debounce","wait","timeout","later","clearTimeout","setTimeout","TMP","returnTrue","returnFalse","funcs","wrapPromise","p","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","Promise","__ctx__","handler","PGLISTENERS","pipe","always","done","fail","self","promise","resolve","reject","_resolve","_reject","resolveWith","_resolved","listener","error","reason","rejectWith","_rejected","errback","progback","all","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","func","series","waterful","Evented","on","events","selector","one","_hub","trigger","e","CustomEvent","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","dasherize","str","replace","deserializeValue","JSON","parse","trim","substitute","template","transform","getObject","match","retVal","getValue","_k","reverse","v","format","camelCase","toUpperCase","lowerFirst","charAt","serializeValue","stringify","upperFirst","getAbsoluteUrl","url","document","createElement","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","strings","Restful","idAttribute","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","Stateful","attributes","cid","uniqueId","cidPrefix","collection","set","changed","validationError","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","createEvent","funcArg","arg","payload","getQueryParams","segs","queryParam","nv","toPixel","parseFloat","uid","_uid","prefix","idCounter","langx","URL","webkitURL","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","matched","RegExp","cssPropName","isIE","exec","navigator","userAgent","support","maybeAddPx","cssNumber","classRE","classReCache","node","svg","baseVal","disabled","elm","dom","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","styler","css","isInvisible","hide","addClass","names","re","property","computedStyle","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","placing","refNode","nextSibling","insertBefore","append","contents","contentDocument","childNodes","tag","setAttribute","createFragment","singleTagRE","$1","fragmentRE","containers","container","innerHTML","getAttribs","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","doc","empty","hasChildNodes","firstChild","fullScreen","el","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","fulledEl","rxhtmlTag","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","overlayDiv","position","top","left","width","height","zIndex","console","warn","children","oldNode","replaceChild","throb","timer","time","throbber","textNode","nodeValue","end","traverse","wrapper","wrapperNode","wrapperInner","unwrap","noder","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","ancestors","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","descendant","querySelector","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","enabled","even","focus","activeElement","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","isArrayFilter","radio","checkbox","file","image","submit","reset","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","createProxy","originalEvent","ignoreProperties","$this","findHandler","unregister","ready","register","stop","keyCode","preventDefault","stopPropagation","evented","Event","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","backspace","comma","down","enter","home","page_down","page_up","period","right","space","tab","up","special","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","resetClipAuto","easing","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","parseInt","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","wrapper_node_operation","argType","toArray","is","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","replaceClass","newClass","oldClass","draggable","Draggable","droppable","Droppable","dnd","DndManager","prepare","dragSource","dragHandle","draggingOffsetX","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setDragImage","effectAllowed","e1","over","dropped","manager","handle","hoverClass","activeClass","acceptable","_params","e2","overElm","dropEffect","dropzone","droppedCallback","enterdCount","webkitGetAsEntry","getAsEntry","webentry","files","pastezone","pastedCallback","pasted","clipboardData","getAsFile","picker","selectFiles","pickedFiles","maxFileSize","fileSelected","directory","picked","fileInput","onchange","entries","webkitEntries","webkitdirectory","upload","initDataSettings","o","chunkedUpload","initXHRData","formData","multipart","paramName","contentRange","blob","uploadName","encodeURI","getUploadedBytes","jqXHR","range","upperBytesPos","BitrateTimer","timestamp","Date","now","getTime","loaded","bitrate","getBitrate","timeDiff","testOnly","uploadedBytes","fs","ub","mcs","maxChunkSize","blobSlice","dfd","i18n","_getXHRPromise","currentLoaded","_progress","chunkSize","ajax","textStatus","lengthComputable","errorThrown","xoptions","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","form","serializeArray","fileupload","process","webkitSlice","mozSlice","_bitrateTimer","jqXhr","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","filer","readFile","reader","FileReader","onload","onerror","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","createObjectURL","_delegator","domNode","HTMLElement","VisualElement","batch","action","widgets","defineWidgetClass","delegateEventSplitter","Widget","_ensureElement","$el","render","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","jquery","extend","grep","parseJSON","field","encodeURIComponent","bind","triggerHandler","live","die","unbind","moveto","uuid","expr","filters","createPseudo","step","setOffset","curTop","curLeft","curElem","curOffset","curCSSTop","curCSSLeft","calculatePosition","curPosition","using","_data","propName","parseHTML","uniqueSort","unique","parseArguments","addToPrefiltersOrTransports","dataTypeExpression","dataTypes","rnotwhite","ajaxJSONP","responseData","abortTimeout","_callbackName","jsonpCallback","callbackName","originalCallback","errorType","head","ajaxSettings","hasPlaceholder","jsonp","getJSON","originalLoad","prefilters","transports","ajaxPrefilter","ajaxTransport","ajaxSetup","settings","Callbacks","memory","firing","firingStart","firingLength","firingIndex","list","once","fire","stopOnFalse","disable","lock","locked","fireWith","_p","originThen","isArraylike","Data","expando","core_rnotwhite","core_deletedIds","core_push","owner","descriptor","unlock","defineProperties","access","stored","camel","hasData","discard","data_priv","dequeue","startLength","hooks","_queueHooks","merge","second","setter","clearQueue","main"],"mappings":"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,GAEAyI,EAmCApL,GAAA/X,MAAA8iB,GACA2nB,MAAA,SAAAptB,EAAAqtB,EAAAnxC,GAMA,MALA8jB,GAAA7jB,QAAA,SAAAkhB,GACA,GAAAI,GAAAJ,YAAA8vB,GAAA9vB,EAAAoI,EAAApI,EACAI,GAAA4vB,GAAAjxC,MAAAqhB,EAAAvhB,KAGA6D,MAGA+lB,KAAA,GAAAqnB,GAAAp7B,SAAAiM,MAEAmvB,cAAAA,EAEA9mC,QAAA,SAAAvI,EAAA8G,GACA,GAAAP,KAEAA,GAAAvG,GAAA8G,EAEAuoC,EAAA9mC,QAAAhC,IAGAiE,SAAA,SAAAsW,EAAAriB,GACA,GAAA8H,KAEAua,GAAAziB,QAAA,SAAA2B,GACAuG,EAAAvG,GAAAkvC,EAAAzwC,EAAAuB,GAAAvB,KAGA4wC,EAAA9mC,QAAAhC,MAKAohB,EAAAnd,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACAmmB,GAGAhJ,EAAAnd,UACA,YACA,aACA47B,GAIAze,EAAAnd,UACA,MACA,KACA,MACA,YACA,WACA0pB,GAGAvM,EAAAnd,UACA,SACA,YACAwjC,GAGArmB,EAAAnd,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACA2kB,GAMAxH,EAAAiB,KAAA,SAAA/X,GACA,MAAA,SAAAA,EACA5O,KAAA+lB,KAEA/lB,KAAA+lB,KAAAU,WAAA7X,IAKA8W,EAAAnd,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACAm1B,GAIAhY,EAAAnd,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACAo0B,GAGAjX,EAAAnd,UACA,YACA,aACA47B,GAIAze,EAAAnd,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,cACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAuc,GAGAY,EAAAnd,UACA,WACA,YACA,MACA,WACA,O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","file":"../skylark-jquery-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/types',[\r\n],function(){\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    return {\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    };\r\n\r\n});\ndefine('skylark-langx/arrays',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return {\r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n\t    each: each,\r\n\r\n        flatten: flatten,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        map : map,\r\n        \r\n        uniq : uniq\r\n\r\n    }\r\n});\ndefine('skylark-langx/objects',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return {\r\n        allKeys: allKeys,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    };\r\n\r\n});\ndefine('skylark-langx/klass',[\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(arrays,objects,types){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return createClass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx/aspect',[\r\n],function(){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return {\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    };\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(objects,types){\r\n\tvar mixin = objects.mixin,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    return {\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        }\r\n    };\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"./arrays\",\r\n\t\"./funcs\",\r\n    \"./objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function(handler) {\r\n            this.then(handler);\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n        }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return wrapPromise(Promise.all(array));\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx/async',[\r\n    \"./Deferred\",\r\n    \"./arrays\"\r\n],function(Deferred,arrays){\r\n    var each = arrays.each;\r\n    \r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn async;\t\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"./klass\",\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(klass,objects,types){\r\n\tvar slice = Array.prototype.slice,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n\t\tisFunction = types.isFunction,\r\n\t\tisString = types.isString,\r\n\t\tisEmptyObject = types.isEmptyObject,\r\n\t\tmixin = objects.mixin;\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n\treturn Evented;\r\n\r\n});\ndefine('skylark-langx/strings',[\r\n],function(){\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\treturn {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        trim: trim,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t} ; \r\n\r\n});\ndefine('skylark-langx/Xhr',[\r\n    \"./arrays\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./funcs\",\r\n    \"./types\"\r\n],function(arrays,Deferred,Evented,objects,funcs,types){\r\n    var each = arrays.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn Xhr;\t\r\n});\ndefine('skylark-langx/Restful',[\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./strings\",\r\n    \"./Xhr\"\r\n],function(Evented,objects,strings,Xhr){\r\n    var mixin = objects.mixin,\r\n        substitute = strings.substitute;\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n    });\r\n\r\n    return Restful;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\"\r\n],function(Evented){\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./klass\",\r\n    \"./objects\",\r\n    \"./Restful\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./types\",\r\n    \"./Xhr\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,Deferred,Evented,funcs,klass,objects,Restful,Stateful,strings,types,Xhr) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,funcs,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        klass : klass,\r\n\r\n        Restful: Restful,\r\n        \r\n        Stateful: Stateful,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(skylark, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = this.size(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n    \r\n// in development start\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n// in development end\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown: slideDown,\r\n        slideToggle: slideToggle,\r\n        slideUp: slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder, datax, finder, geom, eventer, styler) {\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n        klassName: \"DndManager\",\r\n\r\n        init: function() {\r\n\r\n        },\r\n\r\n        prepare: function(draggable) {\r\n            var e = eventer.create(\"preparing\", {\r\n                dragSource: draggable.dragSource,\r\n                dragHandle: draggable.dragHandle\r\n            });\r\n            draggable.trigger(e);\r\n            draggable.dragSource = e.dragSource;\r\n        },\r\n\r\n        start: function(draggable, event) {\r\n\r\n            var p = geom.pagePosition(draggable.dragSource);\r\n            this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n            this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n            var e = eventer.create(\"started\", {\r\n                elm: draggable.elm,\r\n                dragSource: draggable.dragSource,\r\n                dragHandle: draggable.dragHandle,\r\n                ghost: null,\r\n\r\n                transfer: {}\r\n            });\r\n\r\n            draggable.trigger(e);\r\n\r\n\r\n            this.dragging = draggable;\r\n\r\n            if (draggable.draggingClass) {\r\n                styler.addClass(draggable.dragSource, draggable.draggingClass);\r\n            }\r\n\r\n            this.draggingGhost = e.ghost;\r\n            if (!this.draggingGhost) {\r\n                this.draggingGhost = draggable.elm;\r\n            }\r\n\r\n            this.draggingTransfer = e.transfer;\r\n            if (this.draggingTransfer) {\r\n\r\n                langx.each(this.draggingTransfer, function(key, value) {\r\n                    event.dataTransfer.setData(key, value);\r\n                });\r\n            }\r\n\r\n            event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n            event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n            var e1 = eventer.create(\"dndStarted\", {\r\n                elm: e.elm,\r\n                dragSource: e.dragSource,\r\n                dragHandle: e.dragHandle,\r\n                ghost: e.ghost,\r\n                transfer: e.transfer\r\n            });\r\n\r\n            this.trigger(e1);\r\n        },\r\n\r\n        over: function() {\r\n\r\n        },\r\n\r\n        end: function(dropped) {\r\n            var dragging = this.dragging;\r\n            if (dragging) {\r\n                if (dragging.draggingClass) {\r\n                    styler.removeClass(dragging.dragSource, dragging.draggingClass);\r\n                }\r\n            }\r\n\r\n            var e = eventer.create(\"dndEnded\", {});\r\n            this.trigger(e);\r\n\r\n\r\n            this.dragging = null;\r\n            this.draggingTransfer = null;\r\n            this.draggingGhost = null;\r\n            this.draggingOffsetX = null;\r\n            this.draggingOffsetY = null;\r\n        }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n        klassName: \"Draggable\",\r\n\r\n        init: function(elm, params) {\r\n            var self = this;\r\n\r\n            self.elm = elm;\r\n            self.draggingClass = params.draggingClass || \"dragging\",\r\n                self.params = langx.clone(params);\r\n\r\n            [\"preparing\", \"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n                if (langx.isFunction(params[eventName])) {\r\n                    self.on(eventName, params[eventName]);\r\n                }\r\n            });\r\n\r\n\r\n            eventer.on(elm, {\r\n                \"mousedown\": function(e) {\r\n                    var params = self.params;\r\n                    if (params.handle) {\r\n                        self.dragHandle = finder.closest(e.target, params.handle);\r\n                        if (!self.dragHandle) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (params.source) {\r\n                        self.dragSource = finder.closest(e.target, params.source);\r\n                    } else {\r\n                        self.dragSource = self.elm;\r\n                    }\r\n                    manager.prepare(self);\r\n                    if (self.dragSource) {\r\n                        datax.attr(self.dragSource, \"draggable\", 'true');\r\n                    }\r\n                },\r\n\r\n                \"mouseup\": function(e) {\r\n                    if (self.dragSource) {\r\n                        //datax.attr(self.dragSource, \"draggable\", 'false');\r\n                        self.dragSource = null;\r\n                        self.dragHandle = null;\r\n                    }\r\n                },\r\n\r\n                \"dragstart\": function(e) {\r\n                    datax.attr(self.dragSource, \"draggable\", 'false');\r\n                    manager.start(self, e);\r\n                },\r\n\r\n                \"dragend\": function(e) {\r\n                    eventer.stop(e);\r\n\r\n                    if (!manager.dragging) {\r\n                        return;\r\n                    }\r\n\r\n                    manager.end(false);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n        klassName: \"Droppable\",\r\n\r\n        init: function(elm, params) {\r\n            var self = this,\r\n                draggingClass = params.draggingClass || \"dragging\",\r\n                hoverClass,\r\n                activeClass,\r\n                acceptable = true;\r\n\r\n            self.elm = elm;\r\n            self._params = params;\r\n\r\n            [\"started\", \"entered\", \"leaved\", \"dropped\", \"overing\"].forEach(function(eventName) {\r\n                if (langx.isFunction(params[eventName])) {\r\n                    self.on(eventName, params[eventName]);\r\n                }\r\n            });\r\n\r\n            eventer.on(elm, {\r\n                \"dragover\": function(e) {\r\n                    e.stopPropagation()\r\n\r\n                    if (!acceptable) {\r\n                        return\r\n                    }\r\n\r\n                    var e2 = eventer.create(\"overing\", {\r\n                        overElm: e.target,\r\n                        transfer: manager.draggingTransfer,\r\n                        acceptable: true\r\n                    });\r\n                    self.trigger(e2);\r\n\r\n                    if (e2.acceptable) {\r\n                        e.preventDefault() // allow drop\r\n\r\n                        e.dataTransfer.dropEffect = \"copyMove\";\r\n                    }\r\n\r\n                },\r\n\r\n                \"dragenter\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n\r\n                    var e2 = eventer.create(\"entered\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    e.stopPropagation()\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.addClass(elm, hoverClass)\r\n                    }\r\n                },\r\n\r\n                \"dragleave\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n                    if (!acceptable) return false\r\n\r\n                    var e2 = eventer.create(\"leaved\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    e.stopPropagation()\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.removeClass(elm, hoverClass);\r\n                    }\r\n                },\r\n\r\n                \"drop\": function(e) {\r\n                    var params = self._params,\r\n                        elm = self.elm;\r\n\r\n                    eventer.stop(e); // stops the browser from redirecting.\r\n\r\n                    if (!manager.dragging) return\r\n\r\n                    // manager.dragging.elm.removeClass('dragging');\r\n\r\n                    if (hoverClass && acceptable) {\r\n                        styler.addClass(elm, hoverClass)\r\n                    }\r\n\r\n                    var e2 = eventer.create(\"dropped\", {\r\n                        transfer: manager.draggingTransfer\r\n                    });\r\n\r\n                    self.trigger(e2);\r\n\r\n                    manager.end(true)\r\n                }\r\n            });\r\n\r\n            manager.on(\"dndStarted\", function(e) {\r\n                var e2 = eventer.create(\"started\", {\r\n                    transfer: manager.draggingTransfer,\r\n                    acceptable: false\r\n                });\r\n\r\n                self.trigger(e2);\r\n\r\n                acceptable = e2.acceptable;\r\n                hoverClass = e2.hoverClass;\r\n                activeClass = e2.activeClass;\r\n\r\n                if (activeClass && acceptable) {\r\n                    styler.addClass(elm, activeClass);\r\n                }\r\n\r\n            }).on(\"dndEnded\", function(e) {\r\n                var e2 = eventer.create(\"ended\", {\r\n                    transfer: manager.draggingTransfer,\r\n                    acceptable: false\r\n                });\r\n\r\n                self.trigger(e2);\r\n\r\n                if (hoverClass && acceptable) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n                if (activeClass && acceptable) {\r\n                    styler.removeClass(elm, activeClass);\r\n                }\r\n\r\n                acceptable = false;\r\n                activeClass = null;\r\n                hoverClass = null;\r\n            });\r\n\r\n        }\r\n    });\r\n\r\n\r\n    /*   \r\n     * Make the specified element be in a moveable state.\r\n     * @param {HTMLElement} elm  \r\n     * @param { } params\r\n     */\r\n    function draggable(elm, params) {\r\n        return new Draggable(elm, params);\r\n    }\r\n\r\n    /*   \r\n     * Make the specified element be in a droppable state.\r\n     * @param {HTMLElement} elm  \r\n     * @param { } params\r\n     */\r\n    function droppable(elm, params) {\r\n        return new Droppable(elm, params);\r\n    }\r\n\r\n\r\n    function dnd() {\r\n        return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n        //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable: draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable: droppable,\r\n\r\n        manager: manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer, styler) {\r\n    var concat = Array.prototype.concat,\r\n        on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n\r\n    var webentry = (function() {\r\n        function one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function(file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function(entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function(files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                langx.map(entries, function(entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function() {\r\n                return concat.apply([], arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one: one,\r\n            all: all\r\n        };\r\n    })();\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n    /*\r\n     * Make the specified element to could accept HTML5 file drag and drop.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n                enterdCount++;\r\n                styler.addClass(elm, hoverClass)\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                enterdCount--\r\n                if (enterdCount == 0) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                styler.removeClass(elm, hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                            items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            langx.map(items, function(item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function pastezone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                langx.each(items, function(index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Make the specified element to pop-up the file selection dialog box when clicked , and read the contents the files selected from client file system by user.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function picker(elm, params) {\r\n        on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false,\r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(params) {\r\n        var xoptions = langx.mixin({\r\n            contentRange: null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function(message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function(key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function(form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function(e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function() {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        }, params);\r\n\r\n        var blobSlice = function() {\r\n                var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n                return slice.apply(this, arguments);\r\n            },\r\n            ajax = function(data) {\r\n                return langx.Xhr.request(data.url, data);\r\n            };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = langx.type(o.paramName) === 'array' ?\r\n                o.paramName[0] : o.paramName;\r\n\r\n            o.headers = langx.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    langx.each(o.files, function(index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (langx.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });\r\n                }\r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            langx.each(files, function(index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function(now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context, [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function() {\r\n                // Clone the options object for each chunk upload:\r\n                var o = langx.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = $.ajax(o).done(function(result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context, [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function(jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context, [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function() {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n\r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer, {\r\n        dropzone: dropzone,\r\n\r\n        pastezone: pastezone,\r\n\r\n        picker: picker,\r\n\r\n        select: select,\r\n\r\n        upload: upload,\r\n\r\n        readFile: function(file, params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n\r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n\r\n            if (params.asArrayBuffer) {\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);\r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n\r\n        writeFile: function(data, name) {\r\n            if (window.navigator.msSaveBlob) {\r\n                if (langx.isString(data)) {\r\n                    data = dataURItoBlob(data);\r\n                }\r\n                window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        VisualElement.prototype[method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n    return skylark.velm = velm;\r\n});\ndefine('skylark-utils/widgets',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\",\r\n    \"./velm\"\r\n], function(skylark,langx,noder, datax, styler, geom, eventer,query,velm) {\r\n\t// Cached regex to split keys for `delegate`.\r\n\tvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n\r\n\tfunction bridge( name, object ) {\r\n\t\tvar fullName = object.prototype.widgetFullName || name,\r\n\t\t\tfn = {};\r\n\r\n\t\tfunction _delegate (isQuery) {\r\n\r\n\t\t}\r\n\r\n\t\tfn[name] = function( options ) {\r\n\t\t\tvar isMethodCall = typeof options === \"string\";\r\n\t\t\tvar args = slice.call( arguments, 1 );\r\n\t\t\tvar returnValue = this;\r\n\r\n\t\t\tif ( isMethodCall ) {\r\n\r\n\t\t\t\t// If this is an empty collection, we need to have the instance method\r\n\t\t\t\t// return undefined instead of the jQuery instance\r\n\t\t\t\tif ( !this.length && options === \"instance\" ) {\r\n\t\t\t\t\treturnValue = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.each( function() {\r\n\t\t\t\t\t\tvar methodValue;\r\n\t\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\r\n\t\t\t\t\t\tif ( options === \"instance\" ) {\r\n\t\t\t\t\t\t\treturnValue = instance;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !instance ) {\r\n\t\t\t\t\t\t\treturn $.error( \"cannot call methods on \" + name +\r\n\t\t\t\t\t\t\t\t\" prior to initialization; \" +\r\n\t\t\t\t\t\t\t\t\"attempted to call method '\" + options + \"'\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !langx.isFunction( instance[ options ] ) || options.charAt( 0 ) === \"_\" ) {\r\n\t\t\t\t\t\t\treturn $.error( \"no such method '\" + options + \"' for \" + name +\r\n\t\t\t\t\t\t\t\t\" widget instance\" );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmethodValue = instance[ options ].apply( instance, args );\r\n\r\n\t\t\t\t\t\tif ( methodValue !== instance && methodValue !== undefined ) {\r\n\t\t\t\t\t\t\treturnValue = methodValue && methodValue.jquery ?\r\n\t\t\t\t\t\t\t\treturnValue.pushStack( methodValue.get() ) :\r\n\t\t\t\t\t\t\t\tmethodValue;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Allow multiple hashes to be passed on init\r\n\t\t\t\tif ( args.length ) {\r\n\t\t\t\t\toptions = $.widget.extend.apply( null, [ options ].concat( args ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.each( function() {\r\n\t\t\t\t\tvar instance = datax.data( this, fullName );\r\n\t\t\t\t\tif ( instance ) {\r\n\t\t\t\t\t\tinstance.option( options || {} );\r\n\t\t\t\t\t\tif ( instance._init ) {\r\n\t\t\t\t\t\t\tinstance._init();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdatax.data( this, fullName, new object( options, this ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\treturn returnValue;\r\n\t\t};\r\n\t};\r\n\r\n\tfunction widgets() {\r\n\t    return widgets;\r\n\t}\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n\t    init :function(el,options) {\r\n\t    \t//for supporting init(options,el)\r\n\t        if (langx.isHtmlNode(options)) {\r\n\t        \tvar _t = el,\r\n\t        \t\toptions = el;\r\n\t            el = options;\r\n\t        }\r\n\t        if (langx.isHtmlNode(el)) { \r\n\t        \tthis.el = el;\r\n\t    \t} else {\r\n\t    \t\tthis.el = null;\r\n\t    \t}\r\n\t        if (options) {\r\n\t            langx.mixin(this,options);\r\n\t        }\r\n\t        if (!this.cid) {\r\n\t            this.cid = langx.uniqueId('w');\r\n\t        }\r\n\t        this._ensureElement();\r\n\t    },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // query delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widgets.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n\t    // Translation function, gets the message key to be translated\r\n\t    // and an object with context specific data as arguments:\r\n\t    i18n: function (message, context) {\r\n\t        message = (this.messages && this.messages[message]) || message.toString();\r\n\t        if (context) {\r\n\t            langx.each(context, function (key, value) {\r\n\t                message = message.replace('{' + key + '}', value);\r\n\t            });\r\n\t        }\r\n\t        return message;\r\n\t    },\r\n\r\n\t\t});\r\n\r\n\tfunction defineWidgetClass(name,base,prototype) {\r\n\r\n\t};\r\n\r\n\tlangx.mixin(widgets, {\r\n\t\t$ : query,\r\n\r\n\t\tdefine : defineWidgetClass,\r\n\t\tWidget : Widget\r\n\t});\r\n\r\n\r\n\treturn skylark.widgets = widgets;\r\n});\r\n\ndefine('skylark-jquery/core',[\r\n\t\"skylark-utils/skylark\",\r\n\t\"skylark-utils/browser\",\r\n\t\"skylark-utils/langx\",\r\n\t\"skylark-utils/noder\",\r\n\t\"skylark-utils/datax\",\r\n\t\"skylark-utils/eventer\",\r\n\t\"skylark-utils/finder\",\r\n\t\"skylark-utils/fx\",\r\n\t\"skylark-utils/styler\",\r\n\t\"skylark-utils/query\",\r\n\t\"skylark-utils/widgets\"\r\n],function(skylark,browser,langx,noder,datax,eventer,finder,fx,styler,query){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n    (function($){\r\n\t    $.fn.jquery = '2.2.0';\r\n\r\n\t    $.camelCase = langx.camelCase;\r\n\r\n\t\t$.cleanData = function( elems ) {\r\n\t\t\tvar elem,\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\r\n\t\t\t\tdatax.cleanData(elem);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.removeData = function(elm,name) {\r\n\t\t\tdatax.removeData(elm,name);\r\n\t\t}\r\n\t\r\n\t    $.each = langx.each;\r\n\r\n\t    $.extend = function(target) {\r\n\t        var deep, args = slice.call(arguments, 1);\r\n\t        if (typeof target == 'boolean') {\r\n\t            deep = target\r\n\t            target = args.shift()\r\n\t        }\r\n\t        if (args.length == 0) {\r\n\t            args = [target];\r\n\t            target = this;\r\n\t        }\r\n\t        args.forEach(function(arg) {\r\n\t        \tlangx.mixin(target, arg, deep);\r\n\t        });\r\n\t        return target;\r\n\t    };\r\n\r\n\t    $.grep = function(elements, callback) {\r\n\t        return filter.call(elements, callback)\r\n\t    };\r\n\r\n\t    $.attr = function(elm,name) {\r\n\t    \treturn datax.attr(elm,name);\r\n\t    };\r\n\r\n\t    $.isArray = langx.isArray;\r\n\t    $.isEmptyObject = langx.isEmptyObject;\r\n\t    $.isFunction = langx.isFunction;\r\n\t    $.isWindow = langx.isWindow;\r\n\t    $.isPlainObject = langx.isPlainObject;\r\n\r\n\t    $.inArray = langx.inArray;\r\n\r\n\t    $.makeArray = langx.makeArray;\r\n\t    $.map = langx.map;  // The behavior is somewhat different from the original jquery.\r\n\r\n\t    $.noop = function() {\r\n\t    };\r\n\r\n\t    $.parseJSON = window.JSON.parse;\r\n\r\n\t    $.proxy = langx.proxy;\r\n\r\n\t    $.trim = langx.trim;\r\n\t    $.type = langx.type;\r\n\r\n\t    $.fn.extend = function(props) {\r\n\t        langx.mixin($.fn, props);\r\n\t    };\r\n\r\n\t    $.fn.serializeArray = function() {\r\n\t        var name, type, result = [],\r\n\t            add = function(value) {\r\n\t                if (value.forEach) return value.forEach(add)\r\n\t                result.push({ name: name, value: value })\r\n\t            }\r\n\t        if (this[0]) langx.each(this[0].elements, function(_, field) {\r\n\t            type = field.type, name = field.name\r\n\t            if (name && field.nodeName.toLowerCase() != 'fieldset' &&\r\n\t                !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&\r\n\t                ((type != 'radio' && type != 'checkbox') || field.checked))\r\n\t                add($(field).val())\r\n\t        })\r\n\t        return result\r\n\t    };\r\n\r\n\t    $.fn.serialize = function() {\r\n\t        var result = []\r\n\t        this.serializeArray().forEach(function(elm) {\r\n\t            result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\r\n\t        })\r\n\t        return result.join('&')\r\n\t    };\r\n    })(query);\r\n\r\n    (function($){\r\n        $.Event = function Event(src, props) {\r\n            if (langx.isString(src)) {\r\n            \tvar type = src;\r\n            \treturn eventer.create(type, props);\r\n\t        }\r\n            return eventer.proxy(src, props);\r\n        };\r\n\r\n        $.event = {};\r\n\r\n\t    $.event.special = eventer.special;\r\n\r\n\t    $.fn.submit = function(callback) {\r\n\t        if (0 in arguments) this.bind('submit', callback)\r\n\t        else if (this.length) {\r\n\t            var event = $.Event('submit')\r\n\t            this.eq(0).trigger(event)\r\n\t            if (!event.isDefaultPrevented()) this.get(0).submit()\r\n\t        }\r\n\t        return this\r\n\t    };\r\n\r\n\t    // event\r\n\t    $.fn.triggerHandler = $.fn.trigger;\r\n\r\n\t    $.fn.delegate = function(selector, event, callback) {\r\n\t        return this.on(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.undelegate = function(selector, event, callback) {\r\n\t        return this.off(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.live = function(event, callback) {\r\n\t        $(document.body).delegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.die = function(event, callback) {\r\n\t        $(document.body).undelegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.bind = function(event, selector, data, callback) {\r\n\t        return this.on(event, selector, data, callback)\r\n\t    };\r\n\r\n\t    $.fn.unbind = function(event, callback) {\r\n\t        return this.off(event, callback)\r\n\t    };\r\n\r\n\t    $.fn.ready = function(callback) {\r\n\t        eventer.ready(callback);\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.stop = function() {\r\n\t        // todo\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.moveto = function(x, y) {\r\n\t        return this.animate({\r\n\t            left: x + \"px\",\r\n\t            top: y + \"px\"\r\n\t        }, 0.4);\r\n\r\n\t    };\r\n\r\n\t    $.ready = eventer.ready;\r\n\r\n\t    $.on = eventer.on;\r\n\r\n\t    $.off = eventer.off;\r\n    })(query);\r\n\r\n    (function($){\r\n\t    // plugin compatibility\r\n\t    $.uuid = 0;\r\n\t    $.support = browser.support;\r\n\t    $.expr = {};\r\n\r\n\t    $.expr[\":\"] = $.expr.pseudos = $.expr.filters = finder.pseudos;\r\n\r\n\t    $.expr.createPseudo = function(fn) {\r\n\t    \treturn fn;\r\n\t    };\r\n\r\n\t    $.cssHooks = styler.cssHooks;\r\n\r\n\t    $.contains = noder.contains;\r\n\r\n\t    $.css = styler.css;\r\n\r\n\t    $.data = datax.data;\r\n\r\n\t    $.fx = fx;\r\n\t    $.fx.step = {\r\n\r\n        };\r\n\r\n        $.easing = {};\r\n\r\n\t    $.offset = {};\r\n\t    $.offset.setOffset = function(elem, options, i) {\r\n\t        var position = $.css(elem, \"position\");\r\n\r\n\t        // set position first, in-case top/left are set even on static elem\r\n\t        if (position === \"static\") {\r\n\t            elem.style.position = \"relative\";\r\n\t        }\r\n\r\n\t        var curElem = $(elem),\r\n\t            curOffset = curElem.offset(),\r\n\t            curCSSTop = $.css(elem, \"top\"),\r\n\t            curCSSLeft = $.css(elem, \"left\"),\r\n\t            calculatePosition = (position === \"absolute\" || position === \"fixed\") && $.inArray(\"auto\", [curCSSTop, curCSSLeft]) > -1,\r\n\t            props = {},\r\n\t            curPosition = {},\r\n\t            curTop, curLeft;\r\n\r\n\t        // need to be able to calculate position if either top or left is auto and position is either absolute or fixed\r\n\t        if (calculatePosition) {\r\n\t            curPosition = curElem.position();\r\n\t            curTop = curPosition.top;\r\n\t            curLeft = curPosition.left;\r\n\t        } else {\r\n\t            curTop = parseFloat(curCSSTop) || 0;\r\n\t            curLeft = parseFloat(curCSSLeft) || 0;\r\n\t        }\r\n\r\n\t        if ($.isFunction(options)) {\r\n\t            options = options.call(elem, i, curOffset);\r\n\t        }\r\n\r\n\t        if (options.top != null) {\r\n\t            props.top = (options.top - curOffset.top) + curTop;\r\n\t        }\r\n\t        if (options.left != null) {\r\n\t            props.left = (options.left - curOffset.left) + curLeft;\r\n\t        }\r\n\r\n\t        if (\"using\" in options) {\r\n\t            options.using.call(elem, props);\r\n\t        } else {\r\n\t            curElem.css(props);\r\n\t        }\r\n\t    };\r\n\r\n        $._data = function(elm,propName) {\r\n            if (elm.hasAttribute) {\r\n                return datax.data(elm,propName);\r\n            } else {\r\n                return {};\r\n            }\r\n        };\r\n        \t    \r\n    })(query);\r\n\r\n    query.parseHTML = function(html) {\r\n        return  noder.createFragment(html);\r\n    };\r\n\r\n    query.uniqueSort = query.unique = langx.uniq;\r\n\r\n    query.skylark = skylark;\r\n\r\n    return window.jQuery = window.$ = query;\r\n});\r\n\ndefine('skylark-jquery/ajax',[\r\n    \"./core\",\r\n    \"skylark-langx/langx\"\r\n], function($,langx) {\r\n    var jsonpID = 0;\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') return url\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n    }\r\n    \r\n    $.ajaxJSONP = function(options) {\r\n        var deferred = new langx.Deferred();\r\n        var _callbackName = options.jsonpCallback,\r\n            callbackName = ($.isFunction(_callbackName) ?\r\n                _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\r\n            script = document.createElement('script'),\r\n            originalCallback = window[callbackName],\r\n            responseData,\r\n            abort = function(errorType) {\r\n                $(script).triggerHandler('error', errorType || 'abort')\r\n            },\r\n            xhr = { abort: abort },\r\n            abortTimeout;\r\n\r\n        for (var key in options.data) {\r\n            options.url = appendQuery(options.url, key + \"=\" + options.data[key]);\r\n        }\r\n         \r\n//        if (deferred) deferred.promise(xhr)\r\n\r\n        $(script).on('load error', function(e, errorType) {\r\n            clearTimeout(abortTimeout)\r\n            $(script).off().remove()\r\n\r\n            if (e.type == 'error' || !responseData) {\r\n                deferred.reject(e);\r\n            } else {\r\n                deferred.resolve(responseData[0],200,xhr);\r\n            }\r\n\r\n            window[callbackName] = originalCallback\r\n            if (responseData && $.isFunction(originalCallback))\r\n                originalCallback(responseData[0])\r\n\r\n            originalCallback = responseData = undefined\r\n        })\r\n\r\n        window[callbackName] = function() {\r\n            responseData = arguments\r\n        }\r\n\r\n        script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\r\n        document.head.appendChild(script)\r\n\r\n        if (options.timeout > 0) abortTimeout = setTimeout(function() {\r\n            abort('timeout')\r\n        }, options.timeout)\r\n\r\n        return deferred;\r\n    }\r\n\r\n    $.ajaxSettings = langx.Xhr.defaultOptions;\r\n\r\n    $.ajaxSettings.xhr = function() {\r\n        return new window.XMLHttpRequest()\r\n    };\r\n\r\n    $.ajax = function(options) {\r\n        if (!options) {\r\n            options = {\r\n                url :  \"./\"\r\n            };\r\n        } else if (langx.isString(options)) {\r\n            options = {\r\n                url :  options\r\n            };\r\n        }\r\n\r\n        if ('jsonp' == options.dataType) {\r\n            var hasPlaceholder = /\\?.+=\\?/.test(options.url);\r\n\r\n            if (!hasPlaceholder)\r\n                options.url = appendQuery(options.url,\r\n                    options.jsonp ? (options.jsonp + '=?') : options.jsonp === false ? '' : 'callback=?')\r\n            return $.ajaxJSONP(options);\r\n        }\r\n\r\n        var p = langx.Xhr.request(options.url,options);\r\n        if (options.success) {\r\n            p = p.then(options.success,options.error);\r\n        }\r\n        return p;\r\n    };\r\n\r\n    // handle optional data/success arguments\r\n    function parseArguments(url, data, success, dataType) {\r\n        if ($.isFunction(url)) {\r\n            dataType = data, success = url, data = undefined,url = undefined;\r\n        } else if ($.isFunction(data)) {\r\n            dataType = success, success = data, data = undefined;\r\n        } \r\n        if (!$.isFunction(success)) dataType = success, success = undefined\r\n        return {\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            dataType: dataType\r\n        }\r\n    }\r\n\r\n    $.get = function( /* url, data, success, dataType */ ) {\r\n        return $.ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    $.post = function( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.type = 'POST'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    $.getJSON = function( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.dataType = 'json'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    var originalLoad = $.fn.load;\r\n\r\n    $.fn.load = function(url, data, success) {\r\n        if (\"string\" != typeof url && originalLoad) {\r\n            return originalLoad.apply(this, arguments);\r\n        }\r\n        if (!this.length) return this\r\n        var self = this,\r\n            options = parseArguments(url, data, success),\r\n            parts = options.url && options.url.split(/\\s/),\r\n            selector,\r\n            callback = options.success\r\n        if (parts && parts.length > 1) options.url = parts[0], selector = parts[1]\r\n        options.success = function(response) {\r\n            self.html(selector ?\r\n                $('<div>').html(response.replace(rscript, \"\")).find(selector) : response)\r\n            callback && callback.apply(self, arguments)\r\n        }\r\n        $.ajax(options)\r\n        return this\r\n    }\r\n\r\n    $.param = langx.Xhr.param;\r\n\r\n\r\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n    function addToPrefiltersOrTransports(structure) {\r\n\r\n        // dataTypeExpression is optional and defaults to \"*\"\r\n        return function(dataTypeExpression, func) {\r\n\r\n            if (typeof dataTypeExpression !== \"string\") {\r\n                func = dataTypeExpression;\r\n                dataTypeExpression = \"*\";\r\n            }\r\n\r\n            var dataType,\r\n                i = 0,\r\n                dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\r\n\r\n            if (jQuery.isFunction(func)) {\r\n\r\n                // For each dataType in the dataTypeExpression\r\n                while ((dataType = dataTypes[i++])) {\r\n\r\n                    // Prepend if requested\r\n                    if (dataType[0] === \"+\") {\r\n                        dataType = dataType.slice(1) || \"*\";\r\n                        (structure[dataType] = structure[dataType] || []).unshift(func);\r\n\r\n                        // Otherwise append\r\n                    } else {\r\n                        (structure[dataType] = structure[dataType] || []).push(func);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    var\r\n        prefilters = {},\r\n        transports = {},\r\n        rnotwhite = (/\\S+/g);\r\n\r\n    $.ajaxPrefilter = addToPrefiltersOrTransports(prefilters);\r\n    $.ajaxTransport = addToPrefiltersOrTransports(transports);\r\n    $.ajaxSetup = function(target, settings) {\r\n        langx.mixin(langx.Xhr.defaultOptions,target,settings);\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/callbacks',[\r\n    \"./core\"\r\n], function($) {\r\n\r\n    //     This module is borrow from zepto.callback.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    // Create a collection of callbacks to be fired in a sequence, with configurable behaviour\r\n    // Option flags:\r\n    //   - once: Callbacks fired at most one time.\r\n    //   - memory: Remember the most recent context and arguments\r\n    //   - stopOnFalse: Cease iterating over callback list\r\n    //   - unique: Permit adding at most one instance of the same callback\r\n    $.Callbacks = function(options) {\r\n        options = $.extend({}, options)\r\n\r\n        var memory, // Last fire value (for non-forgettable lists)\r\n            fired, // Flag to know if list was already fired\r\n            firing, // Flag to know if list is currently firing\r\n            firingStart, // First callback to fire (used internally by add and fireWith)\r\n            firingLength, // End of the loop when firing\r\n            firingIndex, // Index of currently firing callback (modified by remove if needed)\r\n            list = [], // Actual callback list\r\n            stack = !options.once && [], // Stack of fire calls for repeatable lists\r\n            fire = function(data) {\r\n                memory = options.memory && data\r\n                fired = true\r\n                firingIndex = firingStart || 0\r\n                firingStart = 0\r\n                firingLength = list.length\r\n                firing = true\r\n                for (; list && firingIndex < firingLength; ++firingIndex) {\r\n                    if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\r\n                        memory = false\r\n                        break\r\n                    }\r\n                }\r\n                firing = false\r\n                if (list) {\r\n                    if (stack) stack.length && fire(stack.shift())\r\n                    else if (memory) list.length = 0\r\n                    else Callbacks.disable()\r\n                }\r\n            },\r\n\r\n            Callbacks = {\r\n                add: function() {\r\n                    if (list) {\r\n                        var start = list.length,\r\n                            add = function(args) {\r\n                                $.each(args, function(_, arg) {\r\n                                    if (typeof arg === \"function\") {\r\n                                        if (!options.unique || !Callbacks.has(arg)) list.push(arg)\r\n                                    } else if (arg && arg.length && typeof arg !== 'string') add(arg)\r\n                                })\r\n                            }\r\n                        add(arguments)\r\n                        if (firing) firingLength = list.length\r\n                        else if (memory) {\r\n                            firingStart = start\r\n                            fire(memory)\r\n                        }\r\n                    }\r\n                    return this\r\n                },\r\n                remove: function() {\r\n                    if (list) {\r\n                        $.each(arguments, function(_, arg) {\r\n                            var index\r\n                            while ((index = $.inArray(arg, list, index)) > -1) {\r\n                                list.splice(index, 1)\r\n                                // Handle firing indexes\r\n                                if (firing) {\r\n                                    if (index <= firingLength) --firingLength\r\n                                    if (index <= firingIndex) --firingIndex\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    return this\r\n                },\r\n                has: function(fn) {\r\n                    return !!(list && (fn ? $.inArray(fn, list) > -1 : list.length))\r\n                },\r\n                empty: function() {\r\n                    firingLength = list.length = 0\r\n                    return this\r\n                },\r\n                disable: function() {\r\n                    list = stack = memory = undefined\r\n                    return this\r\n                },\r\n                disabled: function() {\r\n                    return !list\r\n                },\r\n                lock: function() {\r\n                    stack = undefined;\r\n                    if (!memory) Callbacks.disable()\r\n                    return this\r\n                },\r\n                locked: function() {\r\n                    return !stack\r\n                },\r\n                fireWith: function(context, args) {\r\n                    if (list && (!fired || stack)) {\r\n                        args = args || []\r\n                        args = [context, args.slice ? args.slice() : args]\r\n                        if (firing) stack.push(args)\r\n                        else fire(args)\r\n                    }\r\n                    return this\r\n                },\r\n                fire: function() {\r\n                    return Callbacks.fireWith(this, arguments)\r\n                },\r\n                fired: function() {\r\n                    return !!fired\r\n                }\r\n            }\r\n\r\n        return Callbacks\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/deferred',[\r\n    \"./core\",\r\n    \"skylark-langx/langx\"\r\n], function($,langx) {\r\n\r\n    $.Deferred = function() {\r\n        var d = new langx.Deferred(),\r\n            _p = d.promise;\r\n        d.promise = function() {\r\n            return _p;\r\n        }\r\n        return d;\r\n    };\r\n\r\n    $.when = function(){\r\n        var p = langx.Deferred.all(langx.makeArray(arguments)),\r\n            originThen = p.then;\r\n        p.then = function(onResolved,onRejected) {\r\n            var handler = function(results) {\r\n                results = results.map(function(result){\r\n                    return [result];\r\n                });\r\n                return onResolved && onResolved.apply(null,results);\r\n            };\r\n            return originThen.call(p,handler,onRejected);\r\n        };\r\n        return p;\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/queue',[\r\n    \"skylark-langx/langx\",\r\n    \"./core\",\r\n    \"./callbacks\"\r\n], function(langx, $) {\r\n\r\n // jQuery Data object\r\n  var rbrace = /(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,\r\n      rmultiDash = /([A-Z])/g,\r\n      expando = \"Sky\" + ( '1.0' + Math.random() ).replace( /\\D/g, \"\"),\r\n      optionsCache = {},\r\n      core_rnotwhite = /\\S+/g,\r\n      core_deletedIds = [],\r\n      core_push = core_deletedIds.push;\r\n\r\n// Convert String-formatted options into Object-formatted ones and store in cache\r\n  function createOptions( options ) {\r\n    var object = optionsCache[ options ] = {};\r\n    $.each( options.match( core_rnotwhite ) || [], function( _, flag ) {\r\n      object[ flag ] = true;\r\n    });\r\n    return object;\r\n  }\r\n\r\n  function isArraylike( obj ) {\r\n    var length = obj.length,\r\n        type = $.type( obj );\r\n\r\n    if ( $.isWindow( obj ) ) {\r\n      return false;\r\n    }\r\n\r\n    if ( obj.nodeType === 1 && length ) {\r\n      return true;\r\n    }\r\n\r\n    return type === \"array\" || type !== \"function\" &&\r\n        ( length === 0 ||\r\n            typeof length === \"number\" && length > 0 && ( length - 1 ) in obj );\r\n  }\r\n\r\n  \r\n\r\n  function Data() {\r\n    // Support: Android < 4,\r\n    // Old WebKit does not have Object.preventExtensions/freeze method,\r\n    // return new empty object instead with no [[set]] accessor\r\n    Object.defineProperty( this.cache = {}, 0, {\r\n      get: function() {\r\n        return {};\r\n      }\r\n    });\r\n\r\n    this.expando = expando + Math.random();\r\n  }\r\n\r\n  Data.uid = 1;\r\n\r\n  Data.accepts = function( owner ) {\r\n    // Accepts only:\r\n    //  - Node\r\n    //    - Node.ELEMENT_NODE\r\n    //    - Node.DOCUMENT_NODE\r\n    //  - Object\r\n    //    - Any\r\n    return owner.nodeType ?\r\n        owner.nodeType === 1 || owner.nodeType === 9 : true;\r\n  };\r\n\r\n  Data.prototype = {\r\n    key: function( owner ) {\r\n      // We can accept data for non-element nodes in modern browsers,\r\n      // but we should not, see #8335.\r\n      // Always return the key for a frozen object.\r\n      if ( !Data.accepts( owner ) ) {\r\n        return 0;\r\n      }\r\n\r\n      var descriptor = {},\r\n      // Check if the owner object already has a cache key\r\n          unlock = owner[ this.expando ];\r\n\r\n      // If not, create one\r\n      if ( !unlock ) {\r\n        unlock = Data.uid++;\r\n\r\n        // Secure it in a non-enumerable, non-writable property\r\n        try {\r\n          descriptor[ this.expando ] = { value: unlock };\r\n          Object.defineProperties( owner, descriptor );\r\n\r\n          // Support: Android < 4\r\n          // Fallback to a less secure definition\r\n        } catch ( e ) {\r\n          descriptor[ this.expando ] = unlock;\r\n          $.extend( owner, descriptor );\r\n        }\r\n      }\r\n\r\n      // Ensure the cache object\r\n      if ( !this.cache[ unlock ] ) {\r\n        this.cache[ unlock ] = {};\r\n      }\r\n\r\n      return unlock;\r\n    },\r\n    set: function( owner, data, value ) {\r\n      var prop,\r\n      // There may be an unlock assigned to this node,\r\n      // if there is no entry for this \"owner\", create one inline\r\n      // and set the unlock as though an owner entry had always existed\r\n          unlock = this.key( owner ),\r\n          cache = this.cache[ unlock ];\r\n\r\n      // Handle: [ owner, key, value ] args\r\n      if ( typeof data === \"string\" ) {\r\n        cache[ data ] = value;\r\n\r\n        // Handle: [ owner, { properties } ] args\r\n      } else {\r\n        // Fresh assignments by object are shallow copied\r\n        if ( $.isEmptyObject( cache ) ) {\r\n          $.extend( this.cache[ unlock ], data );\r\n          // Otherwise, copy the properties one-by-one to the cache object\r\n        } else {\r\n          for ( prop in data ) {\r\n            cache[ prop ] = data[ prop ];\r\n          }\r\n        }\r\n      }\r\n      return cache;\r\n    },\r\n    get: function( owner, key ) {\r\n      // Either a valid cache is found, or will be created.\r\n      // New caches will be created and the unlock returned,\r\n      // allowing direct access to the newly created\r\n      // empty data object. A valid owner object must be provided.\r\n      var cache = this.cache[ this.key( owner ) ];\r\n\r\n      return key === undefined ?\r\n          cache : cache[ key ];\r\n    },\r\n    access: function( owner, key, value ) {\r\n      var stored;\r\n      // In cases where either:\r\n      //\r\n      //   1. No key was specified\r\n      //   2. A string key was specified, but no value provided\r\n      //\r\n      // Take the \"read\" path and allow the get method to determine\r\n      // which value to return, respectively either:\r\n      //\r\n      //   1. The entire cache object\r\n      //   2. The data stored at the key\r\n      //\r\n      if ( key === undefined ||\r\n          ((key && typeof key === \"string\") && value === undefined) ) {\r\n\r\n        stored = this.get( owner, key );\r\n\r\n        return stored !== undefined ?\r\n            stored : this.get( owner, $.camelCase(key) );\r\n      }\r\n\r\n      // [*]When the key is not a string, or both a key and value\r\n      // are specified, set or extend (existing objects) with either:\r\n      //\r\n      //   1. An object of properties\r\n      //   2. A key and value\r\n      //\r\n      this.set( owner, key, value );\r\n\r\n      // Since the \"set\" path can have two possible entry points\r\n      // return the expected data based on which path was taken[*]\r\n      return value !== undefined ? value : key;\r\n    },\r\n    remove: function( owner, key ) {\r\n      var i, name, camel,\r\n          unlock = this.key( owner ),\r\n          cache = this.cache[ unlock ];\r\n\r\n      if ( key === undefined ) {\r\n        this.cache[ unlock ] = {};\r\n\r\n      } else {\r\n        // Support array or space separated string of keys\r\n        if ( $.isArray( key ) ) {\r\n          // If \"name\" is an array of keys...\r\n          // When data is initially created, via (\"key\", \"val\") signature,\r\n          // keys will be converted to camelCase.\r\n          // Since there is no way to tell _how_ a key was added, remove\r\n          // both plain key and camelCase key. #12786\r\n          // This will only penalize the array argument path.\r\n          name = key.concat( key.map( $.camelCase ) );\r\n        } else {\r\n          camel = $.camelCase( key );\r\n          // Try the string as a key before any manipulation\r\n          if ( key in cache ) {\r\n            name = [ key, camel ];\r\n          } else {\r\n            // If a key with the spaces exists, use it.\r\n            // Otherwise, create an array by matching non-whitespace\r\n            name = camel;\r\n            name = name in cache ?\r\n                [ name ] : ( name.match( core_rnotwhite ) || [] );\r\n          }\r\n        }\r\n\r\n        i = name.length;\r\n        while ( i-- ) {\r\n          delete cache[ name[ i ] ];\r\n        }\r\n      }\r\n    },\r\n    hasData: function( owner ) {\r\n      return !$.isEmptyObject(\r\n          this.cache[ owner[ this.expando ] ] || {}\r\n      );\r\n    },\r\n    discard: function( owner ) {\r\n      if ( owner[ this.expando ] ) {\r\n        delete this.cache[ owner[ this.expando ] ];\r\n      }\r\n    }\r\n  };\r\n\r\n  var data_priv = new Data();\r\n\r\n  $.extend($, {\r\n    queue: function( elem, type, data ) {\r\n      var queue;\r\n\r\n      if ( elem ) {\r\n        type = ( type || \"fx\" ) + \"queue\";\r\n        queue = data_priv.get( elem, type );\r\n\r\n        // Speed up dequeue by getting out quickly if this is just a lookup\r\n        if ( data ) {\r\n          if ( !queue || $.isArray( data ) ) {\r\n            queue = data_priv.access( elem, type, $.makeArray(data) );\r\n          } else {\r\n            queue.push( data );\r\n          }\r\n        }\r\n        return queue || [];\r\n      }\r\n    },\r\n\r\n    dequeue: function( elem, type ) {\r\n      type = type || \"fx\";\r\n\r\n      var queue = $.queue( elem, type ),\r\n          startLength = queue.length,\r\n          fn = queue.shift(),\r\n          hooks = $._queueHooks( elem, type ),\r\n          next = function() {\r\n            $.dequeue( elem, type );\r\n          };\r\n\r\n      // If the fx queue is dequeued, always remove the progress sentinel\r\n      if ( fn === \"inprogress\" ) {\r\n        fn = queue.shift();\r\n        startLength--;\r\n      }\r\n\r\n      if ( fn ) {\r\n\r\n        // Add a progress sentinel to prevent the fx queue from being\r\n        // automatically dequeued\r\n        if ( type === \"fx\" ) {\r\n          queue.unshift( \"inprogress\" );\r\n        }\r\n\r\n        // clear up the last queue stop function\r\n        delete hooks.stop;\r\n        fn.call( elem, next, hooks );\r\n      }\r\n\r\n      if ( !startLength && hooks ) {\r\n        hooks.empty.fire();\r\n      }\r\n    },\r\n\r\n    // not intended for public consumption - generates a queueHooks object, or returns the current one\r\n    _queueHooks: function( elem, type ) {\r\n      var key = type + \"queueHooks\";\r\n      return data_priv.get( elem, key ) || data_priv.access( elem, key, {\r\n        empty: $.Callbacks(\"once memory\").add(function() {\r\n          data_priv.remove( elem, [ type + \"queue\", key ] );\r\n        })\r\n      });\r\n    },\r\n\r\n    // array operations\r\n    makeArray: function( arr, results ) {\r\n      var ret = results || [];\r\n\r\n      if ( arr != null ) {\r\n        if ( isArraylike( Object(arr) ) ) {\r\n          $.merge( ret,\r\n              typeof arr === \"string\" ?\r\n                  [ arr ] : arr\r\n          );\r\n        } else {\r\n          core_push.call( ret, arr );\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    },\r\n    merge: function( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n  });\r\n\r\n  $.extend($.fn, {\r\n    queue: function( type, data ) {\r\n      var setter = 2;\r\n\r\n      if ( typeof type !== \"string\" ) {\r\n        data = type;\r\n        type = \"fx\";\r\n        setter--;\r\n      }\r\n\r\n      if ( arguments.length < setter ) {\r\n        return $.queue( this[0], type );\r\n      }\r\n\r\n      return data === undefined ?\r\n          this :\r\n          this.each(function() {\r\n            var queue = $.queue( this, type, data );\r\n\r\n            // ensure a hooks for this queue\r\n            $._queueHooks( this, type );\r\n\r\n            if ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\r\n              $.dequeue( this, type );\r\n            }\r\n          });\r\n    },\r\n    dequeue: function( type ) {\r\n      return this.each(function() {\r\n        $.dequeue( this, type );\r\n      });\r\n    },\r\n    // Based off of the plugin by Clint Helfers, with permission.\r\n    // http://blindsignals.com/index.php/2009/07/jquery-delay/\r\n    delay: function( time, type ) {\r\n      time = $.fx ? $.fx.speeds[ time ] || time : time;\r\n      type = type || \"fx\";\r\n\r\n      return this.queue( type, function( next, hooks ) {\r\n        var timeout = setTimeout( next, time );\r\n        hooks.stop = function() {\r\n          clearTimeout( timeout );\r\n        };\r\n      });\r\n    },\r\n    clearQueue: function( type ) {\r\n      return this.queue( type || \"fx\", [] );\r\n    },\r\n    // Get a promise resolved when queues of a certain type\r\n    // are emptied (fx is the type by default)\r\n    promise: function( type, obj ) {\r\n      var tmp,\r\n          count = 1,\r\n          defer = $.Deferred(),\r\n          elements = this,\r\n          i = this.length,\r\n          resolve = function() {\r\n            if ( !( --count ) ) {\r\n              defer.resolveWith( elements, [ elements ] );\r\n            }\r\n          };\r\n\r\n      if ( typeof type !== \"string\" ) {\r\n        obj = type;\r\n        type = undefined;\r\n      }\r\n      type = type || \"fx\";\r\n\r\n      while( i-- ) {\r\n        tmp = data_priv.get( elements[ i ], type + \"queueHooks\" );\r\n        if ( tmp && tmp.empty ) {\r\n          count++;\r\n          tmp.empty.add( resolve );\r\n        }\r\n      }\r\n      resolve();\r\n      return defer.promise( obj );\r\n    }\r\n  });\r\n\r\n  return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/main',[\r\n    \"./core\",\r\n    \"./ajax\",\r\n    \"./callbacks\",\r\n    \"./deferred\",\r\n    \"./queue\",\r\n\t\"skylark-utils/widgets\"    \r\n], function($) {\r\n    return $;\r\n});\r\n\ndefine('skylark-jquery', ['skylark-jquery/main'], function (main) { return main; });\n\n"]}