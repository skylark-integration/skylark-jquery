{"version":3,"sources":["skylark-utils.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","window","skylark","skylarkjs","compact","array","filter","call","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","e","each","obj","callback","key","undef","this","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","url","location","href","segs","params","queryParam","nv","inArray","indexOf","isArray","object","Array","isString","isBoolean","isDocument","nodeType","DOCUMENT_NODE","type","isObject","isPlainObject","isWindow","Object","getPrototypeOf","prototype","isDefined","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","makeArray","offset","startWith","concat","slice","elements","values","proxy","fn","arguments","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","String","removeItem","items","splice","_mixin","target","source","deep","safe","undefined","_parseMixinArgs","shift","sources","mixin","safeMixin","substitute","template","transform","thisObject","getObject","match","retVal","getValue","keys","_k","reverse","v","format","toString","uid","_uid","uniq","langx","createClass","extendClass","ctor","props","options","proto","_super","superclass","noOverrided","superFn","tmp","overrided","ret","parent","_constructor","constructor","init","klassName","Function","create","__proto__","partial","inherit","Evented","on","events","selector","data","ctx","one","self","_hub","trigger","CustomEvent","eventName","listeners","len","reCompact","listener","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","_","unlistenTo","a","document","createElement","class2type","camelCase","toUpperCase","klass","lowerFirst","charAt","returnTrue","returnFalse","upperFirst","debounce","wait","timeout","later","clearTimeout","setTimeout","nextTick","requestAnimationFrame","async","Deferred","promise","Promise","resolve","reject","_resolve","_reject","bind","reason","then","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","progress","err","d","immediate","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","RegExp","cssPropName","ensureNodes","nodes","copyByClone","node","cloneNode","nodeName","elm","chkName","contents","contentDocument","childNodes","html","innerHTML","empty","appendChild","clone","isIE","getAttribs","attr","setAttrib","getAttrib","tag","createFragment","singleTagRE","$1","fragmentRE","containers","container","dom","removeChild","contains","child","isChildOf","createTextNode","text","doc","hasChildNodes","firstChild","documentElement","parentNode","isDoc","ownerDoc","ownerDocument","after","placing","refNode","nextSibling","insertBefore","before","prepend","append","remove","oldNode","replaceChild","throb","timer","time","throbber","className","unwrap","wrapper","render","traverse","children","wrapperNode","wrapperInner","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","construct","_createStyleSheet","link","count","rel","defer","head","sheetElementsById","css","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","index","addRule","createStyleSheet","cssText","loadStyleSheet","loadedCallback","errorCallback","sheet","state","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","matchSelector","selectorText","normalizeRule","support","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","velm","ancestor","root","matches","ancestors","byId","getElementById","closest","descendants","querySelectorAll","matchError","local","query","descendant","querySelector","find","body","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","attributes","operator","cache","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","checked","disabled","enabled","eq","focus","activeElement","tabindex","has","sel","hidden","selected","visible","offsetWidth","divide","cond","nativeSelector","customPseudos","Operator","stringify","part","undefine","getAttribute","cls","pseudo","hasAttribute","simpleExpCounter","currentExpression","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","setAttribute","removeAttribute","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","removeData","names","pluck","property","prop","propMap","removeAttr","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","maybeAddPx","cssNumber","classRE","classReCache","svg","baseVal","defaultDisplay","element","display","elementDisplay","getComputedStyle","getPropertyValue","show","styler","isInvisible","hide","addClass","re","computedStyle","removeProperty","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","offsetParent","rootNodeRE","borderExtents","s","left","px","borderLeftWidth","top","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","height","dimension","width","clientWidth","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","relativeRect","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","getEl","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","sort","createProxy","originalEvent","ignoreProperties","$this","handler","findHandler","unregister","ready","register","stop","keyCode","preventDefault","stopPropagation","evented","Event","createEvent","_args","dispatchEvent","readyRE","readyState","addEventListener","shortcuts","registry","run","shortcut","n","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","submit","reset","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","some","isImmediatePropagationStopped","currentTarget","liveFired","l","related","relatedTarget","console","warn","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","delete","draggable","Draggable","droppable","Droppable","dnd","DndManager","start","p","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingGhost","draggingTransfer","dataTransfer","setData","setDragImage","effectAllowed","end","manager","draggingClass","allowed","_params","handle","hoverClass","activeClass","acceptable","e2","dropEffect","selectFile","selectFiles","pickedFiles","maxFileSize","fileSelected","fileInput","input","position","onchange","files","filer","picker","pickedCallback","picked","dropzone","droppedCallback","dropped","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","animationDelay","fast","slow","movable","updateWithTouchData","changedTouches","overlayDiv","downButton","startX","startY","originalPos","handleEl","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","button","screenX","screenY","zIndex","move","deltaX","deltaY","t","minX","maxX","minY","maxY","mover","wrapper_map","func","elem","wrapper_selector","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","exec","wrapper_node_operation","argType","el","get","toArray","not","is","excludes","collection","parents","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","detach","Dimension","m","margin","cb","me","mb","insertAfter","appendTo","prependTo","toogle","prevObject","andSelf","place","addContent","content","replaceClass","newClass","oldClass","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","script","src","deleteJavaScript","DataTransfer","_dropEffect","_effectAllowed","_data","defineProperty","set","enumerable","configurable","clearData","getData","img","offsetX","offsetY","ddt","DragDropTouch","_instance","_imgCustom","_imgOffset","_lastClick","supportsPassive","passive","ts","_touchstart","tm","_touchmove","te","_touchend","opt","capture","getInstance","_this","_shouldHandle","now","_DBLCLICK","_dispatchEvent","_reset","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","_img","_CTXMENU","_getTarget","delta","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","defaultPrevented","touches","_dataTransfer","page","clientX","clientY","abs","pt","elementFromPoint","pointerEvents","parentElement","_copyStyle","rc","_OPACITY","_copyProps","dst","_rmvAtts","att","HTMLCanvasElement","cSrc","cDst","getContext","drawImage","evt","initEvent","which","buttons","_kbdProps","_ptProps","_delegator","domNode","HTMLElement","VisualElement","batch","action","delegate","main"],"mappings":"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CAqD,EAAArD,GAAA08B,EAAAj/B,EAAAuC,GAAAvC,KAGAo/B,EAAAt4B,QAAAlB,MAKAmQ,EAAAwpB,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACAjhB,GAGAvI,EAAAwpB,UACA,YACA,aACA7Q,GAIA3Y,EAAAwpB,UACA,MACA,KACA,MACA,YACA,WACAvW,GAGAjT,EAAAwpB,UACA,SACA,YACAtO,GAGAlb,EAAAwpB,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACA3iB,GAEA7G,EAAAe,KAAA,SAAA3P,GACA,MAAA,SAAAA,EACAzH,KAAAuW,KAEAvW,KAAAuW,KAAAW,WAAAzP,IAKA4O,EAAAwpB,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACAjN,GAIAvc,EAAAwpB,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACAxZ,GAGAhQ,EAAAwpB,UACA,WACA7Q,GAIA3Y,EAAAwpB,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAjuB,GAGAyE,EAAAwpB,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAxf,GACA3hB,EAAA2X,KAAAA,IAGA7Y,EAAA,sBACA,YACA,UACA,YACA,QACA,UACA,QACA,YACA,UACA,WACA,OACA,SACA,UACA,UACA,UACA,aACA,WACA,WACA,UACA,UACA,SAAAkB,GACA,MAAAA,KAGAlB,EAAA,iBAAA,sBAAA,SAAAsiC;AAAA,MAAAA,MAgFE9/B","file":"../skylark-utils.js","sourcesContent":["define('skylark-utils/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/langx',[\"./skylark\"], function(skylark) {\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter;\r\n\r\n\r\n    var createClass = (function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                proto[name] = typeof props[name] == \"function\" && !noOverrided && typeof _super[name] == \"function\" ?\r\n                    (function(name, fn, superFn) {\r\n                        return function() {\r\n                            var tmp = this.overrided;\r\n\r\n                            // Add a new ._super() method that is the same method\r\n                            // but on the super-class\r\n                            this.overrided = superFn;\r\n\r\n                            // The method only need to be bound temporarily, so we\r\n                            // remove it when we're done executing\r\n                            var ret = fn.apply(this, arguments);\r\n\r\n                            this.overrided = tmp;\r\n\r\n                            return ret;\r\n                        };\r\n                    })(name, props[name], _super[name]) :\r\n                    props[name];\r\n            }\r\n\r\n            return ctor;\r\n        }\r\n\r\n        return function createClass(props, parent, options) {\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"ctor._constructor.apply(inst, arguments);\" +\r\n                    \"return inst;\" +\r\n                    \"}\"\r\n                )();\r\n            ctor._constructor = _constructor;\r\n            parent = parent || Object;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(parent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = parent;\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props,options) {\r\n                    return createClass(props, this,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props,options);\r\n\r\n            return ctor;\r\n        }\r\n    })();\r\n\r\n    var Evented = createClass({\r\n        on: function(events,selector,data,callback,ctx,/*used internally*/one) {\r\n\t        var self = this,\r\n\t        \t_hub = this._hub || (this._hub = {});\r\n\t        \r\n\t        if (isPlainObject(events)) {\r\n\t        \tctx = callback;\r\n\t            each(events, function(type, fn) {\r\n\t                self.on(type,selector, data, fn, ctx, one);\r\n\t            });\r\n\t            return this;\r\n\t        }\r\n\t        \r\n\t        if (!isString(selector) && !isFunction(callback)) {\r\n\t        \tctx = callback;\r\n\t            callback = data;\r\n\t            data = selector;\r\n\t            selector = undefined;\r\n\t        }\r\n\t        \r\n\t        if (isFunction(data)) {\r\n\t            ctx = callback;\r\n\t            callback = data;\r\n\t            data = null;\r\n\t        }\r\n\t\r\n\t        if (isString(events)) {\r\n\t            events = events.split(/\\s/)\r\n\t        }\r\n\t        \r\n\t        events.forEach(function(name) {\r\n\t            (_hub[name] || (_hub[name] = [])).push({\r\n\t                fn: callback,\r\n\t                selector: selector,\r\n\t                data: data,\r\n\t                ctx: ctx,\r\n\t                one: one\r\n\t            });\r\n\t        });\r\n\t\r\n\t        return this;\r\n\t    },\r\n\t\r\n\t    one: function(events,selector,data,callback,ctx) {\r\n\t        return this.on(events,selector,data,callback,ctx,1);\r\n\t    },\r\n\t\r\n\t    trigger: function(e/*,argument list*/) {\r\n\t    \tif (!this._hub) {\r\n\t    \t\treturn this;\r\n\t    \t}\r\n\t    \t\r\n\t    \tvar self = this;\r\n\t    \t\r\n\t    \tif (isString(e)) {\r\n\t    \t\te = new CustomEvent(e);\r\n\t    \t}\r\n\t    \t\r\n\t        var args = slice.call(arguments,1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n\t        [e.type || e.name ,\"all\"].forEach(function(eventName){\r\n\t\t        var listeners = self._hub[eventName];\r\n\t\t        if (!listeners){\r\n\t\t        \treturn;\r\n\t\t        }\r\n\t        \r\n\t\t        var len = listeners.length,\r\n\t\t        \treCompact = false;\r\n\t\t        \r\n\t\t        for (var i = 0; i < len; i++) {\r\n\t\t        \tvar listener = listeners[i];\r\n\t\t            if (e.data) {\r\n\t\t                if (listener.data) {\r\n\t\t                    e.data = mixin({}, listener.data, e.data);\r\n\t\t                }\r\n\t\t            } else {\r\n\t\t                e.data = listener.data || null;\r\n\t\t            }\r\n\t\t            listener.fn.apply(listener.ctx, args);\r\n\t\t            if (listener.one){\r\n\t\t            \tlisteners[i] = null;\r\n\t\t            \treCompact = true;\r\n\t\t            }\t        \t\t\r\n\t\t        }\r\n\t\t        \r\n\t\t        if (reCompact){\r\n\t\t        \tself._hub[eventName] = compact(listeners);\r\n\t\t        }\r\n\t        \t\r\n\t        });\r\n\t        return this;\r\n\t    },\r\n\t\r\n\t    listened: function(event) {\r\n\t        var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n\t        return evtArr.length > 0;\r\n\t    },\r\n\t\r\n\t    listenTo: function(obj, event, callback,/*used internally*/one) {\r\n\t        if (!obj) {\r\n\t        \treturn this;\r\n\t        }\r\n\r\n\t        // Bind callbacks on obj, \r\n\t        if (isString(callback)) {\r\n\t        \tcallback = this[callback];\r\n\t        }\r\n\t        \r\n\t        if (one){\r\n\t\t        obj.one(event,callback,this);\r\n\t        } else {\r\n\t\t        obj.on(event,callback,this);\r\n\t        }\r\n\t        \r\n\t        //keep track of them on listening.\r\n\t        var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n\t        \tlistening;\r\n\r\n\t        for (var i=0;i<listeningTo.length;i++) {\r\n\t        \tif (listeningTo[i].obj == obj) {\r\n\t        \t\tlistening = listeningTo[i];\r\n\t        \t\tbreak;\r\n\t        \t}\r\n\t        }\r\n\t        if (!listening) {\r\n\t        \tlisteningTo.push(\r\n\t        \t\tlistening = {\r\n\t        \t\t\tobj : obj,\r\n\t        \t\t\tevents : {\r\n\t        \t\t\t}\r\n\t        \t    }\r\n\t        \t);\r\n\t        }\r\n\t        var listeningEvents = listening.events,\r\n\t        \tlisteningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n\t        if (listeningEvent.indexOf(callback)==-1) {\r\n\t        \tlisteningEvent.push(callback);\r\n\t        }\r\n\t\r\n\t        return this;\r\n\t    },\r\n\t    \r\n\t    listenToOnce: function(obj, event, callback) {\r\n\t    \treturn this.listenTo(obj,event,callback,1);\r\n\t    },\r\n\t    \r\n\t    off: function(events, callback) {\r\n\t        var _hub = this._hub || (this._hub = {});\r\n\t        if (isString(events)) {\r\n\t            events = events.split(/\\s/)\r\n\t        }\r\n\t\r\n\t        events.forEach(function(name) {\r\n\t            var evts = _hub[name];\r\n\t            var liveEvents = [];\r\n\t\r\n\t            if (evts && callback) {\r\n\t                for (var i = 0, len = evts.length; i < len; i++) {\r\n\t                    if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n\t                        liveEvents.push(evts[i]);\r\n\t                }\r\n\t            }\r\n\t\r\n\t            if (liveEvents.length) {\r\n\t            \t_hub[name] = liveEvents;\r\n\t            } else {\r\n\t            \tdelete _hub[name];\r\n\t            }\r\n\t        });\r\n\t\r\n\t        return this;\r\n\t    },\r\n\t    unlistenTo : function(obj, event, callback) {\r\n\t        var listeningTo = this._listeningTo;\r\n\t        if (!listeningTo) {\r\n\t        \treturn this;\r\n\t        }\r\n\t        for (var i = 0; i < listeningTo.length; i++) {\r\n\t          var listening = listeningTo[i];\r\n\t          \r\n\t          if (obj && obj != listening.obj) {\r\n\t        \t  continue;\r\n\t          }\r\n\t          \r\n\t          var listeningEvents = listening.events;\r\n\t          for (var eventName in listeningEvents) {\r\n\t        \t if (event && event != eventName) {\r\n\t        \t\t continue;\r\n\t        \t }\r\n\t        \t \r\n\t        \t listeningEvent = listeningEvents[eventName];\r\n\t        \t \r\n\t        \t for (var j=0;j<listeningEvent.length;j++) {\r\n\t        \t\t if (!callback || callback == listeningEvent[i]) {\r\n\t        \t\t\t listening.obj.off(eventName, listeningEvent[i], this);\r\n\t        \t\t\t listeningEvent[i] = null;\r\n\t        \t\t }\r\n\t        \t }\r\n\t        \t \r\n\t        \t listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\t        \t \r\n\t        \t if (isEmptyObject(listeningEvent)) {\r\n\t        \t\t listeningEvents[eventName] = null; \r\n\t        \t }\r\n\t        \t \r\n\t          }\r\n\t          \r\n\t          if (isEmptyObject(listeningEvents)) {\r\n\t        \t  listeningTo[i] = null;\r\n\t          }\r\n\t        }\r\n\t        \r\n\t        listeningTo = this._listeningTo = compact(listeningTo);\r\n\t        if (isEmptyObject(listeningTo)) {\r\n\t        \tthis._listeningTo = null;\r\n\t        }\r\n        \r\n\t        return this;\r\n\t    }  \r\n    });\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n    \r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }    \r\n    \r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0;i<array.length;i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j<item.length;j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object instanceof Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && typeof obj.length == 'number';\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n        \tif (obj[name] !== null) {\r\n        \t\treturn false;\r\n        \t}\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n    \r\n    function removeItem(items,item) {\r\n    \tif (isArray(items)) {\r\n        \tvar idx = items.indexOf(item);\r\n        \tif (idx != -1) {\r\n        \t\titems.splice(idx, 1);\r\n        \t}    \t\t\r\n    \t} else if (isPlainObject(items)) {\r\n    \t\tfor (var key in items) {\r\n    \t\t\tif (items[key] == item) {\r\n    \t\t\t\tdelete items[key];\r\n    \t\t\t\tbreak;\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n\r\n    \treturn this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0);\r\n        target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var _uid = 1;\r\n    function uid(obj) {\r\n        return obj._uid || obj.id || (obj._uid = _uid++);\r\n    }\r\n    \r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n    \r\n    mixin(langx, {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        compact: compact,\r\n\r\n        dasherize: dasherize,\r\n\r\n        Evented: Evented,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n        \r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        klass: function(props, parent, options) {\r\n            return createClass(props, parent, options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n        \r\n        uid: uid,\r\n        \r\n        uniq: uniq,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\r\n\ndefine('skylark-utils/async',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n\r\n    var Deferred = function() {\r\n        this.promise = new Promise(function(resolve, reject) {\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n        }.bind(this));\r\n\r\n        this.resolve = Deferred.prototype.resolve.bind(this);\r\n        this.reject = Deferred.prototype.reject.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        this._resolve.call(this.promise, value);\r\n        return this.promise;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        this._reject.call(this.promise, reason);\r\n        return this.promise;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        return this.promise.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    function nextTick(fn) {\r\n        requestAnimationFrame(fn);\r\n        return this;\r\n    }\r\n\r\n    function async(fn) {\r\n        return async;\r\n    }\r\n\r\n    langx.mixin(async, {\r\n        all: Deferred.all,\r\n        debounce: debounce,\r\n        Deferred: Deferred,\r\n        first : Deferred.first,\r\n        nextTick : nextTick,\r\n        reject : Deferred.reject,\r\n        resolve : Deferred.resolve,\r\n        when: Deferred.when\r\n    });\r\n\r\n    return skylark.async = async;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        }\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function createElement(tag, props) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            langx.mixin(node, props);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        } \r\n       \r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n        \r\n        dom.forEach(function(node){\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isChildOf(node, parent) {\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            node.parentNode.removeChild(node);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.unwrap(elm);\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            };\r\n        if (text) throb.appendChild(this.createTextNode(text));\r\n        throbber.appendChild(throb);\r\n        this.wrapper(elm, throbber);\r\n        var render = function() {\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(render, time);\r\n        } else {\r\n            render();\r\n        }\r\n        return {\r\n            remove: remove\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder , {\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    local.pseudos = {\r\n        // custom pseudos\r\n        checked: function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        contains: function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        eq: function(elm, idx, nodes, value) {\r\n            return (idx === value);\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        first: function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        has: function(elm, idx, nodes, sel) {\r\n            return local.querySelector(elm, sel).length > 0;\r\n        },\r\n\r\n        hidden: function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        last: function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        parent: function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        selected: function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        visible: function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].Operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].Operator + JSON.stringify(attributes[i].value) + +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefine) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n        if (tag = cond.tag) {\r\n            var nodeName = node.nodeName.toUpperCase();\r\n            if (tag == '*') {\r\n                if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n            } else {\r\n                if (nodeName != tag) return false;\r\n            }\r\n        }\r\n\r\n        if (id = cond.id) {\r\n            if (node.getAttribute('id') != id) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        var i, part, cls, pseudo;\r\n\r\n        if (classes = cond.classes) {\r\n            for (i = classes.length; i--;) {\r\n                cls = node.getAttribute('class');\r\n                if (!(cls && classes[i].regexp.test(cls))) return false;\r\n            }\r\n        }\r\n\r\n        if (attributes)\r\n            for (i = attributes.length; i--;) {\r\n                part = attributes[i];\r\n                if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n            }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if (!pseudo(node, idx, nodes, part.value)) {\r\n                        return false;\r\n                    }\r\n                } else {\r\n                    if (!nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed = local.Slick.parse(selector);\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (node == root) {\r\n                break;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector) {\r\n        var ret = [];\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                ret.push(node);\r\n            }\r\n            if (node == ret) {\r\n                break;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(selector) {\r\n        return descendant(document.body, selector);\r\n    }\r\n\r\n    function findAll(selector) {\r\n        return descendants(document.body, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector)\r\n        } else {\r\n            return local.check(elm, selector);\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n        \r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        attr: attr,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (cls.match(re)) {\r\n                cls = cls.replace(re, \" \");\r\n            }\r\n        });\r\n\r\n        className(elm, cls.trim());\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: true,\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel;\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var elm = this.getEl(),\r\n            parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"] // 15\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 2, // DragEvent\r\n                \"beforecut\": 2, // DragEvent\r\n                \"beforepaste\": 2, // DragEvent\r\n                \"copy\": 2, // DragEvent\r\n                \"cut\": 2, // DragEvent\r\n                \"paste\": 2, // DragEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type;\r\n                type = props.type;\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: false,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(event) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: event\r\n            };\r\n        for (key in event) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && event[key] !== undefined) {\r\n                proxy[key] = event[key];\r\n            }\r\n        }\r\n        return compatible(proxy, event);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            binding = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        bindings.some(function(binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return true;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns) {\r\n                                return false;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return false;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                            return false;\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event);\r\n\r\n                event = parsed.type;\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                var listener = events[event];\r\n\r\n                if (listener) {\r\n                    listener.remove(fn, langx.mixin({\r\n                        ns: parsed.ns\r\n                    }, options));\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        (evented.dispatchEvent || evented.trigger).call(evented, e);\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            callback()\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger,\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          ghost : null,\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n        this.dragging = draggable;\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      end : function() {\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            allowed = false;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (allowed === true) {\r\n              datax.prop(self.elm, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            datax.prop(self.elm, \"draggable\", false);\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            manager.start(self, e);\r\n            styler.addClass(self.elm,draggingClass);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            styler.removeClass(self.elm,draggingClass);\r\n\r\n            manager.end();\r\n          }\r\n        });\r\n\r\n        if (params.handle) {\r\n          eventer.on(elm,{\r\n            \"mouseenter\" : function(e) {\r\n              allowed = true;\r\n            },\r\n            \"mouseleave\" : function(e) {\r\n              allowed = false;\r\n            }\r\n          },params.handle);\r\n        } else {\r\n          allowed = true;\r\n        }\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"ended\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            self.trigger(e2);\r\n\r\n            e.preventDefault() // allow drop\r\n\r\n            e.dataTransfer.dropEffect = \"copyMove\";\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end()\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\"\r\n], function(skylark, langx, eventer) {\r\n    var on = eventer.on,\r\n        attr = eventer.attr,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function selectFile(callback) {\r\n        fileSelected = callback;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                selectFiles(Array.prototype.slice.call(e.target.files));\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        input.click();\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        picker: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var pickedCallback = params.picked;\r\n\r\n            on(elm, \"click\", function(e) {\r\n                e.preventDefault();\r\n                selectFile(pickedCallback);\r\n            });\r\n            return this;\r\n        },\r\n\r\n        dropzone: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var droppedCallback = params.dropped;\r\n\r\n            on(elm, \"dragover,dragend\", function(e) {\r\n                return false;\r\n            });\r\n\r\n            on(elm, \"drop\", function(e) {\r\n                e.preventDefault();\r\n                if (droppedCallback) {\r\n                    droppedCallback(e.dataTransfer.files);\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\",\r\n    \"./eventer\",\r\n    \"./async\"\r\n], function(skylark, langx, browser, styler, eventer, async) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            async.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            async.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if(i<=freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) async.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, callback) {\r\n        animate(elm, { opacity: opacity }, speed, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, callback) {\r\n\r\n        fadeTo(elm, speed, 0, function() {\r\n            styler.hide(elm);\r\n            if (callback) {\r\n                callback.call(elm);\r\n            }\r\n\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, callback);\r\n        } else {\r\n            fadeOut(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                var l = originalPos.left + e.deltaX,\r\n                    t = originalPos.top + e.deltaY;\r\n                if (constraints) {\r\n\r\n                    if (l < constraints.minX) {\r\n                        l = constraints.minX;\r\n                    }\r\n\r\n                    if (l > constraints.maxX) {\r\n                        l = constraints.maxX;\r\n                    }\r\n\r\n                    if (t < constraints.minY) {\r\n                        t = constraints.minY;\r\n                    }\r\n\r\n                    if (t > constraints.maxY) {\r\n                        t = constraints.maxY;\r\n                    }\r\n                }\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./async\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, async, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                return func.apply(context, last ? [elem] : [elem, selector]);\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    self.attr(props);\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    }, Array);\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n\r\n            map: function(fn) {\r\n                return $(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                }))\r\n            },\r\n\r\n            slice: function() { \r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.concat($(selector, context))))\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: function(selector, context) {\r\n                var node = this[0],\r\n                    collection = false\r\n                if (typeof selector == 'object') collection = $(selector)\r\n                while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                    node = node !== context && !isDocument(node) && node.parentNode\r\n                return $(node)\r\n            },\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pageRect, geom, geom.pageRect),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom),\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        return $\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n});\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylark-utils/touchx',[], function() {\r\n\r\n    //The following code is borrow from DragDropTouch (https://github.com/Bernardo-Castilho/dragdroptouch)\r\n\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function() {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function() {\r\n                return this._dropEffect;\r\n            },\r\n            set: function(value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function() {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function(value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function() {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function(type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            } else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function(type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function(type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function() {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', null, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document,\r\n                    ts = this._touchstart.bind(this),\r\n                    tm = this._touchmove.bind(this),\r\n                    te = this._touchend.bind(this),\r\n                    opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function() {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function(e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function() {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img) {\r\n                    var delta = this._getDelta(e);\r\n                    if (delta > DragDropTouch._THRESHOLD) {\r\n                        this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                        this._createImage(e);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                    }\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function(e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function(e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function() {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._dataTransfer = new DataTransfer();\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function(e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function(e) {\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function(e) {\r\n            var pt = this._getPoint(e),\r\n                el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function(e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(),\r\n                    pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function() {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function(e) {\r\n            var _this = this;\r\n            if (this._img) {\r\n                requestAnimationFrame(function() {\r\n                    var pt = _this._getPoint(e, true),\r\n                        s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                });\r\n            }\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function(dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function(src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function(att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src,\r\n                    cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'),\r\n                    t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function(e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n\r\n    /*private*/\r\n    DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n\r\n    return DragDropTouch;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylark-utils/main',[\r\n    \"./skylark\",\r\n    \"./async\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./styler\",\r\n    \"./touchx\",\r\n    \"./langx\",\r\n    \"./velm\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils', ['skylark-utils/main'], function (main) { return main; });\n\n"]}