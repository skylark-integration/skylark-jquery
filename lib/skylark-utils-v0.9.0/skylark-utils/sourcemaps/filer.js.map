{"version":3,"sources":["filer.js"],"names":["define","skylark","langx","eventer","selectFile","callback","selectFiles","pickedFiles","i","length","size","maxFileSize","splice","fileSelected","fileInput","input","document","createElement","type","style","position","left","top","opacity","body","appendChild","onchange","e","Array","prototype","slice","call","target","files","value","click","on","attr","filer","mixin","picker","elm","params","pickedCallback","picked","preventDefault","this","dropzone","droppedCallback","dropped","dataTransfer"],"mappings":";;;;;;;AAAAA,QACI,YACA,UACA,aACD,SAASC,EAASC,EAAOC,GASxB,QAASC,GAAWC,GAKZ,QAASC,GAAYC,GACjB,IAAK,GAAIC,GAAID,EAAYE,OAAQD,KACzBD,EAAYC,GAAGE,KAAOC,GACtBJ,EAAYK,OAAOJ,EAAG,EAG9BK,GAAaN,GATrB,GADAM,EAAeR,GACVS,EAAW,CACZ,GAAIC,GAAQD,EAAYE,SAASC,cAAc,QAW/CF,GAAMG,KAAO,OACbH,EAAMI,MAAMC,SAAW,QACnBL,EAAMI,MAAME,KAAO,EACnBN,EAAMI,MAAMG,IAAM,EAClBP,EAAMI,MAAMI,QAAU,KACtBP,SAASQ,KAAKC,YAAYV,GAE9BA,EAAMW,SAAW,SAASC,GACtBrB,EAAYsB,MAAMC,UAAUC,MAAMC,KAAKJ,EAAEK,OAAOC,QAEhDlB,EAAMmB,MAAQ,IAGtBnB,EAAMoB,QAnCV,GAGIrB,GAEAD,EALAuB,EAAKjC,EAAQiC,GAMbzB,GALOR,EAAQkC,KAKD,EAAI,GAgClBC,EAAQ,WACR,MAAOA,GAqCX,OAlCApC,GAAMqC,MAAMD,GACRE,OAAQ,SAASC,EAAKC,GAClBA,EAASA,KAET,IAAIC,GAAiBD,EAAOE,MAM5B,OAJAR,GAAGK,EAAK,QAAS,SAASd,GACtBA,EAAEkB,iBACFzC,EAAWuC,KAERG,MAGXC,SAAU,SAASN,EAAKC,GACpBA,EAASA,KAET,IAAIM,GAAkBN,EAAOO,OAa7B,OAXAb,GAAGK,EAAK,mBAAoB,SAASd,GACjC,OAAO,IAGXS,EAAGK,EAAK,OAAQ,SAASd,GACrBA,EAAEkB,iBACEG,GACAA,EAAgBrB,EAAEuB,aAAajB,SAIhCa,QAKR7C,EAAQqC,MAAQA","file":"../filer.js","sourcesContent":["define([\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\"\r\n], function(skylark, langx, eventer) {\r\n    var on = eventer.on,\r\n        attr = eventer.attr,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function selectFile(callback) {\r\n        fileSelected = callback;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                selectFiles(Array.prototype.slice.call(e.target.files));\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        input.click();\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        picker: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var pickedCallback = params.picked;\r\n\r\n            on(elm, \"click\", function(e) {\r\n                e.preventDefault();\r\n                selectFile(pickedCallback);\r\n            });\r\n            return this;\r\n        },\r\n\r\n        dropzone: function(elm, params) {\r\n            params = params || {};\r\n\r\n            var droppedCallback = params.dropped;\r\n\r\n            on(elm, \"dragover,dragend\", function(e) {\r\n                return false;\r\n            });\r\n\r\n            on(elm, \"drop\", function(e) {\r\n                e.preventDefault();\r\n                if (droppedCallback) {\r\n                    droppedCallback(e.dataTransfer.files);\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n"]}